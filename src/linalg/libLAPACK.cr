require "./libCBLAS"

{% if flag?(:darwin) %}
  @[Link(ldflags: "-DACCELERATE_NEW_LAPACK")]
  @[Link(framework: "Accelerate")]
{% elsif flag?(:windows) %}
  @[Link("libopenblas")]
{% else %}
  @[Link("lapack")]
{% end %}
lib LibLAPACK
  alias Integer = LibC::Int
  alias Complex = LibCBLAS::ComplexFloat
  alias Real = LibC::Float
  alias Doublereal = LibC::Double
  alias Doublecomplex = LibCBLAS::ComplexDouble
  alias Logical = LibC::Char
  alias Ftnlen = LibC::Int
  alias LFp = Pointer(Void)
  fun cbdsqr(uplo : LibC::Char*, n : Integer*, ncvt : Integer*, nru : Integer*, ncc : Integer*, d__ : Real*, e : Real*, vt : Complex*, ldvt : Integer*, u : Complex*, ldu : Integer*, c__ : Complex*, ldc : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgbbrd(vect : LibC::Char*, m : Integer*, n : Integer*, ncc : Integer*, kl : Integer*, ku : Integer*, ab : Complex*, ldab : Integer*, d__ : Real*, e : Real*, q : Complex*, ldq : Integer*, pt : Complex*, ldpt : Integer*, c__ : Complex*, ldc : Integer*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgbcon(norm : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Complex*, ldab : Integer*, ipiv : Integer*, anorm : Real*, rcond : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgbequ(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Complex*, ldab : Integer*, r__ : Real*, c__ : Real*, rowcnd : Real*, colcnd : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun cgbequb(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Complex*, ldab : Integer*, r__ : Real*, c__ : Real*, rowcnd : Real*, colcnd : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun cgbrfs(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Complex*, ldab : Integer*, afb : Complex*, ldafb : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgbrfsx(trans : LibC::Char*, equed : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Complex*, ldab : Integer*, afb : Complex*, ldafb : Integer*, ipiv : Integer*, r__ : Real*, c__ : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgbsv(n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Complex*, ldab : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cgbsvx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Complex*, ldab : Integer*, afb : Complex*, ldafb : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Real*, c__ : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgbsvxx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Complex*, ldab : Integer*, afb : Complex*, ldafb : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Real*, c__ : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, rpvgrw : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgbtf2(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Complex*, ldab : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun cgbtrf(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Complex*, ldab : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun cgbtrs(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Complex*, ldab : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cgebak(job : LibC::Char*, side : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, scale : Real*, m : Integer*, v : Complex*, ldv : Integer*, info : Integer*) : LibC::Int
  fun cgebal(job : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, ilo : Integer*, ihi : Integer*, scale : Real*, info : Integer*) : LibC::Int
  fun cgebd2(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, d__ : Real*, e : Real*, tauq : Complex*, taup : Complex*, work : Complex*, info : Integer*) : LibC::Int
  fun cgebrd(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, d__ : Real*, e : Real*, tauq : Complex*, taup : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cgecon(norm : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, anorm : Real*, rcond : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgeequ(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, r__ : Real*, c__ : Real*, rowcnd : Real*, colcnd : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun cgeequb(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, r__ : Real*, c__ : Real*, rowcnd : Real*, colcnd : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun cgees(jobvs : LibC::Char*, sort : LibC::Char*, select : LFp, n : Integer*, a : Complex*, lda : Integer*, sdim : Integer*, w : Complex*, vs : Complex*, ldvs : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, bwork : Logical*, info : Integer*) : LibC::Int
  fun cgeesx(jobvs : LibC::Char*, sort : LibC::Char*, select : LFp, sense : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, sdim : Integer*, w : Complex*, vs : Complex*, ldvs : Integer*, rconde : Real*, rcondv : Real*, work : Complex*, lwork : Integer*, rwork : Real*, bwork : Logical*, info : Integer*) : LibC::Int
  fun cgeev(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, w : Complex*, vl : Complex*, ldvl : Integer*, vr : Complex*, ldvr : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgeevx(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, w : Complex*, vl : Complex*, ldvl : Integer*, vr : Complex*, ldvr : Integer*, ilo : Integer*, ihi : Integer*, scale : Real*, abnrm : Real*, rconde : Real*, rcondv : Real*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgegs(jobvsl : LibC::Char*, jobvsr : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, alpha : Complex*, beta : Complex*, vsl : Complex*, ldvsl : Integer*, vsr : Complex*, ldvsr : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgegv(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, alpha : Complex*, beta : Complex*, vl : Complex*, ldvl : Integer*, vr : Complex*, ldvr : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgehd2(n : Integer*, ilo : Integer*, ihi : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, info : Integer*) : LibC::Int
  fun cgehrd(n : Integer*, ilo : Integer*, ihi : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cgelq2(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, info : Integer*) : LibC::Int
  fun cgelqf(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cgels(trans : LibC::Char*, m : Integer*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cgelsd(m : Integer*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, s : Real*, rcond : Real*, rank : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun cgelss(m : Integer*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, s : Real*, rcond : Real*, rank : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgelsx(m : Integer*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, jpvt : Integer*, rcond : Real*, rank : Integer*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgelsy(m : Integer*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, jpvt : Integer*, rcond : Real*, rank : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgeql2(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, info : Integer*) : LibC::Int
  fun cgeqlf(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cgeqp3(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, jpvt : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgeqpf(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, jpvt : Integer*, tau : Complex*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgeqr2(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, info : Integer*) : LibC::Int
  fun cgeqrf(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cgerfs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgerfsx(trans : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, r__ : Real*, c__ : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgerq2(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, info : Integer*) : LibC::Int
  fun cgerqf(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cgesc2(n : Integer*, a : Complex*, lda : Integer*, rhs : Complex*, ipiv : Integer*, jpiv : Integer*, scale : Real*) : LibC::Int
  fun cgesdd(jobz : LibC::Char*, m : Integer*, n : Integer*, a : Complex*, lda : Integer*, s : Real*, u : Complex*, ldu : Integer*, vt : Complex*, ldvt : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun cgesv(n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cgesvd(jobu : LibC::Char*, jobvt : LibC::Char*, m : Integer*, n : Integer*, a : Complex*, lda : Integer*, s : Real*, u : Complex*, ldu : Integer*, vt : Complex*, ldvt : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgesvx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Real*, c__ : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgesvxx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Real*, c__ : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, rpvgrw : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgetc2(n : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, jpiv : Integer*, info : Integer*) : LibC::Int
  fun cgetf2(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun cgetrf(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun cgetri(n : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cgetrs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cggbak(job : LibC::Char*, side : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, lscale : Real*, rscale : Real*, m : Integer*, v : Complex*, ldv : Integer*, info : Integer*) : LibC::Int
  fun cggbal(job : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, ilo : Integer*, ihi : Integer*, lscale : Real*, rscale : Real*, work : Real*, info : Integer*) : LibC::Int
  fun cgges(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LFp, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, sdim : Integer*, alpha : Complex*, beta : Complex*, vsl : Complex*, ldvsl : Integer*, vsr : Complex*, ldvsr : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, bwork : Logical*, info : Integer*) : LibC::Int
  fun cggesx(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LFp, sense : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, sdim : Integer*, alpha : Complex*, beta : Complex*, vsl : Complex*, ldvsl : Integer*, vsr : Complex*, ldvsr : Integer*, rconde : Real*, rcondv : Real*, work : Complex*, lwork : Integer*, rwork : Real*, iwork : Integer*, liwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun cggev(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, alpha : Complex*, beta : Complex*, vl : Complex*, ldvl : Integer*, vr : Complex*, ldvr : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun cggevx(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, alpha : Complex*, beta : Complex*, vl : Complex*, ldvl : Integer*, vr : Complex*, ldvr : Integer*, ilo : Integer*, ihi : Integer*, lscale : Real*, rscale : Real*, abnrm : Real*, bbnrm : Real*, rconde : Real*, rcondv : Real*, work : Complex*, lwork : Integer*, rwork : Real*, iwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun cggglm(n : Integer*, m : Integer*, p : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, d__ : Complex*, x : Complex*, y : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cgghrd(compq : LibC::Char*, compz : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, q : Complex*, ldq : Integer*, z__ : Complex*, ldz : Integer*, info : Integer*) : LibC::Int
  fun cgglse(m : Integer*, n : Integer*, p : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, c__ : Complex*, d__ : Complex*, x : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cggqrf(n : Integer*, m : Integer*, p : Integer*, a : Complex*, lda : Integer*, taua : Complex*, b : Complex*, ldb : Integer*, taub : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cggrqf(m : Integer*, p : Integer*, n : Integer*, a : Complex*, lda : Integer*, taua : Complex*, b : Complex*, ldb : Integer*, taub : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cggsvd(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Integer*, n : Integer*, p : Integer*, k : Integer*, l : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, alpha : Real*, beta : Real*, u : Complex*, ldu : Integer*, v : Complex*, ldv : Integer*, q : Complex*, ldq : Integer*, work : Complex*, rwork : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun cggsvp(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Integer*, p : Integer*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, tola : Real*, tolb : Real*, k : Integer*, l : Integer*, u : Complex*, ldu : Integer*, v : Complex*, ldv : Integer*, q : Complex*, ldq : Integer*, iwork : Integer*, rwork : Real*, tau : Complex*, work : Complex*, info : Integer*) : LibC::Int
  fun cgtcon(norm : LibC::Char*, n : Integer*, dl : Complex*, d__ : Complex*, du : Complex*, du2 : Complex*, ipiv : Integer*, anorm : Real*, rcond : Real*, work : Complex*, info : Integer*) : LibC::Int
  fun cgtrfs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, dl : Complex*, d__ : Complex*, du : Complex*, dlf : Complex*, df : Complex*, duf : Complex*, du2 : Complex*, ipiv : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgtsv(n : Integer*, nrhs : Integer*, dl : Complex*, d__ : Complex*, du : Complex*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cgtsvx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, nrhs : Integer*, dl : Complex*, d__ : Complex*, du : Complex*, dlf : Complex*, df : Complex*, duf : Complex*, du2 : Complex*, ipiv : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cgttrf(n : Integer*, dl : Complex*, d__ : Complex*, du : Complex*, du2 : Complex*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun cgttrs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, dl : Complex*, d__ : Complex*, du : Complex*, du2 : Complex*, ipiv : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cgtts2(itrans : Integer*, n : Integer*, nrhs : Integer*, dl : Complex*, d__ : Complex*, du : Complex*, du2 : Complex*, ipiv : Integer*, b : Complex*, ldb : Integer*) : LibC::Int
  fun chbev(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Complex*, ldab : Integer*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun chbevd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Complex*, ldab : Integer*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun chbevx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Complex*, ldab : Integer*, q : Complex*, ldq : Integer*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, rwork : Real*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun chbgst(vect : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Complex*, ldab : Integer*, bb : Complex*, ldbb : Integer*, x : Complex*, ldx : Integer*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun chbgv(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Complex*, ldab : Integer*, bb : Complex*, ldbb : Integer*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun chbgvd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Complex*, ldab : Integer*, bb : Complex*, ldbb : Integer*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun chbgvx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Complex*, ldab : Integer*, bb : Complex*, ldbb : Integer*, q : Complex*, ldq : Integer*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, rwork : Real*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun chbtrd(vect : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Complex*, ldab : Integer*, d__ : Real*, e : Real*, q : Complex*, ldq : Integer*, work : Complex*, info : Integer*) : LibC::Int
  fun checon(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, anorm : Real*, rcond : Real*, work : Complex*, info : Integer*) : LibC::Int
  fun cheequb(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, s : Real*, scond : Real*, amax : Real*, work : Complex*, info : Integer*) : LibC::Int
  fun cheev(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, w : Real*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun cheevd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, w : Real*, work : Complex*, lwork : Integer*, rwork : Real*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun cheevr(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Complex*, ldz : Integer*, isuppz : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun cheevx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun chegs2(itype : Integer*, uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun chegst(itype : Integer*, uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun chegv(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, w : Real*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun chegvd(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, w : Real*, work : Complex*, lwork : Integer*, rwork : Real*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun chegvx(itype : Integer*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun cherfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cherfsx(uplo : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, s : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun chesv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun chesvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun chesvxx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, s : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, rpvgrw : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun chetd2(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, d__ : Real*, e : Real*, tau : Complex*, info : Integer*) : LibC::Int
  fun chetf2(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun chetrd(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, d__ : Real*, e : Real*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun chetrf(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun chetri(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, work : Complex*, info : Integer*) : LibC::Int
  fun chetrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun chfrk(transr : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, n : Integer*, k : Integer*, alpha : Real*, a : Complex*, lda : Integer*, beta : Real*, c__ : Complex*) : LibC::Int
  fun chgeqz(job : LibC::Char*, compq : LibC::Char*, compz : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Complex*, ldh : Integer*, t : Complex*, ldt : Integer*, alpha : Complex*, beta : Complex*, q : Complex*, ldq : Integer*, z__ : Complex*, ldz : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun chla_transtype_(ret_val : LibC::Char*, ret_val_len : Ftnlen, trans : Integer*)
  fun chpcon(uplo : LibC::Char*, n : Integer*, ap : Complex*, ipiv : Integer*, anorm : Real*, rcond : Real*, work : Complex*, info : Integer*) : LibC::Int
  fun chpev(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Complex*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun chpevd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Complex*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun chpevx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Complex*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, rwork : Real*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun chpgst(itype : Integer*, uplo : LibC::Char*, n : Integer*, ap : Complex*, bp : Complex*, info : Integer*) : LibC::Int
  fun chpgv(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Complex*, bp : Complex*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun chpgvd(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Complex*, bp : Complex*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun chpgvx(itype : Integer*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Complex*, bp : Complex*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, rwork : Real*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun chprfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, afp : Complex*, ipiv : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun chpsv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, ipiv : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun chpsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, afp : Complex*, ipiv : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun chptrd(uplo : LibC::Char*, n : Integer*, ap : Complex*, d__ : Real*, e : Real*, tau : Complex*, info : Integer*) : LibC::Int
  fun chptrf(uplo : LibC::Char*, n : Integer*, ap : Complex*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun chptri(uplo : LibC::Char*, n : Integer*, ap : Complex*, ipiv : Integer*, work : Complex*, info : Integer*) : LibC::Int
  fun chptrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, ipiv : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun chsein(side : LibC::Char*, eigsrc : LibC::Char*, initv : LibC::Char*, select : Logical*, n : Integer*, h__ : Complex*, ldh : Integer*, w : Complex*, vl : Complex*, ldvl : Integer*, vr : Complex*, ldvr : Integer*, mm : Integer*, m : Integer*, work : Complex*, rwork : Real*, ifaill : Integer*, ifailr : Integer*, info : Integer*) : LibC::Int
  fun chseqr(job : LibC::Char*, compz : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Complex*, ldh : Integer*, w : Complex*, z__ : Complex*, ldz : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cla_gbamv_(trans : Integer*, m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, alpha : Real*, ab : Complex*, ldab : Integer*, x : Complex*, incx : Integer*, beta : Real*, y : Real*, incy : Integer*) : LibC::Int
  fun cla_gbrcond_c_(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Complex*, ldab : Integer*, afb : Complex*, ldafb : Integer*, ipiv : Integer*, c__ : Real*, capply : Logical*, info : Integer*, work : Complex*, rwork : Real*, trans_len : Ftnlen) : Doublereal
  fun cla_gbrcond_x_(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Complex*, ldab : Integer*, afb : Complex*, ldafb : Integer*, ipiv : Integer*, x : Complex*, info : Integer*, work : Complex*, rwork : Real*, trans_len : Ftnlen) : Doublereal
  fun cla_gbrfsx_extended_(prec_type__ : Integer*, trans_type__ : Integer*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Complex*, ldab : Integer*, afb : Complex*, ldafb : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Real*, b : Complex*, ldb : Integer*, y : Complex*, ldy : Integer*, berr_out__ : Real*, n_norms__ : Integer*, errs_n__ : Real*, errs_c__ : Real*, res : Complex*, ayb : Real*, dy : Complex*, y_tail__ : Complex*, rcond : Real*, ithresh : Integer*, rthresh : Real*, dz_ub__ : Real*, ignore_cwise__ : Logical*, info : Integer*) : LibC::Int
  fun cla_gbrpvgrw_(n : Integer*, kl : Integer*, ku : Integer*, ncols : Integer*, ab : Complex*, ldab : Integer*, afb : Complex*, ldafb : Integer*) : Doublereal
  fun cla_geamv_(trans : Integer*, m : Integer*, n : Integer*, alpha : Real*, a : Complex*, lda : Integer*, x : Complex*, incx : Integer*, beta : Real*, y : Real*, incy : Integer*) : LibC::Int
  fun cla_gercond_c_(trans : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, c__ : Real*, capply : Logical*, info : Integer*, work : Complex*, rwork : Real*, trans_len : Ftnlen) : Doublereal
  fun cla_gercond_x_(trans : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, x : Complex*, info : Integer*, work : Complex*, rwork : Real*, trans_len : Ftnlen) : Doublereal
  fun cla_gerfsx_extended_(prec_type__ : Integer*, trans_type__ : Integer*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Real*, b : Complex*, ldb : Integer*, y : Complex*, ldy : Integer*, berr_out__ : Real*, n_norms__ : Integer*, errs_n__ : Real*, errs_c__ : Real*, res : Complex*, ayb : Real*, dy : Complex*, y_tail__ : Complex*, rcond : Real*, ithresh : Integer*, rthresh : Real*, dz_ub__ : Real*, ignore_cwise__ : Logical*, info : Integer*) : LibC::Int
  fun cla_heamv_(uplo : Integer*, n : Integer*, alpha : Real*, a : Complex*, lda : Integer*, x : Complex*, incx : Integer*, beta : Real*, y : Real*, incy : Integer*) : LibC::Int
  fun cla_hercond_c_(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, c__ : Real*, capply : Logical*, info : Integer*, work : Complex*, rwork : Real*, uplo_len : Ftnlen) : Doublereal
  fun cla_hercond_x_(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, x : Complex*, info : Integer*, work : Complex*, rwork : Real*, uplo_len : Ftnlen) : Doublereal
  fun cla_herfsx_extended_(prec_type__ : Integer*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Real*, b : Complex*, ldb : Integer*, y : Complex*, ldy : Integer*, berr_out__ : Real*, n_norms__ : Integer*, errs_n__ : Real*, errs_c__ : Real*, res : Complex*, ayb : Real*, dy : Complex*, y_tail__ : Complex*, rcond : Real*, ithresh : Integer*, rthresh : Real*, dz_ub__ : Real*, ignore_cwise__ : Logical*, info : Integer*, uplo_len : Ftnlen) : LibC::Int
  fun cla_herpvgrw_(uplo : LibC::Char*, n : Integer*, info : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, work : Real*, uplo_len : Ftnlen) : Doublereal
  fun cla_lin_berr_(n : Integer*, nz : Integer*, nrhs : Integer*, res : Complex*, ayb : Real*, berr : Real*) : LibC::Int
  fun cla_porcond_c_(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, c__ : Real*, capply : Logical*, info : Integer*, work : Complex*, rwork : Real*, uplo_len : Ftnlen) : Doublereal
  fun cla_porcond_x_(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, x : Complex*, info : Integer*, work : Complex*, rwork : Real*, uplo_len : Ftnlen) : Doublereal
  fun cla_porfsx_extended_(prec_type__ : Integer*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, colequ : Logical*, c__ : Real*, b : Complex*, ldb : Integer*, y : Complex*, ldy : Integer*, berr_out__ : Real*, n_norms__ : Integer*, errs_n__ : Real*, errs_c__ : Real*, res : Complex*, ayb : Real*, dy : Complex*, y_tail__ : Complex*, rcond : Real*, ithresh : Integer*, rthresh : Real*, dz_ub__ : Real*, ignore_cwise__ : Logical*, info : Integer*, uplo_len : Ftnlen) : LibC::Int
  fun cla_porpvgrw_(uplo : LibC::Char*, ncols : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, work : Real*, uplo_len : Ftnlen) : Doublereal
  fun cla_rpvgrw_(n : Integer*, ncols : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*) : Doublereal
  fun cla_syamv_(uplo : Integer*, n : Integer*, alpha : Real*, a : Complex*, lda : Integer*, x : Complex*, incx : Integer*, beta : Real*, y : Real*, incy : Integer*) : LibC::Int
  fun cla_syrcond_c_(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, c__ : Real*, capply : Logical*, info : Integer*, work : Complex*, rwork : Real*, uplo_len : Ftnlen) : Doublereal
  fun cla_syrcond_x_(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, x : Complex*, info : Integer*, work : Complex*, rwork : Real*, uplo_len : Ftnlen) : Doublereal
  fun cla_syrfsx_extended_(prec_type__ : Integer*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Real*, b : Complex*, ldb : Integer*, y : Complex*, ldy : Integer*, berr_out__ : Real*, n_norms__ : Integer*, errs_n__ : Real*, errs_c__ : Real*, res : Complex*, ayb : Real*, dy : Complex*, y_tail__ : Complex*, rcond : Real*, ithresh : Integer*, rthresh : Real*, dz_ub__ : Real*, ignore_cwise__ : Logical*, info : Integer*, uplo_len : Ftnlen) : LibC::Int
  fun cla_syrpvgrw_(uplo : LibC::Char*, n : Integer*, info : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, work : Real*, uplo_len : Ftnlen) : Doublereal
  fun cla_wwaddw_(n : Integer*, x : Complex*, y : Complex*, w : Complex*) : LibC::Int
  fun clabrd(m : Integer*, n : Integer*, nb : Integer*, a : Complex*, lda : Integer*, d__ : Real*, e : Real*, tauq : Complex*, taup : Complex*, x : Complex*, ldx : Integer*, y : Complex*, ldy : Integer*) : LibC::Int
  fun clacgv(n : Integer*, x : Complex*, incx : Integer*) : LibC::Int
  fun clacn2(n : Integer*, v : Complex*, x : Complex*, est : Real*, kase : Integer*, isave : Integer*) : LibC::Int
  fun clacon(n : Integer*, v : Complex*, x : Complex*, est : Real*, kase : Integer*) : LibC::Int
  fun clacp2(uplo : LibC::Char*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, b : Complex*, ldb : Integer*) : LibC::Int
  fun clacpy(uplo : LibC::Char*, m : Integer*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*) : LibC::Int
  fun clacrm(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, b : Real*, ldb : Integer*, c__ : Complex*, ldc : Integer*, rwork : Real*) : LibC::Int
  fun clacrt(n : Integer*, cx : Complex*, incx : Integer*, cy : Complex*, incy : Integer*, c__ : Complex*, s : Complex*) : LibC::Int
  fun cladiv(ret_val : Complex*, x : Complex*, y : Complex*)
  fun claed0(qsiz : Integer*, n : Integer*, d__ : Real*, e : Real*, q : Complex*, ldq : Integer*, qstore : Complex*, ldqs : Integer*, rwork : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun claed7(n : Integer*, cutpnt : Integer*, qsiz : Integer*, tlvls : Integer*, curlvl : Integer*, curpbm : Integer*, d__ : Real*, q : Complex*, ldq : Integer*, rho : Real*, indxq : Integer*, qstore : Real*, qptr : Integer*, prmptr : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, givnum : Real*, work : Complex*, rwork : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun claed8(k : Integer*, n : Integer*, qsiz : Integer*, q : Complex*, ldq : Integer*, d__ : Real*, rho : Real*, cutpnt : Integer*, z__ : Real*, dlamda : Real*, q2 : Complex*, ldq2 : Integer*, w : Real*, indxp : Integer*, indx : Integer*, indxq : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, givnum : Real*, info : Integer*) : LibC::Int
  fun claein(rightv : Logical*, noinit : Logical*, n : Integer*, h__ : Complex*, ldh : Integer*, w : Complex*, v : Complex*, b : Complex*, ldb : Integer*, rwork : Real*, eps3 : Real*, smlnum : Real*, info : Integer*) : LibC::Int
  fun claesy(a : Complex*, b : Complex*, c__ : Complex*, rt1 : Complex*, rt2 : Complex*, evscal : Complex*, cs1 : Complex*, sn1 : Complex*) : LibC::Int
  fun claev2(a : Complex*, b : Complex*, c__ : Complex*, rt1 : Real*, rt2 : Real*, cs1 : Real*, sn1 : Complex*) : LibC::Int
  fun clag2z(m : Integer*, n : Integer*, sa : Complex*, ldsa : Integer*, a : Doublecomplex*, lda : Integer*, info : Integer*) : LibC::Int
  fun clags2(upper : Logical*, a1 : Real*, a2 : Complex*, a3 : Real*, b1 : Real*, b2 : Complex*, b3 : Real*, csu : Real*, snu : Complex*, csv : Real*, snv : Complex*, csq : Real*, snq : Complex*) : LibC::Int
  fun clagtm(trans : LibC::Char*, n : Integer*, nrhs : Integer*, alpha : Real*, dl : Complex*, d__ : Complex*, du : Complex*, x : Complex*, ldx : Integer*, beta : Real*, b : Complex*, ldb : Integer*) : LibC::Int
  fun clahef(uplo : LibC::Char*, n : Integer*, nb : Integer*, kb : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, w : Complex*, ldw : Integer*, info : Integer*) : LibC::Int
  fun clahqr(wantt : Logical*, wantz : Logical*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Complex*, ldh : Integer*, w : Complex*, iloz : Integer*, ihiz : Integer*, z__ : Complex*, ldz : Integer*, info : Integer*) : LibC::Int
  fun clahr2(n : Integer*, k : Integer*, nb : Integer*, a : Complex*, lda : Integer*, tau : Complex*, t : Complex*, ldt : Integer*, y : Complex*, ldy : Integer*) : LibC::Int
  fun clahrd(n : Integer*, k : Integer*, nb : Integer*, a : Complex*, lda : Integer*, tau : Complex*, t : Complex*, ldt : Integer*, y : Complex*, ldy : Integer*) : LibC::Int
  fun claic1(job : Integer*, j : Integer*, x : Complex*, sest : Real*, w : Complex*, gamma : Complex*, sestpr : Real*, s : Complex*, c__ : Complex*) : LibC::Int
  fun clals0(icompq : Integer*, nl : Integer*, nr : Integer*, sqre : Integer*, nrhs : Integer*, b : Complex*, ldb : Integer*, bx : Complex*, ldbx : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, givnum : Real*, ldgnum : Integer*, poles : Real*, difl : Real*, difr : Real*, z__ : Real*, k : Integer*, c__ : Real*, s : Real*, rwork : Real*, info : Integer*) : LibC::Int
  fun clalsa(icompq : Integer*, smlsiz : Integer*, n : Integer*, nrhs : Integer*, b : Complex*, ldb : Integer*, bx : Complex*, ldbx : Integer*, u : Real*, ldu : Integer*, vt : Real*, k : Integer*, difl : Real*, difr : Real*, z__ : Real*, poles : Real*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, perm : Integer*, givnum : Real*, c__ : Real*, s : Real*, rwork : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun clalsd(uplo : LibC::Char*, smlsiz : Integer*, n : Integer*, nrhs : Integer*, d__ : Real*, e : Real*, b : Complex*, ldb : Integer*, rcond : Real*, rank : Integer*, work : Complex*, rwork : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun clangb(norm : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Complex*, ldab : Integer*, work : Real*) : Doublereal
  fun clange(norm : LibC::Char*, m : Integer*, n : Integer*, a : Complex*, lda : Integer*, work : Real*) : Doublereal
  fun clangt(norm : LibC::Char*, n : Integer*, dl : Complex*, d__ : Complex*, du : Complex*) : Doublereal
  fun clanhb(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, k : Integer*, ab : Complex*, ldab : Integer*, work : Real*) : Doublereal
  fun clanhe(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, work : Real*) : Doublereal
  fun clanhf(norm : LibC::Char*, transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Complex*, work : Real*) : Doublereal
  fun clanhp(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Complex*, work : Real*) : Doublereal
  fun clanhs(norm : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, work : Real*) : Doublereal
  fun clanht(norm : LibC::Char*, n : Integer*, d__ : Real*, e : Complex*) : Doublereal
  fun clansb(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, k : Integer*, ab : Complex*, ldab : Integer*, work : Real*) : Doublereal
  fun clansp(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Complex*, work : Real*) : Doublereal
  fun clansy(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, work : Real*) : Doublereal
  fun clantb(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, k : Integer*, ab : Complex*, ldab : Integer*, work : Real*) : Doublereal
  fun clantp(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, ap : Complex*, work : Real*) : Doublereal
  fun clantr(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, m : Integer*, n : Integer*, a : Complex*, lda : Integer*, work : Real*) : Doublereal
  fun clapll(n : Integer*, x : Complex*, incx : Integer*, y : Complex*, incy : Integer*, ssmin : Real*) : LibC::Int
  fun clapmt(forwrd : Logical*, m : Integer*, n : Integer*, x : Complex*, ldx : Integer*, k : Integer*) : LibC::Int
  fun claqgb(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Complex*, ldab : Integer*, r__ : Real*, c__ : Real*, rowcnd : Real*, colcnd : Real*, amax : Real*, equed : LibC::Char*) : LibC::Int
  fun claqge(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, r__ : Real*, c__ : Real*, rowcnd : Real*, colcnd : Real*, amax : Real*, equed : LibC::Char*) : LibC::Int
  fun claqhb(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Complex*, ldab : Integer*, s : Real*, scond : Real*, amax : Real*, equed : LibC::Char*) : LibC::Int
  fun claqhe(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, s : Real*, scond : Real*, amax : Real*, equed : LibC::Char*) : LibC::Int
  fun claqhp(uplo : LibC::Char*, n : Integer*, ap : Complex*, s : Real*, scond : Real*, amax : Real*, equed : LibC::Char*) : LibC::Int
  fun claqp2(m : Integer*, n : Integer*, offset : Integer*, a : Complex*, lda : Integer*, jpvt : Integer*, tau : Complex*, vn1 : Real*, vn2 : Real*, work : Complex*) : LibC::Int
  fun claqps(m : Integer*, n : Integer*, offset : Integer*, nb : Integer*, kb : Integer*, a : Complex*, lda : Integer*, jpvt : Integer*, tau : Complex*, vn1 : Real*, vn2 : Real*, auxv : Complex*, f : Complex*, ldf : Integer*) : LibC::Int
  fun claqr0(wantt : Logical*, wantz : Logical*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Complex*, ldh : Integer*, w : Complex*, iloz : Integer*, ihiz : Integer*, z__ : Complex*, ldz : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun claqr1(n : Integer*, h__ : Complex*, ldh : Integer*, s1 : Complex*, s2 : Complex*, v : Complex*) : LibC::Int
  fun claqr2(wantt : Logical*, wantz : Logical*, n : Integer*, ktop : Integer*, kbot : Integer*, nw : Integer*, h__ : Complex*, ldh : Integer*, iloz : Integer*, ihiz : Integer*, z__ : Complex*, ldz : Integer*, ns : Integer*, nd : Integer*, sh : Complex*, v : Complex*, ldv : Integer*, nh : Integer*, t : Complex*, ldt : Integer*, nv : Integer*, wv : Complex*, ldwv : Integer*, work : Complex*, lwork : Integer*) : LibC::Int
  fun claqr3(wantt : Logical*, wantz : Logical*, n : Integer*, ktop : Integer*, kbot : Integer*, nw : Integer*, h__ : Complex*, ldh : Integer*, iloz : Integer*, ihiz : Integer*, z__ : Complex*, ldz : Integer*, ns : Integer*, nd : Integer*, sh : Complex*, v : Complex*, ldv : Integer*, nh : Integer*, t : Complex*, ldt : Integer*, nv : Integer*, wv : Complex*, ldwv : Integer*, work : Complex*, lwork : Integer*) : LibC::Int
  fun claqr4(wantt : Logical*, wantz : Logical*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Complex*, ldh : Integer*, w : Complex*, iloz : Integer*, ihiz : Integer*, z__ : Complex*, ldz : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun claqr5(wantt : Logical*, wantz : Logical*, kacc22 : Integer*, n : Integer*, ktop : Integer*, kbot : Integer*, nshfts : Integer*, s : Complex*, h__ : Complex*, ldh : Integer*, iloz : Integer*, ihiz : Integer*, z__ : Complex*, ldz : Integer*, v : Complex*, ldv : Integer*, u : Complex*, ldu : Integer*, nv : Integer*, wv : Complex*, ldwv : Integer*, nh : Integer*, wh : Complex*, ldwh : Integer*) : LibC::Int
  fun claqsb(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Complex*, ldab : Integer*, s : Real*, scond : Real*, amax : Real*, equed : LibC::Char*) : LibC::Int
  fun claqsp(uplo : LibC::Char*, n : Integer*, ap : Complex*, s : Real*, scond : Real*, amax : Real*, equed : LibC::Char*) : LibC::Int
  fun claqsy(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, s : Real*, scond : Real*, amax : Real*, equed : LibC::Char*) : LibC::Int
  fun clar1v(n : Integer*, b1 : Integer*, bn : Integer*, lambda : Real*, d__ : Real*, l : Real*, ld : Real*, lld : Real*, pivmin : Real*, gaptol : Real*, z__ : Complex*, wantnc : Logical*, negcnt : Integer*, ztz : Real*, mingma : Real*, r__ : Integer*, isuppz : Integer*, nrminv : Real*, resid : Real*, rqcorr : Real*, work : Real*) : LibC::Int
  fun clar2v(n : Integer*, x : Complex*, y : Complex*, z__ : Complex*, incx : Integer*, c__ : Real*, s : Complex*, incc : Integer*) : LibC::Int
  fun clarcm(m : Integer*, n : Integer*, a : Real*, lda : Integer*, b : Complex*, ldb : Integer*, c__ : Complex*, ldc : Integer*, rwork : Real*) : LibC::Int
  fun clarf(side : LibC::Char*, m : Integer*, n : Integer*, v : Complex*, incv : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*) : LibC::Int
  fun clarfb(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, v : Complex*, ldv : Integer*, t : Complex*, ldt : Integer*, c__ : Complex*, ldc : Integer*, work : Complex*, ldwork : Integer*) : LibC::Int
  fun clarfg(n : Integer*, alpha : Complex*, x : Complex*, incx : Integer*, tau : Complex*) : LibC::Int
  fun clarfp(n : Integer*, alpha : Complex*, x : Complex*, incx : Integer*, tau : Complex*) : LibC::Int
  fun clarft(direct : LibC::Char*, storev : LibC::Char*, n : Integer*, k : Integer*, v : Complex*, ldv : Integer*, tau : Complex*, t : Complex*, ldt : Integer*) : LibC::Int
  fun clarfx(side : LibC::Char*, m : Integer*, n : Integer*, v : Complex*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*) : LibC::Int
  fun clargv(n : Integer*, x : Complex*, incx : Integer*, y : Complex*, incy : Integer*, c__ : Real*, incc : Integer*) : LibC::Int
  fun clarnv(idist : Integer*, iseed : Integer*, n : Integer*, x : Complex*) : LibC::Int
  fun clarrv(n : Integer*, vl : Real*, vu : Real*, d__ : Real*, l : Real*, pivmin : Real*, isplit : Integer*, m : Integer*, dol : Integer*, dou : Integer*, minrgp : Real*, rtol1 : Real*, rtol2 : Real*, w : Real*, werr : Real*, wgap : Real*, iblock : Integer*, indexw : Integer*, gers : Real*, z__ : Complex*, ldz : Integer*, isuppz : Integer*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun clarscl2(m : Integer*, n : Integer*, d__ : Real*, x : Complex*, ldx : Integer*) : LibC::Int
  fun clartg(f : Complex*, g : Complex*, cs : Real*, sn : Complex*, r__ : Complex*) : LibC::Int
  fun clartv(n : Integer*, x : Complex*, incx : Integer*, y : Complex*, incy : Integer*, c__ : Real*, s : Complex*, incc : Integer*) : LibC::Int
  fun clarz(side : LibC::Char*, m : Integer*, n : Integer*, l : Integer*, v : Complex*, incv : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*) : LibC::Int
  fun clarzb(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, l : Integer*, v : Complex*, ldv : Integer*, t : Complex*, ldt : Integer*, c__ : Complex*, ldc : Integer*, work : Complex*, ldwork : Integer*) : LibC::Int
  fun clarzt(direct : LibC::Char*, storev : LibC::Char*, n : Integer*, k : Integer*, v : Complex*, ldv : Integer*, tau : Complex*, t : Complex*, ldt : Integer*) : LibC::Int
  fun clascl(type__ : LibC::Char*, kl : Integer*, ku : Integer*, cfrom : Real*, cto : Real*, m : Integer*, n : Integer*, a : Complex*, lda : Integer*, info : Integer*) : LibC::Int
  fun clascl2(m : Integer*, n : Integer*, d__ : Real*, x : Complex*, ldx : Integer*) : LibC::Int
  fun claset(uplo : LibC::Char*, m : Integer*, n : Integer*, alpha : Complex*, beta : Complex*, a : Complex*, lda : Integer*) : LibC::Int
  fun clasr(side : LibC::Char*, pivot : LibC::Char*, direct : LibC::Char*, m : Integer*, n : Integer*, c__ : Real*, s : Real*, a : Complex*, lda : Integer*) : LibC::Int
  fun classq(n : Integer*, x : Complex*, incx : Integer*, scale : Real*, sumsq : Real*) : LibC::Int
  fun claswp(n : Integer*, a : Complex*, lda : Integer*, k1 : Integer*, k2 : Integer*, ipiv : Integer*, incx : Integer*) : LibC::Int
  fun clasyf(uplo : LibC::Char*, n : Integer*, nb : Integer*, kb : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, w : Complex*, ldw : Integer*, info : Integer*) : LibC::Int
  fun clatbs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Integer*, kd : Integer*, ab : Complex*, ldab : Integer*, x : Complex*, scale : Real*, cnorm : Real*, info : Integer*) : LibC::Int
  fun clatdf(ijob : Integer*, n : Integer*, z__ : Complex*, ldz : Integer*, rhs : Complex*, rdsum : Real*, rdscal : Real*, ipiv : Integer*, jpiv : Integer*) : LibC::Int
  fun clatps(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Integer*, ap : Complex*, x : Complex*, scale : Real*, cnorm : Real*, info : Integer*) : LibC::Int
  fun clatrd(uplo : LibC::Char*, n : Integer*, nb : Integer*, a : Complex*, lda : Integer*, e : Real*, tau : Complex*, w : Complex*, ldw : Integer*) : LibC::Int
  fun clatrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, x : Complex*, scale : Real*, cnorm : Real*, info : Integer*) : LibC::Int
  fun clatrz(m : Integer*, n : Integer*, l : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*) : LibC::Int
  fun clatzm(side : LibC::Char*, m : Integer*, n : Integer*, v : Complex*, incv : Integer*, tau : Complex*, c1 : Complex*, c2 : Complex*, ldc : Integer*, work : Complex*) : LibC::Int
  fun clauu2(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, info : Integer*) : LibC::Int
  fun clauum(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, info : Integer*) : LibC::Int
  fun cpbcon(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Complex*, ldab : Integer*, anorm : Real*, rcond : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cpbequ(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Complex*, ldab : Integer*, s : Real*, scond : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun cpbrfs(uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Complex*, ldab : Integer*, afb : Complex*, ldafb : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cpbstf(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Complex*, ldab : Integer*, info : Integer*) : LibC::Int
  fun cpbsv(uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Complex*, ldab : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cpbsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Complex*, ldab : Integer*, afb : Complex*, ldafb : Integer*, equed : LibC::Char*, s : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cpbtf2(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Complex*, ldab : Integer*, info : Integer*) : LibC::Int
  fun cpbtrf(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Complex*, ldab : Integer*, info : Integer*) : LibC::Int
  fun cpbtrs(uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Complex*, ldab : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cpftrf(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Complex*, info : Integer*) : LibC::Int
  fun cpftri(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Complex*, info : Integer*) : LibC::Int
  fun cpftrs(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cpocon(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, anorm : Real*, rcond : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cpoequ(n : Integer*, a : Complex*, lda : Integer*, s : Real*, scond : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun cpoequb(n : Integer*, a : Complex*, lda : Integer*, s : Real*, scond : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun cporfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cporfsx(uplo : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, s : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cposv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cposvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, equed : LibC::Char*, s : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cposvxx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, equed : LibC::Char*, s : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, rpvgrw : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cpotf2(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, info : Integer*) : LibC::Int
  fun cpotrf(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, info : Integer*) : LibC::Int
  fun cpotri(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, info : Integer*) : LibC::Int
  fun cpotrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cppcon(uplo : LibC::Char*, n : Integer*, ap : Complex*, anorm : Real*, rcond : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cppequ(uplo : LibC::Char*, n : Integer*, ap : Complex*, s : Real*, scond : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun cpprfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, afp : Complex*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cppsv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cppsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, afp : Complex*, equed : LibC::Char*, s : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cpptrf(uplo : LibC::Char*, n : Integer*, ap : Complex*, info : Integer*) : LibC::Int
  fun cpptri(uplo : LibC::Char*, n : Integer*, ap : Complex*, info : Integer*) : LibC::Int
  fun cpptrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cpstf2(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, piv : Integer*, rank : Integer*, tol : Real*, work : Real*, info : Integer*) : LibC::Int
  fun cpstrf(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, piv : Integer*, rank : Integer*, tol : Real*, work : Real*, info : Integer*) : LibC::Int
  fun cptcon(n : Integer*, d__ : Real*, e : Complex*, anorm : Real*, rcond : Real*, rwork : Real*, info : Integer*) : LibC::Int
  fun cpteqr(compz : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, z__ : Complex*, ldz : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun cptrfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, d__ : Real*, e : Complex*, df : Real*, ef : Complex*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cptsv(n : Integer*, nrhs : Integer*, d__ : Real*, e : Complex*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cptsvx(fact : LibC::Char*, n : Integer*, nrhs : Integer*, d__ : Real*, e : Complex*, df : Real*, ef : Complex*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cpttrf(n : Integer*, d__ : Real*, e : Complex*, info : Integer*) : LibC::Int
  fun cpttrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, d__ : Real*, e : Complex*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cptts2(iuplo : Integer*, n : Integer*, nrhs : Integer*, d__ : Real*, e : Complex*, b : Complex*, ldb : Integer*) : LibC::Int
  fun crot(n : Integer*, cx : Complex*, incx : Integer*, cy : Complex*, incy : Integer*, c__ : Real*, s : Complex*) : LibC::Int
  fun cspcon(uplo : LibC::Char*, n : Integer*, ap : Complex*, ipiv : Integer*, anorm : Real*, rcond : Real*, work : Complex*, info : Integer*) : LibC::Int
  fun cspmv(uplo : LibC::Char*, n : Integer*, alpha : Complex*, ap : Complex*, x : Complex*, incx : Integer*, beta : Complex*, y : Complex*, incy : Integer*) : LibC::Int
  fun cspr(uplo : LibC::Char*, n : Integer*, alpha : Complex*, x : Complex*, incx : Integer*, ap : Complex*) : LibC::Int
  fun csprfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, afp : Complex*, ipiv : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun cspsv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, ipiv : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun cspsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, afp : Complex*, ipiv : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun csptrf(uplo : LibC::Char*, n : Integer*, ap : Complex*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun csptri(uplo : LibC::Char*, n : Integer*, ap : Complex*, ipiv : Integer*, work : Complex*, info : Integer*) : LibC::Int
  fun csptrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, ipiv : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun csrscl(n : Integer*, sa : Real*, sx : Complex*, incx : Integer*) : LibC::Int
  fun cstedc(compz : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, z__ : Complex*, ldz : Integer*, work : Complex*, lwork : Integer*, rwork : Real*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun cstegr(jobz : LibC::Char*, range : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Complex*, ldz : Integer*, isuppz : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun cstein(n : Integer*, d__ : Real*, e : Real*, m : Integer*, w : Real*, iblock : Integer*, isplit : Integer*, z__ : Complex*, ldz : Integer*, work : Real*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun cstemr(jobz : LibC::Char*, range : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, m : Integer*, w : Real*, z__ : Complex*, ldz : Integer*, nzc : Integer*, isuppz : Integer*, tryrac : Logical*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun csteqr(compz : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, z__ : Complex*, ldz : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun csycon(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, anorm : Real*, rcond : Real*, work : Complex*, info : Integer*) : LibC::Int
  fun csyequb(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, s : Real*, scond : Real*, amax : Real*, work : Complex*, info : Integer*) : LibC::Int
  fun csymv(uplo : LibC::Char*, n : Integer*, alpha : Complex*, a : Complex*, lda : Integer*, x : Complex*, incx : Integer*, beta : Complex*, y : Complex*, incy : Integer*) : LibC::Int
  fun csyr(uplo : LibC::Char*, n : Integer*, alpha : Complex*, x : Complex*, incx : Integer*, a : Complex*, lda : Integer*) : LibC::Int
  fun csyrfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun csyrfsx(uplo : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, s : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun csysv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun csysvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Complex*, lwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun csysvxx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, af : Complex*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, s : Real*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, rcond : Real*, rpvgrw : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun csytf2(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun csytrf(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun csytri(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, work : Complex*, info : Integer*) : LibC::Int
  fun csytrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, ipiv : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun ctbcon(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, kd : Integer*, ab : Complex*, ldab : Integer*, rcond : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun ctbrfs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Complex*, ldab : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun ctbtrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Complex*, ldab : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun ctfsm(transr : LibC::Char*, side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, m : Integer*, n : Integer*, alpha : Complex*, a : Complex*, b : Complex*, ldb : Integer*) : LibC::Int
  fun ctftri(transr : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Complex*, info : Integer*) : LibC::Int
  fun ctfttp(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, arf : Complex*, ap : Complex*, info : Integer*) : LibC::Int
  fun ctfttr(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, arf : Complex*, a : Complex*, lda : Integer*, info : Integer*) : LibC::Int
  fun ctgevc(side : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, s : Complex*, lds : Integer*, p : Complex*, ldp : Integer*, vl : Complex*, ldvl : Integer*, vr : Complex*, ldvr : Integer*, mm : Integer*, m : Integer*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun ctgex2(wantq : Logical*, wantz : Logical*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, q : Complex*, ldq : Integer*, z__ : Complex*, ldz : Integer*, j1 : Integer*, info : Integer*) : LibC::Int
  fun ctgexc(wantq : Logical*, wantz : Logical*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, q : Complex*, ldq : Integer*, z__ : Complex*, ldz : Integer*, ifst : Integer*, ilst : Integer*, info : Integer*) : LibC::Int
  fun ctgsen(ijob : Integer*, wantq : Logical*, wantz : Logical*, select : Logical*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, alpha : Complex*, beta : Complex*, q : Complex*, ldq : Integer*, z__ : Complex*, ldz : Integer*, m : Integer*, pl : Real*, pr : Real*, dif : Real*, work : Complex*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun ctgsja(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Integer*, p : Integer*, n : Integer*, k : Integer*, l : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, tola : Real*, tolb : Real*, alpha : Real*, beta : Real*, u : Complex*, ldu : Integer*, v : Complex*, ldv : Integer*, q : Complex*, ldq : Integer*, work : Complex*, ncycle : Integer*, info : Integer*) : LibC::Int
  fun ctgsna(job : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, vl : Complex*, ldvl : Integer*, vr : Complex*, ldvr : Integer*, s : Real*, dif : Real*, mm : Integer*, m : Integer*, work : Complex*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun ctgsy2(trans : LibC::Char*, ijob : Integer*, m : Integer*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, c__ : Complex*, ldc : Integer*, d__ : Complex*, ldd : Integer*, e : Complex*, lde : Integer*, f : Complex*, ldf : Integer*, scale : Real*, rdsum : Real*, rdscal : Real*, info : Integer*) : LibC::Int
  fun ctgsyl(trans : LibC::Char*, ijob : Integer*, m : Integer*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, c__ : Complex*, ldc : Integer*, d__ : Complex*, ldd : Integer*, e : Complex*, lde : Integer*, f : Complex*, ldf : Integer*, scale : Real*, dif : Real*, work : Complex*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun ctpcon(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, ap : Complex*, rcond : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun ctprfs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun ctptri(uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, ap : Complex*, info : Integer*) : LibC::Int
  fun ctptrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Complex*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun ctpttf(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Complex*, arf : Complex*, info : Integer*) : LibC::Int
  fun ctpttr(uplo : LibC::Char*, n : Integer*, ap : Complex*, a : Complex*, lda : Integer*, info : Integer*) : LibC::Int
  fun ctrcon(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, rcond : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun ctrevc(side : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, t : Complex*, ldt : Integer*, vl : Complex*, ldvl : Integer*, vr : Complex*, ldvr : Integer*, mm : Integer*, m : Integer*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun ctrexc(compq : LibC::Char*, n : Integer*, t : Complex*, ldt : Integer*, q : Complex*, ldq : Integer*, ifst : Integer*, ilst : Integer*, info : Integer*) : LibC::Int
  fun ctrrfs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, x : Complex*, ldx : Integer*, ferr : Real*, berr : Real*, work : Complex*, rwork : Real*, info : Integer*) : LibC::Int
  fun ctrsen(job : LibC::Char*, compq : LibC::Char*, select : Logical*, n : Integer*, t : Complex*, ldt : Integer*, q : Complex*, ldq : Integer*, w : Complex*, m : Integer*, s : Real*, sep : Real*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun ctrsna(job : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, t : Complex*, ldt : Integer*, vl : Complex*, ldvl : Integer*, vr : Complex*, ldvr : Integer*, s : Real*, sep : Real*, mm : Integer*, m : Integer*, work : Complex*, ldwork : Integer*, rwork : Real*, info : Integer*) : LibC::Int
  fun ctrsyl(trana : LibC::Char*, tranb : LibC::Char*, isgn : Integer*, m : Integer*, n : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, c__ : Complex*, ldc : Integer*, scale : Real*, info : Integer*) : LibC::Int
  fun ctrti2(uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, info : Integer*) : LibC::Int
  fun ctrtri(uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, info : Integer*) : LibC::Int
  fun ctrtrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, a : Complex*, lda : Integer*, b : Complex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun ctrttf(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, arf : Complex*, info : Integer*) : LibC::Int
  fun ctrttp(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, ap : Complex*, info : Integer*) : LibC::Int
  fun ctzrqf(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, tau : Complex*, info : Integer*) : LibC::Int
  fun ctzrzf(m : Integer*, n : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cung2l(m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, info : Integer*) : LibC::Int
  fun cung2r(m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, info : Integer*) : LibC::Int
  fun cungbr(vect : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cunghr(n : Integer*, ilo : Integer*, ihi : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cungl2(m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, info : Integer*) : LibC::Int
  fun cunglq(m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cungql(m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cungqr(m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cungr2(m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, info : Integer*) : LibC::Int
  fun cungrq(m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cungtr(uplo : LibC::Char*, n : Integer*, a : Complex*, lda : Integer*, tau : Complex*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cunm2l(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, info : Integer*) : LibC::Int
  fun cunm2r(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, info : Integer*) : LibC::Int
  fun cunmbr(vect : LibC::Char*, side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cunmhr(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, ilo : Integer*, ihi : Integer*, a : Complex*, lda : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cunml2(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, info : Integer*) : LibC::Int
  fun cunmlq(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cunmql(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cunmqr(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cunmr2(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, info : Integer*) : LibC::Int
  fun cunmr3(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, l : Integer*, a : Complex*, lda : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, info : Integer*) : LibC::Int
  fun cunmrq(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Complex*, lda : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cunmrz(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, l : Integer*, a : Complex*, lda : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cunmtr(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, a : Complex*, lda : Integer*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun cupgtr(uplo : LibC::Char*, n : Integer*, ap : Complex*, tau : Complex*, q : Complex*, ldq : Integer*, work : Complex*, info : Integer*) : LibC::Int
  fun cupmtr(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, ap : Complex*, tau : Complex*, c__ : Complex*, ldc : Integer*, work : Complex*, info : Integer*) : LibC::Int
  fun dbdsdc(uplo : LibC::Char*, compq : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, u : Doublereal*, ldu : Integer*, vt : Doublereal*, ldvt : Integer*, q : Doublereal*, iq : Integer*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dbdsqr(uplo : LibC::Char*, n : Integer*, ncvt : Integer*, nru : Integer*, ncc : Integer*, d__ : Doublereal*, e : Doublereal*, vt : Doublereal*, ldvt : Integer*, u : Doublereal*, ldu : Integer*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun ddisna(job : LibC::Char*, m : Integer*, n : Integer*, d__ : Doublereal*, sep : Doublereal*, info : Integer*) : LibC::Int
  fun dgbbrd(vect : LibC::Char*, m : Integer*, n : Integer*, ncc : Integer*, kl : Integer*, ku : Integer*, ab : Doublereal*, ldab : Integer*, d__ : Doublereal*, e : Doublereal*, q : Doublereal*, ldq : Integer*, pt : Doublereal*, ldpt : Integer*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dgbcon(norm : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublereal*, ldab : Integer*, ipiv : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgbequ(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublereal*, ldab : Integer*, r__ : Doublereal*, c__ : Doublereal*, rowcnd : Doublereal*, colcnd : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun dgbequb(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublereal*, ldab : Integer*, r__ : Doublereal*, c__ : Doublereal*, rowcnd : Doublereal*, colcnd : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun dgbrfs(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublereal*, ldab : Integer*, afb : Doublereal*, ldafb : Integer*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgbrfsx(trans : LibC::Char*, equed : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublereal*, ldab : Integer*, afb : Doublereal*, ldafb : Integer*, ipiv : Integer*, r__ : Doublereal*, c__ : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgbsv(n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublereal*, ldab : Integer*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dgbsvx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublereal*, ldab : Integer*, afb : Doublereal*, ldafb : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Doublereal*, c__ : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgbsvxx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublereal*, ldab : Integer*, afb : Doublereal*, ldafb : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Doublereal*, c__ : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, rpvgrw : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgbtf2(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublereal*, ldab : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun dgbtrf(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublereal*, ldab : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun dgbtrs(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublereal*, ldab : Integer*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dgebak(job : LibC::Char*, side : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, scale : Doublereal*, m : Integer*, v : Doublereal*, ldv : Integer*, info : Integer*) : LibC::Int
  fun dgebal(job : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, ilo : Integer*, ihi : Integer*, scale : Doublereal*, info : Integer*) : LibC::Int
  fun dgebd2(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, d__ : Doublereal*, e : Doublereal*, tauq : Doublereal*, taup : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dgebrd(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, d__ : Doublereal*, e : Doublereal*, tauq : Doublereal*, taup : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgecon(norm : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgeequ(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, r__ : Doublereal*, c__ : Doublereal*, rowcnd : Doublereal*, colcnd : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun dgeequb(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, r__ : Doublereal*, c__ : Doublereal*, rowcnd : Doublereal*, colcnd : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun dgees(jobvs : LibC::Char*, sort : LibC::Char*, select : LFp, n : Integer*, a : Doublereal*, lda : Integer*, sdim : Integer*, wr : Doublereal*, wi : Doublereal*, vs : Doublereal*, ldvs : Integer*, work : Doublereal*, lwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun dgeesx(jobvs : LibC::Char*, sort : LibC::Char*, select : LFp, sense : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, sdim : Integer*, wr : Doublereal*, wi : Doublereal*, vs : Doublereal*, ldvs : Integer*, rconde : Doublereal*, rcondv : Doublereal*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun dgeev(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, wr : Doublereal*, wi : Doublereal*, vl : Doublereal*, ldvl : Integer*, vr : Doublereal*, ldvr : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgeevx(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, wr : Doublereal*, wi : Doublereal*, vl : Doublereal*, ldvl : Integer*, vr : Doublereal*, ldvr : Integer*, ilo : Integer*, ihi : Integer*, scale : Doublereal*, abnrm : Doublereal*, rconde : Doublereal*, rcondv : Doublereal*, work : Doublereal*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgegs(jobvsl : LibC::Char*, jobvsr : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, alphar : Doublereal*, alphai : Doublereal*, beta : Doublereal*, vsl : Doublereal*, ldvsl : Integer*, vsr : Doublereal*, ldvsr : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgegv(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, alphar : Doublereal*, alphai : Doublereal*, beta : Doublereal*, vl : Doublereal*, ldvl : Integer*, vr : Doublereal*, ldvr : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgehd2(n : Integer*, ilo : Integer*, ihi : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dgehrd(n : Integer*, ilo : Integer*, ihi : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgejsv(joba : LibC::Char*, jobu : LibC::Char*, jobv : LibC::Char*, jobr : LibC::Char*, jobt : LibC::Char*, jobp : LibC::Char*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, sva : Doublereal*, u : Doublereal*, ldu : Integer*, v : Doublereal*, ldv : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgelq2(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dgelqf(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgels(trans : LibC::Char*, m : Integer*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgelsd(m : Integer*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, s : Doublereal*, rcond : Doublereal*, rank : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgelss(m : Integer*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, s : Doublereal*, rcond : Doublereal*, rank : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgelsx(m : Integer*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, jpvt : Integer*, rcond : Doublereal*, rank : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dgelsy(m : Integer*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, jpvt : Integer*, rcond : Doublereal*, rank : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgeql2(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dgeqlf(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgeqp3(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, jpvt : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgeqpf(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, jpvt : Integer*, tau : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dgeqr2(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dgeqrf(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgerfs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgerfsx(trans : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, ipiv : Integer*, r__ : Doublereal*, c__ : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgerq2(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dgerqf(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgesc2(n : Integer*, a : Doublereal*, lda : Integer*, rhs : Doublereal*, ipiv : Integer*, jpiv : Integer*, scale : Doublereal*) : LibC::Int
  fun dgesdd(jobz : LibC::Char*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, s : Doublereal*, u : Doublereal*, ldu : Integer*, vt : Doublereal*, ldvt : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgesv(n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dgesvd(jobu : LibC::Char*, jobvt : LibC::Char*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, s : Doublereal*, u : Doublereal*, ldu : Integer*, vt : Doublereal*, ldvt : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgesvj(joba : LibC::Char*, jobu : LibC::Char*, jobv : LibC::Char*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, sva : Doublereal*, mv : Integer*, v : Doublereal*, ldv : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgesvx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Doublereal*, c__ : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgesvxx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Doublereal*, c__ : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, rpvgrw : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgetc2(n : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, jpiv : Integer*, info : Integer*) : LibC::Int
  fun dgetf2(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun dgetrf(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun dgetri(n : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgetrs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dggbak(job : LibC::Char*, side : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, lscale : Doublereal*, rscale : Doublereal*, m : Integer*, v : Doublereal*, ldv : Integer*, info : Integer*) : LibC::Int
  fun dggbal(job : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, ilo : Integer*, ihi : Integer*, lscale : Doublereal*, rscale : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dgges(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LFp, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, sdim : Integer*, alphar : Doublereal*, alphai : Doublereal*, beta : Doublereal*, vsl : Doublereal*, ldvsl : Integer*, vsr : Doublereal*, ldvsr : Integer*, work : Doublereal*, lwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun dggesx(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LFp, sense : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, sdim : Integer*, alphar : Doublereal*, alphai : Doublereal*, beta : Doublereal*, vsl : Doublereal*, ldvsl : Integer*, vsr : Doublereal*, ldvsr : Integer*, rconde : Doublereal*, rcondv : Doublereal*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun dggev(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, alphar : Doublereal*, alphai : Doublereal*, beta : Doublereal*, vl : Doublereal*, ldvl : Integer*, vr : Doublereal*, ldvr : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dggevx(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, alphar : Doublereal*, alphai : Doublereal*, beta : Doublereal*, vl : Doublereal*, ldvl : Integer*, vr : Doublereal*, ldvr : Integer*, ilo : Integer*, ihi : Integer*, lscale : Doublereal*, rscale : Doublereal*, abnrm : Doublereal*, bbnrm : Doublereal*, rconde : Doublereal*, rcondv : Doublereal*, work : Doublereal*, lwork : Integer*, iwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun dggglm(n : Integer*, m : Integer*, p : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, d__ : Doublereal*, x : Doublereal*, y : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgghrd(compq : LibC::Char*, compz : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, q : Doublereal*, ldq : Integer*, z__ : Doublereal*, ldz : Integer*, info : Integer*) : LibC::Int
  fun dgglse(m : Integer*, n : Integer*, p : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, c__ : Doublereal*, d__ : Doublereal*, x : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dggqrf(n : Integer*, m : Integer*, p : Integer*, a : Doublereal*, lda : Integer*, taua : Doublereal*, b : Doublereal*, ldb : Integer*, taub : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dggrqf(m : Integer*, p : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, taua : Doublereal*, b : Doublereal*, ldb : Integer*, taub : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dggsvd(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Integer*, n : Integer*, p : Integer*, k : Integer*, l : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, alpha : Doublereal*, beta : Doublereal*, u : Doublereal*, ldu : Integer*, v : Doublereal*, ldv : Integer*, q : Doublereal*, ldq : Integer*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dggsvp(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Integer*, p : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, tola : Doublereal*, tolb : Doublereal*, k : Integer*, l : Integer*, u : Doublereal*, ldu : Integer*, v : Doublereal*, ldv : Integer*, q : Doublereal*, ldq : Integer*, iwork : Integer*, tau : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dgsvj0(jobv : LibC::Char*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, d__ : Doublereal*, sva : Doublereal*, mv : Integer*, v : Doublereal*, ldv : Integer*, eps : Doublereal*, sfmin : Doublereal*, tol : Doublereal*, nsweep : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgsvj1(jobv : LibC::Char*, m : Integer*, n : Integer*, n1 : Integer*, a : Doublereal*, lda : Integer*, d__ : Doublereal*, sva : Doublereal*, mv : Integer*, v : Doublereal*, ldv : Integer*, eps : Doublereal*, sfmin : Doublereal*, tol : Doublereal*, nsweep : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dgtcon(norm : LibC::Char*, n : Integer*, dl : Doublereal*, d__ : Doublereal*, du : Doublereal*, du2 : Doublereal*, ipiv : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgtrfs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, dl : Doublereal*, d__ : Doublereal*, du : Doublereal*, dlf : Doublereal*, df : Doublereal*, duf : Doublereal*, du2 : Doublereal*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgtsv(n : Integer*, nrhs : Integer*, dl : Doublereal*, d__ : Doublereal*, du : Doublereal*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dgtsvx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, nrhs : Integer*, dl : Doublereal*, d__ : Doublereal*, du : Doublereal*, dlf : Doublereal*, df : Doublereal*, duf : Doublereal*, du2 : Doublereal*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dgttrf(n : Integer*, dl : Doublereal*, d__ : Doublereal*, du : Doublereal*, du2 : Doublereal*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun dgttrs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, dl : Doublereal*, d__ : Doublereal*, du : Doublereal*, du2 : Doublereal*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dgtts2(itrans : Integer*, n : Integer*, nrhs : Integer*, dl : Doublereal*, d__ : Doublereal*, du : Doublereal*, du2 : Doublereal*, ipiv : Integer*, b : Doublereal*, ldb : Integer*) : LibC::Int
  fun dhgeqz(job : LibC::Char*, compq : LibC::Char*, compz : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Doublereal*, ldh : Integer*, t : Doublereal*, ldt : Integer*, alphar : Doublereal*, alphai : Doublereal*, beta : Doublereal*, q : Doublereal*, ldq : Integer*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dhsein(side : LibC::Char*, eigsrc : LibC::Char*, initv : LibC::Char*, select : Logical*, n : Integer*, h__ : Doublereal*, ldh : Integer*, wr : Doublereal*, wi : Doublereal*, vl : Doublereal*, ldvl : Integer*, vr : Doublereal*, ldvr : Integer*, mm : Integer*, m : Integer*, work : Doublereal*, ifaill : Integer*, ifailr : Integer*, info : Integer*) : LibC::Int
  fun dhseqr(job : LibC::Char*, compz : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Doublereal*, ldh : Integer*, wr : Doublereal*, wi : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun disnan(din : Doublereal*) : Logical
  fun dla_gbamv_(trans : Integer*, m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, alpha : Doublereal*, ab : Doublereal*, ldab : Integer*, x : Doublereal*, incx : Integer*, beta : Doublereal*, y : Doublereal*, incy : Integer*) : LibC::Int
  fun dla_gbrcond_(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublereal*, ldab : Integer*, afb : Doublereal*, ldafb : Integer*, ipiv : Integer*, cmode : Integer*, c__ : Doublereal*, info : Integer*, work : Doublereal*, iwork : Integer*, trans_len : Ftnlen) : Doublereal
  fun dla_gbrfsx_extended_(prec_type__ : Integer*, trans_type__ : Integer*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublereal*, ldab : Integer*, afb : Doublereal*, ldafb : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Doublereal*, b : Doublereal*, ldb : Integer*, y : Doublereal*, ldy : Integer*, berr_out__ : Doublereal*, n_norms__ : Integer*, errs_n__ : Doublereal*, errs_c__ : Doublereal*, res : Doublereal*, ayb : Doublereal*, dy : Doublereal*, y_tail__ : Doublereal*, rcond : Doublereal*, ithresh : Integer*, rthresh : Doublereal*, dz_ub__ : Doublereal*, ignore_cwise__ : Logical*, info : Integer*) : LibC::Int
  fun dla_gbrpvgrw_(n : Integer*, kl : Integer*, ku : Integer*, ncols : Integer*, ab : Doublereal*, ldab : Integer*, afb : Doublereal*, ldafb : Integer*) : Doublereal
  fun dla_geamv_(trans : Integer*, m : Integer*, n : Integer*, alpha : Doublereal*, a : Doublereal*, lda : Integer*, x : Doublereal*, incx : Integer*, beta : Doublereal*, y : Doublereal*, incy : Integer*) : LibC::Int
  fun dla_gercond_(trans : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, ipiv : Integer*, cmode : Integer*, c__ : Doublereal*, info : Integer*, work : Doublereal*, iwork : Integer*, trans_len : Ftnlen) : Doublereal
  fun dla_gerfsx_extended_(prec_type__ : Integer*, trans_type__ : Integer*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Doublereal*, b : Doublereal*, ldb : Integer*, y : Doublereal*, ldy : Integer*, berr_out__ : Doublereal*, n_norms__ : Integer*, errs_n__ : Doublereal*, errs_c__ : Doublereal*, res : Doublereal*, ayb : Doublereal*, dy : Doublereal*, y_tail__ : Doublereal*, rcond : Doublereal*, ithresh : Integer*, rthresh : Doublereal*, dz_ub__ : Doublereal*, ignore_cwise__ : Logical*, info : Integer*) : LibC::Int
  fun dla_lin_berr_(n : Integer*, nz : Integer*, nrhs : Integer*, res : Doublereal*, ayb : Doublereal*, berr : Doublereal*) : LibC::Int
  fun dla_porcond_(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, cmode : Integer*, c__ : Doublereal*, info : Integer*, work : Doublereal*, iwork : Integer*, uplo_len : Ftnlen) : Doublereal
  fun dla_porfsx_extended_(prec_type__ : Integer*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, colequ : Logical*, c__ : Doublereal*, b : Doublereal*, ldb : Integer*, y : Doublereal*, ldy : Integer*, berr_out__ : Doublereal*, n_norms__ : Integer*, errs_n__ : Doublereal*, errs_c__ : Doublereal*, res : Doublereal*, ayb : Doublereal*, dy : Doublereal*, y_tail__ : Doublereal*, rcond : Doublereal*, ithresh : Integer*, rthresh : Doublereal*, dz_ub__ : Doublereal*, ignore_cwise__ : Logical*, info : Integer*, uplo_len : Ftnlen) : LibC::Int
  fun dla_porpvgrw_(uplo : LibC::Char*, ncols : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, work : Doublereal*, uplo_len : Ftnlen) : Doublereal
  fun dla_rpvgrw_(n : Integer*, ncols : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*) : Doublereal
  fun dla_syamv_(uplo : Integer*, n : Integer*, alpha : Doublereal*, a : Doublereal*, lda : Integer*, x : Doublereal*, incx : Integer*, beta : Doublereal*, y : Doublereal*, incy : Integer*) : LibC::Int
  fun dla_syrcond_(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, ipiv : Integer*, cmode : Integer*, c__ : Doublereal*, info : Integer*, work : Doublereal*, iwork : Integer*, uplo_len : Ftnlen) : Doublereal
  fun dla_syrfsx_extended_(prec_type__ : Integer*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Doublereal*, b : Doublereal*, ldb : Integer*, y : Doublereal*, ldy : Integer*, berr_out__ : Doublereal*, n_norms__ : Integer*, errs_n__ : Doublereal*, errs_c__ : Doublereal*, res : Doublereal*, ayb : Doublereal*, dy : Doublereal*, y_tail__ : Doublereal*, rcond : Doublereal*, ithresh : Integer*, rthresh : Doublereal*, dz_ub__ : Doublereal*, ignore_cwise__ : Logical*, info : Integer*, uplo_len : Ftnlen) : LibC::Int
  fun dla_syrpvgrw_(uplo : LibC::Char*, n : Integer*, info : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, ipiv : Integer*, work : Doublereal*, uplo_len : Ftnlen) : Doublereal
  fun dla_wwaddw_(n : Integer*, x : Doublereal*, y : Doublereal*, w : Doublereal*) : LibC::Int
  fun dlabad(small : Doublereal*, large : Doublereal*) : LibC::Int
  fun dlabrd(m : Integer*, n : Integer*, nb : Integer*, a : Doublereal*, lda : Integer*, d__ : Doublereal*, e : Doublereal*, tauq : Doublereal*, taup : Doublereal*, x : Doublereal*, ldx : Integer*, y : Doublereal*, ldy : Integer*) : LibC::Int
  fun dlacn2(n : Integer*, v : Doublereal*, x : Doublereal*, isgn : Integer*, est : Doublereal*, kase : Integer*, isave : Integer*) : LibC::Int
  fun dlacon(n : Integer*, v : Doublereal*, x : Doublereal*, isgn : Integer*, est : Doublereal*, kase : Integer*) : LibC::Int
  fun dlacpy(uplo : LibC::Char*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*) : LibC::Int
  fun dladiv(a : Doublereal*, b : Doublereal*, c__ : Doublereal*, d__ : Doublereal*, p : Doublereal*, q : Doublereal*) : LibC::Int
  fun dlae2(a : Doublereal*, b : Doublereal*, c__ : Doublereal*, rt1 : Doublereal*, rt2 : Doublereal*) : LibC::Int
  fun dlaebz(ijob : Integer*, nitmax : Integer*, n : Integer*, mmax : Integer*, minp : Integer*, nbmin : Integer*, abstol : Doublereal*, reltol : Doublereal*, pivmin : Doublereal*, d__ : Doublereal*, e : Doublereal*, e2 : Doublereal*, nval : Integer*, ab : Doublereal*, c__ : Doublereal*, mout : Integer*, nab : Integer*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dlaed0(icompq : Integer*, qsiz : Integer*, n : Integer*, d__ : Doublereal*, e : Doublereal*, q : Doublereal*, ldq : Integer*, qstore : Doublereal*, ldqs : Integer*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dlaed1(n : Integer*, d__ : Doublereal*, q : Doublereal*, ldq : Integer*, indxq : Integer*, rho : Doublereal*, cutpnt : Integer*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dlaed2(k : Integer*, n : Integer*, n1 : Integer*, d__ : Doublereal*, q : Doublereal*, ldq : Integer*, indxq : Integer*, rho : Doublereal*, z__ : Doublereal*, dlamda : Doublereal*, w : Doublereal*, q2 : Doublereal*, indx : Integer*, indxc : Integer*, indxp : Integer*, coltyp : Integer*, info : Integer*) : LibC::Int
  fun dlaed3(k : Integer*, n : Integer*, n1 : Integer*, d__ : Doublereal*, q : Doublereal*, ldq : Integer*, rho : Doublereal*, dlamda : Doublereal*, q2 : Doublereal*, indx : Integer*, ctot : Integer*, w : Doublereal*, s : Doublereal*, info : Integer*) : LibC::Int
  fun dlaed4(n : Integer*, i__ : Integer*, d__ : Doublereal*, z__ : Doublereal*, delta : Doublereal*, rho : Doublereal*, dlam : Doublereal*, info : Integer*) : LibC::Int
  fun dlaed5(i__ : Integer*, d__ : Doublereal*, z__ : Doublereal*, delta : Doublereal*, rho : Doublereal*, dlam : Doublereal*) : LibC::Int
  fun dlaed6(kniter : Integer*, orgati : Logical*, rho : Doublereal*, d__ : Doublereal*, z__ : Doublereal*, finit : Doublereal*, tau : Doublereal*, info : Integer*) : LibC::Int
  fun dlaed7(icompq : Integer*, n : Integer*, qsiz : Integer*, tlvls : Integer*, curlvl : Integer*, curpbm : Integer*, d__ : Doublereal*, q : Doublereal*, ldq : Integer*, indxq : Integer*, rho : Doublereal*, cutpnt : Integer*, qstore : Doublereal*, qptr : Integer*, prmptr : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, givnum : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dlaed8(icompq : Integer*, k : Integer*, n : Integer*, qsiz : Integer*, d__ : Doublereal*, q : Doublereal*, ldq : Integer*, indxq : Integer*, rho : Doublereal*, cutpnt : Integer*, z__ : Doublereal*, dlamda : Doublereal*, q2 : Doublereal*, ldq2 : Integer*, w : Doublereal*, perm : Integer*, givptr : Integer*, givcol : Integer*, givnum : Doublereal*, indxp : Integer*, indx : Integer*, info : Integer*) : LibC::Int
  fun dlaed9(k : Integer*, kstart : Integer*, kstop : Integer*, n : Integer*, d__ : Doublereal*, q : Doublereal*, ldq : Integer*, rho : Doublereal*, dlamda : Doublereal*, w : Doublereal*, s : Doublereal*, lds : Integer*, info : Integer*) : LibC::Int
  fun dlaeda(n : Integer*, tlvls : Integer*, curlvl : Integer*, curpbm : Integer*, prmptr : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, givnum : Doublereal*, q : Doublereal*, qptr : Integer*, z__ : Doublereal*, ztemp : Doublereal*, info : Integer*) : LibC::Int
  fun dlaein(rightv : Logical*, noinit : Logical*, n : Integer*, h__ : Doublereal*, ldh : Integer*, wr : Doublereal*, wi : Doublereal*, vr : Doublereal*, vi : Doublereal*, b : Doublereal*, ldb : Integer*, work : Doublereal*, eps3 : Doublereal*, smlnum : Doublereal*, bignum : Doublereal*, info : Integer*) : LibC::Int
  fun dlaev2(a : Doublereal*, b : Doublereal*, c__ : Doublereal*, rt1 : Doublereal*, rt2 : Doublereal*, cs1 : Doublereal*, sn1 : Doublereal*) : LibC::Int
  fun dlaexc(wantq : Logical*, n : Integer*, t : Doublereal*, ldt : Integer*, q : Doublereal*, ldq : Integer*, j1 : Integer*, n1 : Integer*, n2 : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dlag2(a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, safmin : Doublereal*, scale1 : Doublereal*, scale2 : Doublereal*, wr1 : Doublereal*, wr2 : Doublereal*, wi : Doublereal*) : LibC::Int
  fun dlag2s(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, sa : Real*, ldsa : Integer*, info : Integer*) : LibC::Int
  fun dlags2(upper : Logical*, a1 : Doublereal*, a2 : Doublereal*, a3 : Doublereal*, b1 : Doublereal*, b2 : Doublereal*, b3 : Doublereal*, csu : Doublereal*, snu : Doublereal*, csv : Doublereal*, snv : Doublereal*, csq : Doublereal*, snq : Doublereal*) : LibC::Int
  fun dlagtf(n : Integer*, a : Doublereal*, lambda : Doublereal*, b : Doublereal*, c__ : Doublereal*, tol : Doublereal*, d__ : Doublereal*, in : Integer*, info : Integer*) : LibC::Int
  fun dlagtm(trans : LibC::Char*, n : Integer*, nrhs : Integer*, alpha : Doublereal*, dl : Doublereal*, d__ : Doublereal*, du : Doublereal*, x : Doublereal*, ldx : Integer*, beta : Doublereal*, b : Doublereal*, ldb : Integer*) : LibC::Int
  fun dlagts(job : Integer*, n : Integer*, a : Doublereal*, b : Doublereal*, c__ : Doublereal*, d__ : Doublereal*, in : Integer*, y : Doublereal*, tol : Doublereal*, info : Integer*) : LibC::Int
  fun dlagv2(a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, alphar : Doublereal*, alphai : Doublereal*, beta : Doublereal*, csl : Doublereal*, snl : Doublereal*, csr : Doublereal*, snr : Doublereal*) : LibC::Int
  fun dlahqr(wantt : Logical*, wantz : Logical*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Doublereal*, ldh : Integer*, wr : Doublereal*, wi : Doublereal*, iloz : Integer*, ihiz : Integer*, z__ : Doublereal*, ldz : Integer*, info : Integer*) : LibC::Int
  fun dlahr2(n : Integer*, k : Integer*, nb : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, t : Doublereal*, ldt : Integer*, y : Doublereal*, ldy : Integer*) : LibC::Int
  fun dlahrd(n : Integer*, k : Integer*, nb : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, t : Doublereal*, ldt : Integer*, y : Doublereal*, ldy : Integer*) : LibC::Int
  fun dlaic1(job : Integer*, j : Integer*, x : Doublereal*, sest : Doublereal*, w : Doublereal*, gamma : Doublereal*, sestpr : Doublereal*, s : Doublereal*, c__ : Doublereal*) : LibC::Int
  fun dlaisnan(din1 : Doublereal*, din2 : Doublereal*) : Logical
  fun dlaln2(ltrans : Logical*, na : Integer*, nw : Integer*, smin : Doublereal*, ca : Doublereal*, a : Doublereal*, lda : Integer*, d1 : Doublereal*, d2 : Doublereal*, b : Doublereal*, ldb : Integer*, wr : Doublereal*, wi : Doublereal*, x : Doublereal*, ldx : Integer*, scale : Doublereal*, xnorm : Doublereal*, info : Integer*) : LibC::Int
  fun dlals0(icompq : Integer*, nl : Integer*, nr : Integer*, sqre : Integer*, nrhs : Integer*, b : Doublereal*, ldb : Integer*, bx : Doublereal*, ldbx : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, givnum : Doublereal*, ldgnum : Integer*, poles : Doublereal*, difl : Doublereal*, difr : Doublereal*, z__ : Doublereal*, k : Integer*, c__ : Doublereal*, s : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dlalsa(icompq : Integer*, smlsiz : Integer*, n : Integer*, nrhs : Integer*, b : Doublereal*, ldb : Integer*, bx : Doublereal*, ldbx : Integer*, u : Doublereal*, ldu : Integer*, vt : Doublereal*, k : Integer*, difl : Doublereal*, difr : Doublereal*, z__ : Doublereal*, poles : Doublereal*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, perm : Integer*, givnum : Doublereal*, c__ : Doublereal*, s : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dlalsd(uplo : LibC::Char*, smlsiz : Integer*, n : Integer*, nrhs : Integer*, d__ : Doublereal*, e : Doublereal*, b : Doublereal*, ldb : Integer*, rcond : Doublereal*, rank : Integer*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dlamrg(n1 : Integer*, n2 : Integer*, a : Doublereal*, dtrd1 : Integer*, dtrd2 : Integer*, index : Integer*) : LibC::Int
  fun dlaneg(n : Integer*, d__ : Doublereal*, lld : Doublereal*, sigma : Doublereal*, pivmin : Doublereal*, r__ : Integer*) : Integer
  fun dlangb(norm : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublereal*, ldab : Integer*, work : Doublereal*) : Doublereal
  fun dlange(norm : LibC::Char*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, work : Doublereal*) : Doublereal
  fun dlangt(norm : LibC::Char*, n : Integer*, dl : Doublereal*, d__ : Doublereal*, du : Doublereal*) : Doublereal
  fun dlanhs(norm : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, work : Doublereal*) : Doublereal
  fun dlansb(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, k : Integer*, ab : Doublereal*, ldab : Integer*, work : Doublereal*) : Doublereal
  fun dlansf(norm : LibC::Char*, transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, work : Doublereal*) : Doublereal
  fun dlansp(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublereal*, work : Doublereal*) : Doublereal
  fun dlanst(norm : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*) : Doublereal
  fun dlansy(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, work : Doublereal*) : Doublereal
  fun dlantb(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, k : Integer*, ab : Doublereal*, ldab : Integer*, work : Doublereal*) : Doublereal
  fun dlantp(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, ap : Doublereal*, work : Doublereal*) : Doublereal
  fun dlantr(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, work : Doublereal*) : Doublereal
  fun dlanv2(a : Doublereal*, b : Doublereal*, c__ : Doublereal*, d__ : Doublereal*, rt1r : Doublereal*, rt1i : Doublereal*, rt2r : Doublereal*, rt2i : Doublereal*, cs : Doublereal*, sn : Doublereal*) : LibC::Int
  fun dlapll(n : Integer*, x : Doublereal*, incx : Integer*, y : Doublereal*, incy : Integer*, ssmin : Doublereal*) : LibC::Int
  fun dlapmt(forwrd : Logical*, m : Integer*, n : Integer*, x : Doublereal*, ldx : Integer*, k : Integer*) : LibC::Int
  fun dlapy2(x : Doublereal*, y : Doublereal*) : Doublereal
  fun dlapy3(x : Doublereal*, y : Doublereal*, z__ : Doublereal*) : Doublereal
  fun dlaqgb(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublereal*, ldab : Integer*, r__ : Doublereal*, c__ : Doublereal*, rowcnd : Doublereal*, colcnd : Doublereal*, amax : Doublereal*, equed : LibC::Char*) : LibC::Int
  fun dlaqge(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, r__ : Doublereal*, c__ : Doublereal*, rowcnd : Doublereal*, colcnd : Doublereal*, amax : Doublereal*, equed : LibC::Char*) : LibC::Int
  fun dlaqp2(m : Integer*, n : Integer*, offset : Integer*, a : Doublereal*, lda : Integer*, jpvt : Integer*, tau : Doublereal*, vn1 : Doublereal*, vn2 : Doublereal*, work : Doublereal*) : LibC::Int
  fun dlaqps(m : Integer*, n : Integer*, offset : Integer*, nb : Integer*, kb : Integer*, a : Doublereal*, lda : Integer*, jpvt : Integer*, tau : Doublereal*, vn1 : Doublereal*, vn2 : Doublereal*, auxv : Doublereal*, f : Doublereal*, ldf : Integer*) : LibC::Int
  fun dlaqr0(wantt : Logical*, wantz : Logical*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Doublereal*, ldh : Integer*, wr : Doublereal*, wi : Doublereal*, iloz : Integer*, ihiz : Integer*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dlaqr1(n : Integer*, h__ : Doublereal*, ldh : Integer*, sr1 : Doublereal*, si1 : Doublereal*, sr2 : Doublereal*, si2 : Doublereal*, v : Doublereal*) : LibC::Int
  fun dlaqr2(wantt : Logical*, wantz : Logical*, n : Integer*, ktop : Integer*, kbot : Integer*, nw : Integer*, h__ : Doublereal*, ldh : Integer*, iloz : Integer*, ihiz : Integer*, z__ : Doublereal*, ldz : Integer*, ns : Integer*, nd : Integer*, sr : Doublereal*, si : Doublereal*, v : Doublereal*, ldv : Integer*, nh : Integer*, t : Doublereal*, ldt : Integer*, nv : Integer*, wv : Doublereal*, ldwv : Integer*, work : Doublereal*, lwork : Integer*) : LibC::Int
  fun dlaqr3(wantt : Logical*, wantz : Logical*, n : Integer*, ktop : Integer*, kbot : Integer*, nw : Integer*, h__ : Doublereal*, ldh : Integer*, iloz : Integer*, ihiz : Integer*, z__ : Doublereal*, ldz : Integer*, ns : Integer*, nd : Integer*, sr : Doublereal*, si : Doublereal*, v : Doublereal*, ldv : Integer*, nh : Integer*, t : Doublereal*, ldt : Integer*, nv : Integer*, wv : Doublereal*, ldwv : Integer*, work : Doublereal*, lwork : Integer*) : LibC::Int
  fun dlaqr4(wantt : Logical*, wantz : Logical*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Doublereal*, ldh : Integer*, wr : Doublereal*, wi : Doublereal*, iloz : Integer*, ihiz : Integer*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dlaqr5(wantt : Logical*, wantz : Logical*, kacc22 : Integer*, n : Integer*, ktop : Integer*, kbot : Integer*, nshfts : Integer*, sr : Doublereal*, si : Doublereal*, h__ : Doublereal*, ldh : Integer*, iloz : Integer*, ihiz : Integer*, z__ : Doublereal*, ldz : Integer*, v : Doublereal*, ldv : Integer*, u : Doublereal*, ldu : Integer*, nv : Integer*, wv : Doublereal*, ldwv : Integer*, nh : Integer*, wh : Doublereal*, ldwh : Integer*) : LibC::Int
  fun dlaqsb(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublereal*, ldab : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, equed : LibC::Char*) : LibC::Int
  fun dlaqsp(uplo : LibC::Char*, n : Integer*, ap : Doublereal*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, equed : LibC::Char*) : LibC::Int
  fun dlaqsy(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, equed : LibC::Char*) : LibC::Int
  fun dlaqtr(ltran : Logical*, lreal : Logical*, n : Integer*, t : Doublereal*, ldt : Integer*, b : Doublereal*, w : Doublereal*, scale : Doublereal*, x : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dlar1v(n : Integer*, b1 : Integer*, bn : Integer*, lambda : Doublereal*, d__ : Doublereal*, l : Doublereal*, ld : Doublereal*, lld : Doublereal*, pivmin : Doublereal*, gaptol : Doublereal*, z__ : Doublereal*, wantnc : Logical*, negcnt : Integer*, ztz : Doublereal*, mingma : Doublereal*, r__ : Integer*, isuppz : Integer*, nrminv : Doublereal*, resid : Doublereal*, rqcorr : Doublereal*, work : Doublereal*) : LibC::Int
  fun dlar2v(n : Integer*, x : Doublereal*, y : Doublereal*, z__ : Doublereal*, incx : Integer*, c__ : Doublereal*, s : Doublereal*, incc : Integer*) : LibC::Int
  fun dlarf(side : LibC::Char*, m : Integer*, n : Integer*, v : Doublereal*, incv : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*) : LibC::Int
  fun dlarfb(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, v : Doublereal*, ldv : Integer*, t : Doublereal*, ldt : Integer*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, ldwork : Integer*) : LibC::Int
  fun dlarfg(n : Integer*, alpha : Doublereal*, x : Doublereal*, incx : Integer*, tau : Doublereal*) : LibC::Int
  fun dlarfp(n : Integer*, alpha : Doublereal*, x : Doublereal*, incx : Integer*, tau : Doublereal*) : LibC::Int
  fun dlarft(direct : LibC::Char*, storev : LibC::Char*, n : Integer*, k : Integer*, v : Doublereal*, ldv : Integer*, tau : Doublereal*, t : Doublereal*, ldt : Integer*) : LibC::Int
  fun dlarfx(side : LibC::Char*, m : Integer*, n : Integer*, v : Doublereal*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*) : LibC::Int
  fun dlargv(n : Integer*, x : Doublereal*, incx : Integer*, y : Doublereal*, incy : Integer*, c__ : Doublereal*, incc : Integer*) : LibC::Int
  fun dlarnv(idist : Integer*, iseed : Integer*, n : Integer*, x : Doublereal*) : LibC::Int
  fun dlarra(n : Integer*, d__ : Doublereal*, e : Doublereal*, e2 : Doublereal*, spltol : Doublereal*, tnrm : Doublereal*, nsplit : Integer*, isplit : Integer*, info : Integer*) : LibC::Int
  fun dlarrb(n : Integer*, d__ : Doublereal*, lld : Doublereal*, ifirst : Integer*, ilast : Integer*, rtol1 : Doublereal*, rtol2 : Doublereal*, offset : Integer*, w : Doublereal*, wgap : Doublereal*, werr : Doublereal*, work : Doublereal*, iwork : Integer*, pivmin : Doublereal*, spdiam : Doublereal*, twist : Integer*, info : Integer*) : LibC::Int
  fun dlarrc(jobt : LibC::Char*, n : Integer*, vl : Doublereal*, vu : Doublereal*, d__ : Doublereal*, e : Doublereal*, pivmin : Doublereal*, eigcnt : Integer*, lcnt : Integer*, rcnt : Integer*, info : Integer*) : LibC::Int
  fun dlarrd(range : LibC::Char*, order : LibC::Char*, n : Integer*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, gers : Doublereal*, reltol : Doublereal*, d__ : Doublereal*, e : Doublereal*, e2 : Doublereal*, pivmin : Doublereal*, nsplit : Integer*, isplit : Integer*, m : Integer*, w : Doublereal*, werr : Doublereal*, wl : Doublereal*, wu : Doublereal*, iblock : Integer*, indexw : Integer*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dlarre(range : LibC::Char*, n : Integer*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, d__ : Doublereal*, e : Doublereal*, e2 : Doublereal*, rtol1 : Doublereal*, rtol2 : Doublereal*, spltol : Doublereal*, nsplit : Integer*, isplit : Integer*, m : Integer*, w : Doublereal*, werr : Doublereal*, wgap : Doublereal*, iblock : Integer*, indexw : Integer*, gers : Doublereal*, pivmin : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dlarrf(n : Integer*, d__ : Doublereal*, l : Doublereal*, ld : Doublereal*, clstrt : Integer*, clend : Integer*, w : Doublereal*, wgap : Doublereal*, werr : Doublereal*, spdiam : Doublereal*, clgapl : Doublereal*, clgapr : Doublereal*, pivmin : Doublereal*, sigma : Doublereal*, dplus : Doublereal*, lplus : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dlarrj(n : Integer*, d__ : Doublereal*, e2 : Doublereal*, ifirst : Integer*, ilast : Integer*, rtol : Doublereal*, offset : Integer*, w : Doublereal*, werr : Doublereal*, work : Doublereal*, iwork : Integer*, pivmin : Doublereal*, spdiam : Doublereal*, info : Integer*) : LibC::Int
  fun dlarrk(n : Integer*, iw : Integer*, gl : Doublereal*, gu : Doublereal*, d__ : Doublereal*, e2 : Doublereal*, pivmin : Doublereal*, reltol : Doublereal*, w : Doublereal*, werr : Doublereal*, info : Integer*) : LibC::Int
  fun dlarrr(n : Integer*, d__ : Doublereal*, e : Doublereal*, info : Integer*) : LibC::Int
  fun dlarrv(n : Integer*, vl : Doublereal*, vu : Doublereal*, d__ : Doublereal*, l : Doublereal*, pivmin : Doublereal*, isplit : Integer*, m : Integer*, dol : Integer*, dou : Integer*, minrgp : Doublereal*, rtol1 : Doublereal*, rtol2 : Doublereal*, w : Doublereal*, werr : Doublereal*, wgap : Doublereal*, iblock : Integer*, indexw : Integer*, gers : Doublereal*, z__ : Doublereal*, ldz : Integer*, isuppz : Integer*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dlarscl2(m : Integer*, n : Integer*, d__ : Doublereal*, x : Doublereal*, ldx : Integer*) : LibC::Int
  fun dlartg(f : Doublereal*, g : Doublereal*, cs : Doublereal*, sn : Doublereal*, r__ : Doublereal*) : LibC::Int
  fun dlartv(n : Integer*, x : Doublereal*, incx : Integer*, y : Doublereal*, incy : Integer*, c__ : Doublereal*, s : Doublereal*, incc : Integer*) : LibC::Int
  fun dlaruv(iseed : Integer*, n : Integer*, x : Doublereal*) : LibC::Int
  fun dlarz(side : LibC::Char*, m : Integer*, n : Integer*, l : Integer*, v : Doublereal*, incv : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*) : LibC::Int
  fun dlarzb(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, l : Integer*, v : Doublereal*, ldv : Integer*, t : Doublereal*, ldt : Integer*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, ldwork : Integer*) : LibC::Int
  fun dlarzt(direct : LibC::Char*, storev : LibC::Char*, n : Integer*, k : Integer*, v : Doublereal*, ldv : Integer*, tau : Doublereal*, t : Doublereal*, ldt : Integer*) : LibC::Int
  fun dlas2(f : Doublereal*, g : Doublereal*, h__ : Doublereal*, ssmin : Doublereal*, ssmax : Doublereal*) : LibC::Int
  fun dlascl(type__ : LibC::Char*, kl : Integer*, ku : Integer*, cfrom : Doublereal*, cto : Doublereal*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, info : Integer*) : LibC::Int
  fun dlascl2(m : Integer*, n : Integer*, d__ : Doublereal*, x : Doublereal*, ldx : Integer*) : LibC::Int
  fun dlasd0(n : Integer*, sqre : Integer*, d__ : Doublereal*, e : Doublereal*, u : Doublereal*, ldu : Integer*, vt : Doublereal*, ldvt : Integer*, smlsiz : Integer*, iwork : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dlasd1(nl : Integer*, nr : Integer*, sqre : Integer*, d__ : Doublereal*, alpha : Doublereal*, beta : Doublereal*, u : Doublereal*, ldu : Integer*, vt : Doublereal*, ldvt : Integer*, idxq : Integer*, iwork : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dlasd2(nl : Integer*, nr : Integer*, sqre : Integer*, k : Integer*, d__ : Doublereal*, z__ : Doublereal*, alpha : Doublereal*, beta : Doublereal*, u : Doublereal*, ldu : Integer*, vt : Doublereal*, ldvt : Integer*, dsigma : Doublereal*, u2 : Doublereal*, ldu2 : Integer*, vt2 : Doublereal*, ldvt2 : Integer*, idxp : Integer*, idx : Integer*, idxc : Integer*, idxq : Integer*, coltyp : Integer*, info : Integer*) : LibC::Int
  fun dlasd3(nl : Integer*, nr : Integer*, sqre : Integer*, k : Integer*, d__ : Doublereal*, q : Doublereal*, ldq : Integer*, dsigma : Doublereal*, u : Doublereal*, ldu : Integer*, u2 : Doublereal*, ldu2 : Integer*, vt : Doublereal*, ldvt : Integer*, vt2 : Doublereal*, ldvt2 : Integer*, idxc : Integer*, ctot : Integer*, z__ : Doublereal*, info : Integer*) : LibC::Int
  fun dlasd4(n : Integer*, i__ : Integer*, d__ : Doublereal*, z__ : Doublereal*, delta : Doublereal*, rho : Doublereal*, sigma : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dlasd5(i__ : Integer*, d__ : Doublereal*, z__ : Doublereal*, delta : Doublereal*, rho : Doublereal*, dsigma : Doublereal*, work : Doublereal*) : LibC::Int
  fun dlasd6(icompq : Integer*, nl : Integer*, nr : Integer*, sqre : Integer*, d__ : Doublereal*, vf : Doublereal*, vl : Doublereal*, alpha : Doublereal*, beta : Doublereal*, idxq : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, givnum : Doublereal*, ldgnum : Integer*, poles : Doublereal*, difl : Doublereal*, difr : Doublereal*, z__ : Doublereal*, k : Integer*, c__ : Doublereal*, s : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dlasd7(icompq : Integer*, nl : Integer*, nr : Integer*, sqre : Integer*, k : Integer*, d__ : Doublereal*, z__ : Doublereal*, zw : Doublereal*, vf : Doublereal*, vfw : Doublereal*, vl : Doublereal*, vlw : Doublereal*, alpha : Doublereal*, beta : Doublereal*, dsigma : Doublereal*, idx : Integer*, idxp : Integer*, idxq : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, givnum : Doublereal*, ldgnum : Integer*, c__ : Doublereal*, s : Doublereal*, info : Integer*) : LibC::Int
  fun dlasd8(icompq : Integer*, k : Integer*, d__ : Doublereal*, z__ : Doublereal*, vf : Doublereal*, vl : Doublereal*, difl : Doublereal*, difr : Doublereal*, lddifr : Integer*, dsigma : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dlasda(icompq : Integer*, smlsiz : Integer*, n : Integer*, sqre : Integer*, d__ : Doublereal*, e : Doublereal*, u : Doublereal*, ldu : Integer*, vt : Doublereal*, k : Integer*, difl : Doublereal*, difr : Doublereal*, z__ : Doublereal*, poles : Doublereal*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, perm : Integer*, givnum : Doublereal*, c__ : Doublereal*, s : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dlasdq(uplo : LibC::Char*, sqre : Integer*, n : Integer*, ncvt : Integer*, nru : Integer*, ncc : Integer*, d__ : Doublereal*, e : Doublereal*, vt : Doublereal*, ldvt : Integer*, u : Doublereal*, ldu : Integer*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dlasdt(n : Integer*, lvl : Integer*, nd : Integer*, inode : Integer*, ndiml : Integer*, ndimr : Integer*, msub : Integer*) : LibC::Int
  fun dlaset(uplo : LibC::Char*, m : Integer*, n : Integer*, alpha : Doublereal*, beta : Doublereal*, a : Doublereal*, lda : Integer*) : LibC::Int
  fun dlasq1(n : Integer*, d__ : Doublereal*, e : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dlasq2(n : Integer*, z__ : Doublereal*, info : Integer*) : LibC::Int
  fun dlasq3(i0 : Integer*, n0 : Integer*, z__ : Doublereal*, pp : Integer*, dmin__ : Doublereal*, sigma : Doublereal*, desig : Doublereal*, qmax : Doublereal*, nfail : Integer*, iter : Integer*, ndiv : Integer*, ieee : Logical*, ttype : Integer*, dmin1 : Doublereal*, dmin2 : Doublereal*, dn : Doublereal*, dn1 : Doublereal*, dn2 : Doublereal*, g : Doublereal*, tau : Doublereal*) : LibC::Int
  fun dlasq4(i0 : Integer*, n0 : Integer*, z__ : Doublereal*, pp : Integer*, n0in : Integer*, dmin__ : Doublereal*, dmin1 : Doublereal*, dmin2 : Doublereal*, dn : Doublereal*, dn1 : Doublereal*, dn2 : Doublereal*, tau : Doublereal*, ttype : Integer*, g : Doublereal*) : LibC::Int
  fun dlasq5(i0 : Integer*, n0 : Integer*, z__ : Doublereal*, pp : Integer*, tau : Doublereal*, dmin__ : Doublereal*, dmin1 : Doublereal*, dmin2 : Doublereal*, dn : Doublereal*, dnm1 : Doublereal*, dnm2 : Doublereal*, ieee : Logical*) : LibC::Int
  fun dlasq6(i0 : Integer*, n0 : Integer*, z__ : Doublereal*, pp : Integer*, dmin__ : Doublereal*, dmin1 : Doublereal*, dmin2 : Doublereal*, dn : Doublereal*, dnm1 : Doublereal*, dnm2 : Doublereal*) : LibC::Int
  fun dlasr(side : LibC::Char*, pivot : LibC::Char*, direct : LibC::Char*, m : Integer*, n : Integer*, c__ : Doublereal*, s : Doublereal*, a : Doublereal*, lda : Integer*) : LibC::Int
  fun dlasrt(id : LibC::Char*, n : Integer*, d__ : Doublereal*, info : Integer*) : LibC::Int
  fun dlassq(n : Integer*, x : Doublereal*, incx : Integer*, scale : Doublereal*, sumsq : Doublereal*) : LibC::Int
  fun dlasv2(f : Doublereal*, g : Doublereal*, h__ : Doublereal*, ssmin : Doublereal*, ssmax : Doublereal*, snr : Doublereal*, csr : Doublereal*, snl : Doublereal*, csl : Doublereal*) : LibC::Int
  fun dlaswp(n : Integer*, a : Doublereal*, lda : Integer*, k1 : Integer*, k2 : Integer*, ipiv : Integer*, incx : Integer*) : LibC::Int
  fun dlasy2(ltranl : Logical*, ltranr : Logical*, isgn : Integer*, n1 : Integer*, n2 : Integer*, tl : Doublereal*, ldtl : Integer*, tr : Doublereal*, ldtr : Integer*, b : Doublereal*, ldb : Integer*, scale : Doublereal*, x : Doublereal*, ldx : Integer*, xnorm : Doublereal*, info : Integer*) : LibC::Int
  fun dlasyf(uplo : LibC::Char*, n : Integer*, nb : Integer*, kb : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, w : Doublereal*, ldw : Integer*, info : Integer*) : LibC::Int
  fun dlat2s(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, sa : Real*, ldsa : Integer*, info : Integer*) : LibC::Int
  fun dlatbs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublereal*, ldab : Integer*, x : Doublereal*, scale : Doublereal*, cnorm : Doublereal*, info : Integer*) : LibC::Int
  fun dlatdf(ijob : Integer*, n : Integer*, z__ : Doublereal*, ldz : Integer*, rhs : Doublereal*, rdsum : Doublereal*, rdscal : Doublereal*, ipiv : Integer*, jpiv : Integer*) : LibC::Int
  fun dlatps(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Integer*, ap : Doublereal*, x : Doublereal*, scale : Doublereal*, cnorm : Doublereal*, info : Integer*) : LibC::Int
  fun dlatrd(uplo : LibC::Char*, n : Integer*, nb : Integer*, a : Doublereal*, lda : Integer*, e : Doublereal*, tau : Doublereal*, w : Doublereal*, ldw : Integer*) : LibC::Int
  fun dlatrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, x : Doublereal*, scale : Doublereal*, cnorm : Doublereal*, info : Integer*) : LibC::Int
  fun dlatrz(m : Integer*, n : Integer*, l : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*) : LibC::Int
  fun dlatzm(side : LibC::Char*, m : Integer*, n : Integer*, v : Doublereal*, incv : Integer*, tau : Doublereal*, c1 : Doublereal*, c2 : Doublereal*, ldc : Integer*, work : Doublereal*) : LibC::Int
  fun dlauu2(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, info : Integer*) : LibC::Int
  fun dlauum(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, info : Integer*) : LibC::Int
  fun dopgtr(uplo : LibC::Char*, n : Integer*, ap : Doublereal*, tau : Doublereal*, q : Doublereal*, ldq : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dopmtr(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, ap : Doublereal*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dorg2l(m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dorg2r(m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dorgbr(vect : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dorghr(n : Integer*, ilo : Integer*, ihi : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dorgl2(m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dorglq(m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dorgql(m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dorgqr(m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dorgr2(m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dorgrq(m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dorgtr(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dorm2l(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dorm2r(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dormbr(vect : LibC::Char*, side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dormhr(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, ilo : Integer*, ihi : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dorml2(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dormlq(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dormql(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dormqr(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dormr2(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dormr3(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, l : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dormrq(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dormrz(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, l : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dormtr(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, c__ : Doublereal*, ldc : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dpbcon(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublereal*, ldab : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dpbequ(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublereal*, ldab : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun dpbrfs(uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Doublereal*, ldab : Integer*, afb : Doublereal*, ldafb : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dpbstf(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublereal*, ldab : Integer*, info : Integer*) : LibC::Int
  fun dpbsv(uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Doublereal*, ldab : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dpbsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Doublereal*, ldab : Integer*, afb : Doublereal*, ldafb : Integer*, equed : LibC::Char*, s : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dpbtf2(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublereal*, ldab : Integer*, info : Integer*) : LibC::Int
  fun dpbtrf(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublereal*, ldab : Integer*, info : Integer*) : LibC::Int
  fun dpbtrs(uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Doublereal*, ldab : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dpftrf(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, info : Integer*) : LibC::Int
  fun dpftri(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, info : Integer*) : LibC::Int
  fun dpftrs(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dpocon(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dpoequ(n : Integer*, a : Doublereal*, lda : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun dpoequb(n : Integer*, a : Doublereal*, lda : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun dporfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dporfsx(uplo : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, s : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dposv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dposvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, equed : LibC::Char*, s : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dposvxx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, equed : LibC::Char*, s : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, rpvgrw : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dpotf2(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, info : Integer*) : LibC::Int
  fun dpotrf(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, info : Integer*) : LibC::Int
  fun dpotri(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, info : Integer*) : LibC::Int
  fun dpotrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dppcon(uplo : LibC::Char*, n : Integer*, ap : Doublereal*, anorm : Doublereal*, rcond : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dppequ(uplo : LibC::Char*, n : Integer*, ap : Doublereal*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun dpprfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublereal*, afp : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dppsv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublereal*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dppsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublereal*, afp : Doublereal*, equed : LibC::Char*, s : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dpptrf(uplo : LibC::Char*, n : Integer*, ap : Doublereal*, info : Integer*) : LibC::Int
  fun dpptri(uplo : LibC::Char*, n : Integer*, ap : Doublereal*, info : Integer*) : LibC::Int
  fun dpptrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublereal*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dpstf2(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, piv : Integer*, rank : Integer*, tol : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dpstrf(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, piv : Integer*, rank : Integer*, tol : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dptcon(n : Integer*, d__ : Doublereal*, e : Doublereal*, anorm : Doublereal*, rcond : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dpteqr(compz : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dptrfs(n : Integer*, nrhs : Integer*, d__ : Doublereal*, e : Doublereal*, df : Doublereal*, ef : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dptsv(n : Integer*, nrhs : Integer*, d__ : Doublereal*, e : Doublereal*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dptsvx(fact : LibC::Char*, n : Integer*, nrhs : Integer*, d__ : Doublereal*, e : Doublereal*, df : Doublereal*, ef : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dpttrf(n : Integer*, d__ : Doublereal*, e : Doublereal*, info : Integer*) : LibC::Int
  fun dpttrs(n : Integer*, nrhs : Integer*, d__ : Doublereal*, e : Doublereal*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dptts2(n : Integer*, nrhs : Integer*, d__ : Doublereal*, e : Doublereal*, b : Doublereal*, ldb : Integer*) : LibC::Int
  fun drscl(n : Integer*, sa : Doublereal*, sx : Doublereal*, incx : Integer*) : LibC::Int
  fun dsbev(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublereal*, ldab : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dsbevd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublereal*, ldab : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dsbevx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublereal*, ldab : Integer*, q : Doublereal*, ldq : Integer*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun dsbgst(vect : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Doublereal*, ldab : Integer*, bb : Doublereal*, ldbb : Integer*, x : Doublereal*, ldx : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dsbgv(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Doublereal*, ldab : Integer*, bb : Doublereal*, ldbb : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dsbgvd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Doublereal*, ldab : Integer*, bb : Doublereal*, ldbb : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dsbgvx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Doublereal*, ldab : Integer*, bb : Doublereal*, ldbb : Integer*, q : Doublereal*, ldq : Integer*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun dsbtrd(vect : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublereal*, ldab : Integer*, d__ : Doublereal*, e : Doublereal*, q : Doublereal*, ldq : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dsfrk(transr : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, n : Integer*, k : Integer*, alpha : Doublereal*, a : Doublereal*, lda : Integer*, beta : Doublereal*, c__ : Doublereal*) : LibC::Int
  fun dsgesv(n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, work : Doublereal*, swork : Real*, iter : Integer*, info : Integer*) : LibC::Int
  fun dspcon(uplo : LibC::Char*, n : Integer*, ap : Doublereal*, ipiv : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dspev(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublereal*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dspevd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublereal*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dspevx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublereal*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun dspgst(itype : Integer*, uplo : LibC::Char*, n : Integer*, ap : Doublereal*, bp : Doublereal*, info : Integer*) : LibC::Int
  fun dspgv(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublereal*, bp : Doublereal*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dspgvd(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublereal*, bp : Doublereal*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dspgvx(itype : Integer*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublereal*, bp : Doublereal*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun dsposv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, work : Doublereal*, swork : Real*, iter : Integer*, info : Integer*) : LibC::Int
  fun dsprfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublereal*, afp : Doublereal*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dspsv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublereal*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dspsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublereal*, afp : Doublereal*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dsptrd(uplo : LibC::Char*, n : Integer*, ap : Doublereal*, d__ : Doublereal*, e : Doublereal*, tau : Doublereal*, info : Integer*) : LibC::Int
  fun dsptrf(uplo : LibC::Char*, n : Integer*, ap : Doublereal*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun dsptri(uplo : LibC::Char*, n : Integer*, ap : Doublereal*, ipiv : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dsptrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublereal*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dstebz(range : LibC::Char*, order : LibC::Char*, n : Integer*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, d__ : Doublereal*, e : Doublereal*, m : Integer*, nsplit : Integer*, w : Doublereal*, iblock : Integer*, isplit : Integer*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dstedc(compz : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dstegr(jobz : LibC::Char*, range : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, isuppz : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dstein(n : Integer*, d__ : Doublereal*, e : Doublereal*, m : Integer*, w : Doublereal*, iblock : Integer*, isplit : Integer*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun dstemr(jobz : LibC::Char*, range : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, m : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, nzc : Integer*, isuppz : Integer*, tryrac : Logical*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dsteqr(compz : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dsterf(n : Integer*, d__ : Doublereal*, e : Doublereal*, info : Integer*) : LibC::Int
  fun dstev(jobz : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dstevd(jobz : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dstevr(jobz : LibC::Char*, range : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, isuppz : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dstevx(jobz : LibC::Char*, range : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun dsycon(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dsyequb(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dsyev(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, w : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dsyevd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, w : Doublereal*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dsyevr(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, isuppz : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dsyevx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun dsygs2(itype : Integer*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dsygst(itype : Integer*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dsygv(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, w : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dsygvd(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, w : Doublereal*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dsygvx(itype : Integer*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublereal*, ldz : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun dsyrfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dsyrfsx(uplo : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, ipiv : Integer*, s : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dsysv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dsysvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dsysvxx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, af : Doublereal*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, s : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, rcond : Doublereal*, rpvgrw : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dsytd2(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, d__ : Doublereal*, e : Doublereal*, tau : Doublereal*, info : Integer*) : LibC::Int
  fun dsytf2(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun dsytrd(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, d__ : Doublereal*, e : Doublereal*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dsytrf(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dsytri(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dsytrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, ipiv : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dtbcon(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublereal*, ldab : Integer*, rcond : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dtbrfs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Doublereal*, ldab : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dtbtrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Doublereal*, ldab : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dtfsm(transr : LibC::Char*, side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, m : Integer*, n : Integer*, alpha : Doublereal*, a : Doublereal*, b : Doublereal*, ldb : Integer*) : LibC::Int
  fun dtftri(transr : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Doublereal*, info : Integer*) : LibC::Int
  fun dtfttp(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, arf : Doublereal*, ap : Doublereal*, info : Integer*) : LibC::Int
  fun dtfttr(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, arf : Doublereal*, a : Doublereal*, lda : Integer*, info : Integer*) : LibC::Int
  fun dtgevc(side : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, s : Doublereal*, lds : Integer*, p : Doublereal*, ldp : Integer*, vl : Doublereal*, ldvl : Integer*, vr : Doublereal*, ldvr : Integer*, mm : Integer*, m : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dtgex2(wantq : Logical*, wantz : Logical*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, q : Doublereal*, ldq : Integer*, z__ : Doublereal*, ldz : Integer*, j1 : Integer*, n1 : Integer*, n2 : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dtgexc(wantq : Logical*, wantz : Logical*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, q : Doublereal*, ldq : Integer*, z__ : Doublereal*, ldz : Integer*, ifst : Integer*, ilst : Integer*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dtgsen(ijob : Integer*, wantq : Logical*, wantz : Logical*, select : Logical*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, alphar : Doublereal*, alphai : Doublereal*, beta : Doublereal*, q : Doublereal*, ldq : Integer*, z__ : Doublereal*, ldz : Integer*, m : Integer*, pl : Doublereal*, pr : Doublereal*, dif : Doublereal*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dtgsja(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Integer*, p : Integer*, n : Integer*, k : Integer*, l : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, tola : Doublereal*, tolb : Doublereal*, alpha : Doublereal*, beta : Doublereal*, u : Doublereal*, ldu : Integer*, v : Doublereal*, ldv : Integer*, q : Doublereal*, ldq : Integer*, work : Doublereal*, ncycle : Integer*, info : Integer*) : LibC::Int
  fun dtgsna(job : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, vl : Doublereal*, ldvl : Integer*, vr : Doublereal*, ldvr : Integer*, s : Doublereal*, dif : Doublereal*, mm : Integer*, m : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dtgsy2(trans : LibC::Char*, ijob : Integer*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, c__ : Doublereal*, ldc : Integer*, d__ : Doublereal*, ldd : Integer*, e : Doublereal*, lde : Integer*, f : Doublereal*, ldf : Integer*, scale : Doublereal*, rdsum : Doublereal*, rdscal : Doublereal*, iwork : Integer*, pq : Integer*, info : Integer*) : LibC::Int
  fun dtgsyl(trans : LibC::Char*, ijob : Integer*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, c__ : Doublereal*, ldc : Integer*, d__ : Doublereal*, ldd : Integer*, e : Doublereal*, lde : Integer*, f : Doublereal*, ldf : Integer*, scale : Doublereal*, dif : Doublereal*, work : Doublereal*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dtpcon(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, ap : Doublereal*, rcond : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dtprfs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublereal*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dtptri(uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, ap : Doublereal*, info : Integer*) : LibC::Int
  fun dtptrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublereal*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dtpttf(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublereal*, arf : Doublereal*, info : Integer*) : LibC::Int
  fun dtpttr(uplo : LibC::Char*, n : Integer*, ap : Doublereal*, a : Doublereal*, lda : Integer*, info : Integer*) : LibC::Int
  fun dtrcon(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, rcond : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dtrevc(side : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, t : Doublereal*, ldt : Integer*, vl : Doublereal*, ldvl : Integer*, vr : Doublereal*, ldvr : Integer*, mm : Integer*, m : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dtrexc(compq : LibC::Char*, n : Integer*, t : Doublereal*, ldt : Integer*, q : Doublereal*, ldq : Integer*, ifst : Integer*, ilst : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun dtrrfs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, x : Doublereal*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dtrsen(job : LibC::Char*, compq : LibC::Char*, select : Logical*, n : Integer*, t : Doublereal*, ldt : Integer*, q : Doublereal*, ldq : Integer*, wr : Doublereal*, wi : Doublereal*, m : Integer*, s : Doublereal*, sep : Doublereal*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun dtrsna(job : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, t : Doublereal*, ldt : Integer*, vl : Doublereal*, ldvl : Integer*, vr : Doublereal*, ldvr : Integer*, s : Doublereal*, sep : Doublereal*, mm : Integer*, m : Integer*, work : Doublereal*, ldwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun dtrsyl(trana : LibC::Char*, tranb : LibC::Char*, isgn : Integer*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, c__ : Doublereal*, ldc : Integer*, scale : Doublereal*, info : Integer*) : LibC::Int
  fun dtrti2(uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, info : Integer*) : LibC::Int
  fun dtrtri(uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, info : Integer*) : LibC::Int
  fun dtrtrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublereal*, lda : Integer*, b : Doublereal*, ldb : Integer*, info : Integer*) : LibC::Int
  fun dtrttf(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, arf : Doublereal*, info : Integer*) : LibC::Int
  fun dtrttp(uplo : LibC::Char*, n : Integer*, a : Doublereal*, lda : Integer*, ap : Doublereal*, info : Integer*) : LibC::Int
  fun dtzrqf(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, info : Integer*) : LibC::Int
  fun dtzrzf(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, tau : Doublereal*, work : Doublereal*, lwork : Integer*, info : Integer*) : LibC::Int
  fun dzsum1(n : Integer*, cx : Doublecomplex*, incx : Integer*) : Doublereal
  fun icmax1(n : Integer*, cx : Complex*, incx : Integer*) : Integer
  fun ieeeck(ispec : Integer*, zero : Real*, one : Real*) : Integer
  fun ilaclc(m : Integer*, n : Integer*, a : Complex*, lda : Integer*) : Integer
  fun ilaclr(m : Integer*, n : Integer*, a : Complex*, lda : Integer*) : Integer
  fun iladiag(diag : LibC::Char*) : Integer
  fun iladlc(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*) : Integer
  fun iladlr(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*) : Integer
  fun ilaprec(prec : LibC::Char*) : Integer
  fun ilaslc(m : Integer*, n : Integer*, a : Real*, lda : Integer*) : Integer
  fun ilaslr(m : Integer*, n : Integer*, a : Real*, lda : Integer*) : Integer
  fun ilatrans(trans : LibC::Char*) : Integer
  fun ilauplo(uplo : LibC::Char*) : Integer
  fun ilazlc(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*) : Integer
  fun ilazlr(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*) : Integer
  fun iparmq(ispec : Integer*, name__ : LibC::Char*, opts : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, lwork : Integer*) : Integer
  fun izmax1(n : Integer*, cx : Doublecomplex*, incx : Integer*) : Integer
  fun lsamen(n : Integer*, ca : LibC::Char*, cb : LibC::Char*) : Logical
  fun sbdsdc(uplo : LibC::Char*, compq : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, u : Real*, ldu : Integer*, vt : Real*, ldvt : Integer*, q : Real*, iq : Integer*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sbdsqr(uplo : LibC::Char*, n : Integer*, ncvt : Integer*, nru : Integer*, ncc : Integer*, d__ : Real*, e : Real*, vt : Real*, ldvt : Integer*, u : Real*, ldu : Integer*, c__ : Real*, ldc : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun scsum1(n : Integer*, cx : Complex*, incx : Integer*) : Doublereal
  fun sdisna(job : LibC::Char*, m : Integer*, n : Integer*, d__ : Real*, sep : Real*, info : Integer*) : LibC::Int
  fun sgbbrd(vect : LibC::Char*, m : Integer*, n : Integer*, ncc : Integer*, kl : Integer*, ku : Integer*, ab : Real*, ldab : Integer*, d__ : Real*, e : Real*, q : Real*, ldq : Integer*, pt : Real*, ldpt : Integer*, c__ : Real*, ldc : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun sgbcon(norm : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Real*, ldab : Integer*, ipiv : Integer*, anorm : Real*, rcond : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgbequ(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Real*, ldab : Integer*, r__ : Real*, c__ : Real*, rowcnd : Real*, colcnd : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun sgbequb(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Real*, ldab : Integer*, r__ : Real*, c__ : Real*, rowcnd : Real*, colcnd : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun sgbrfs(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Real*, ldab : Integer*, afb : Real*, ldafb : Integer*, ipiv : Integer*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgbrfsx(trans : LibC::Char*, equed : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Real*, ldab : Integer*, afb : Real*, ldafb : Integer*, ipiv : Integer*, r__ : Real*, c__ : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgbsv(n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Real*, ldab : Integer*, ipiv : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun sgbsvx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Real*, ldab : Integer*, afb : Real*, ldafb : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Real*, c__ : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgbsvxx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Real*, ldab : Integer*, afb : Real*, ldafb : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Real*, c__ : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, rpvgrw : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgbtf2(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Real*, ldab : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun sgbtrf(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Real*, ldab : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun sgbtrs(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Real*, ldab : Integer*, ipiv : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun sgebak(job : LibC::Char*, side : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, scale : Real*, m : Integer*, v : Real*, ldv : Integer*, info : Integer*) : LibC::Int
  fun sgebal(job : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, ilo : Integer*, ihi : Integer*, scale : Real*, info : Integer*) : LibC::Int
  fun sgebd2(m : Integer*, n : Integer*, a : Real*, lda : Integer*, d__ : Real*, e : Real*, tauq : Real*, taup : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sgebrd(m : Integer*, n : Integer*, a : Real*, lda : Integer*, d__ : Real*, e : Real*, tauq : Real*, taup : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgecon(norm : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, anorm : Real*, rcond : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgeequ(m : Integer*, n : Integer*, a : Real*, lda : Integer*, r__ : Real*, c__ : Real*, rowcnd : Real*, colcnd : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun sgeequb(m : Integer*, n : Integer*, a : Real*, lda : Integer*, r__ : Real*, c__ : Real*, rowcnd : Real*, colcnd : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun sgees(jobvs : LibC::Char*, sort : LibC::Char*, select : LFp, n : Integer*, a : Real*, lda : Integer*, sdim : Integer*, wr : Real*, wi : Real*, vs : Real*, ldvs : Integer*, work : Real*, lwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun sgeesx(jobvs : LibC::Char*, sort : LibC::Char*, select : LFp, sense : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, sdim : Integer*, wr : Real*, wi : Real*, vs : Real*, ldvs : Integer*, rconde : Real*, rcondv : Real*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun sgeev(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, wr : Real*, wi : Real*, vl : Real*, ldvl : Integer*, vr : Real*, ldvr : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgeevx(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, wr : Real*, wi : Real*, vl : Real*, ldvl : Integer*, vr : Real*, ldvr : Integer*, ilo : Integer*, ihi : Integer*, scale : Real*, abnrm : Real*, rconde : Real*, rcondv : Real*, work : Real*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgegs(jobvsl : LibC::Char*, jobvsr : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, alphar : Real*, alphai : Real*, beta : Real*, vsl : Real*, ldvsl : Integer*, vsr : Real*, ldvsr : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgegv(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, alphar : Real*, alphai : Real*, beta : Real*, vl : Real*, ldvl : Integer*, vr : Real*, ldvr : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgehd2(n : Integer*, ilo : Integer*, ihi : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sgehrd(n : Integer*, ilo : Integer*, ihi : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgejsv(joba : LibC::Char*, jobu : LibC::Char*, jobv : LibC::Char*, jobr : LibC::Char*, jobt : LibC::Char*, jobp : LibC::Char*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, sva : Real*, u : Real*, ldu : Integer*, v : Real*, ldv : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgelq2(m : Integer*, n : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sgelqf(m : Integer*, n : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgels(trans : LibC::Char*, m : Integer*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgelsd(m : Integer*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, s : Real*, rcond : Real*, rank : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgelss(m : Integer*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, s : Real*, rcond : Real*, rank : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgelsx(m : Integer*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, jpvt : Integer*, rcond : Real*, rank : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun sgelsy(m : Integer*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, jpvt : Integer*, rcond : Real*, rank : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgeql2(m : Integer*, n : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sgeqlf(m : Integer*, n : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgeqp3(m : Integer*, n : Integer*, a : Real*, lda : Integer*, jpvt : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgeqpf(m : Integer*, n : Integer*, a : Real*, lda : Integer*, jpvt : Integer*, tau : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sgeqr2(m : Integer*, n : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sgeqrf(m : Integer*, n : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgerfs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, ipiv : Integer*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgerfsx(trans : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, ipiv : Integer*, r__ : Real*, c__ : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgerq2(m : Integer*, n : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sgerqf(m : Integer*, n : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgesc2(n : Integer*, a : Real*, lda : Integer*, rhs : Real*, ipiv : Integer*, jpiv : Integer*, scale : Real*) : LibC::Int
  fun sgesdd(jobz : LibC::Char*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, s : Real*, u : Real*, ldu : Integer*, vt : Real*, ldvt : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgesv(n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, ipiv : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun sgesvd(jobu : LibC::Char*, jobvt : LibC::Char*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, s : Real*, u : Real*, ldu : Integer*, vt : Real*, ldvt : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgesvj(joba : LibC::Char*, jobu : LibC::Char*, jobv : LibC::Char*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, sva : Real*, mv : Integer*, v : Real*, ldv : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgesvx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Real*, c__ : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgesvxx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Real*, c__ : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, rpvgrw : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgetc2(n : Integer*, a : Real*, lda : Integer*, ipiv : Integer*, jpiv : Integer*, info : Integer*) : LibC::Int
  fun sgetf2(m : Integer*, n : Integer*, a : Real*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun sgetrf(m : Integer*, n : Integer*, a : Real*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun sgetri(n : Integer*, a : Real*, lda : Integer*, ipiv : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgetrs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, ipiv : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun sggbak(job : LibC::Char*, side : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, lscale : Real*, rscale : Real*, m : Integer*, v : Real*, ldv : Integer*, info : Integer*) : LibC::Int
  fun sggbal(job : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, ilo : Integer*, ihi : Integer*, lscale : Real*, rscale : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sgges(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LFp, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, sdim : Integer*, alphar : Real*, alphai : Real*, beta : Real*, vsl : Real*, ldvsl : Integer*, vsr : Real*, ldvsr : Integer*, work : Real*, lwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun sggesx(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LFp, sense : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, sdim : Integer*, alphar : Real*, alphai : Real*, beta : Real*, vsl : Real*, ldvsl : Integer*, vsr : Real*, ldvsr : Integer*, rconde : Real*, rcondv : Real*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun sggev(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, alphar : Real*, alphai : Real*, beta : Real*, vl : Real*, ldvl : Integer*, vr : Real*, ldvr : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sggevx(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, alphar : Real*, alphai : Real*, beta : Real*, vl : Real*, ldvl : Integer*, vr : Real*, ldvr : Integer*, ilo : Integer*, ihi : Integer*, lscale : Real*, rscale : Real*, abnrm : Real*, bbnrm : Real*, rconde : Real*, rcondv : Real*, work : Real*, lwork : Integer*, iwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun sggglm(n : Integer*, m : Integer*, p : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, d__ : Real*, x : Real*, y : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgghrd(compq : LibC::Char*, compz : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, q : Real*, ldq : Integer*, z__ : Real*, ldz : Integer*, info : Integer*) : LibC::Int
  fun sgglse(m : Integer*, n : Integer*, p : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, c__ : Real*, d__ : Real*, x : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sggqrf(n : Integer*, m : Integer*, p : Integer*, a : Real*, lda : Integer*, taua : Real*, b : Real*, ldb : Integer*, taub : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sggrqf(m : Integer*, p : Integer*, n : Integer*, a : Real*, lda : Integer*, taua : Real*, b : Real*, ldb : Integer*, taub : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sggsvd(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Integer*, n : Integer*, p : Integer*, k : Integer*, l : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, alpha : Real*, beta : Real*, u : Real*, ldu : Integer*, v : Real*, ldv : Integer*, q : Real*, ldq : Integer*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sggsvp(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Integer*, p : Integer*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, tola : Real*, tolb : Real*, k : Integer*, l : Integer*, u : Real*, ldu : Integer*, v : Real*, ldv : Integer*, q : Real*, ldq : Integer*, iwork : Integer*, tau : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sgsvj0(jobv : LibC::Char*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, d__ : Real*, sva : Real*, mv : Integer*, v : Real*, ldv : Integer*, eps : Real*, sfmin : Real*, tol : Real*, nsweep : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgsvj1(jobv : LibC::Char*, m : Integer*, n : Integer*, n1 : Integer*, a : Real*, lda : Integer*, d__ : Real*, sva : Real*, mv : Integer*, v : Real*, ldv : Integer*, eps : Real*, sfmin : Real*, tol : Real*, nsweep : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sgtcon(norm : LibC::Char*, n : Integer*, dl : Real*, d__ : Real*, du : Real*, du2 : Real*, ipiv : Integer*, anorm : Real*, rcond : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgtrfs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, dl : Real*, d__ : Real*, du : Real*, dlf : Real*, df : Real*, duf : Real*, du2 : Real*, ipiv : Integer*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgtsv(n : Integer*, nrhs : Integer*, dl : Real*, d__ : Real*, du : Real*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun sgtsvx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, nrhs : Integer*, dl : Real*, d__ : Real*, du : Real*, dlf : Real*, df : Real*, duf : Real*, du2 : Real*, ipiv : Integer*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sgttrf(n : Integer*, dl : Real*, d__ : Real*, du : Real*, du2 : Real*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun sgttrs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, dl : Real*, d__ : Real*, du : Real*, du2 : Real*, ipiv : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun sgtts2(itrans : Integer*, n : Integer*, nrhs : Integer*, dl : Real*, d__ : Real*, du : Real*, du2 : Real*, ipiv : Integer*, b : Real*, ldb : Integer*) : LibC::Int
  fun shgeqz(job : LibC::Char*, compq : LibC::Char*, compz : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Real*, ldh : Integer*, t : Real*, ldt : Integer*, alphar : Real*, alphai : Real*, beta : Real*, q : Real*, ldq : Integer*, z__ : Real*, ldz : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun shsein(side : LibC::Char*, eigsrc : LibC::Char*, initv : LibC::Char*, select : Logical*, n : Integer*, h__ : Real*, ldh : Integer*, wr : Real*, wi : Real*, vl : Real*, ldvl : Integer*, vr : Real*, ldvr : Integer*, mm : Integer*, m : Integer*, work : Real*, ifaill : Integer*, ifailr : Integer*, info : Integer*) : LibC::Int
  fun shseqr(job : LibC::Char*, compz : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Real*, ldh : Integer*, wr : Real*, wi : Real*, z__ : Real*, ldz : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sisnan(sin__ : Real*) : Logical
  fun sla_gbamv_(trans : Integer*, m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, alpha : Real*, ab : Real*, ldab : Integer*, x : Real*, incx : Integer*, beta : Real*, y : Real*, incy : Integer*) : LibC::Int
  fun sla_gbrcond_(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Real*, ldab : Integer*, afb : Real*, ldafb : Integer*, ipiv : Integer*, cmode : Integer*, c__ : Real*, info : Integer*, work : Real*, iwork : Integer*, trans_len : Ftnlen) : Doublereal
  fun sla_gbrfsx_extended_(prec_type__ : Integer*, trans_type__ : Integer*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Real*, ldab : Integer*, afb : Real*, ldafb : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Real*, b : Real*, ldb : Integer*, y : Real*, ldy : Integer*, berr_out__ : Real*, n_norms__ : Integer*, errs_n__ : Real*, errs_c__ : Real*, res : Real*, ayb : Real*, dy : Real*, y_tail__ : Real*, rcond : Real*, ithresh : Integer*, rthresh : Real*, dz_ub__ : Real*, ignore_cwise__ : Logical*, info : Integer*) : LibC::Int
  fun sla_gbrpvgrw_(n : Integer*, kl : Integer*, ku : Integer*, ncols : Integer*, ab : Real*, ldab : Integer*, afb : Real*, ldafb : Integer*) : Doublereal
  fun sla_geamv_(trans : Integer*, m : Integer*, n : Integer*, alpha : Real*, a : Real*, lda : Integer*, x : Real*, incx : Integer*, beta : Real*, y : Real*, incy : Integer*) : LibC::Int
  fun sla_gercond_(trans : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, ipiv : Integer*, cmode : Integer*, c__ : Real*, info : Integer*, work : Real*, iwork : Integer*, trans_len : Ftnlen) : Doublereal
  fun sla_gerfsx_extended_(prec_type__ : Integer*, trans_type__ : Integer*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Real*, b : Real*, ldb : Integer*, y : Real*, ldy : Integer*, berr_out__ : Real*, n_norms__ : Integer*, errs_n__ : Real*, errs_c__ : Real*, res : Real*, ayb : Real*, dy : Real*, y_tail__ : Real*, rcond : Real*, ithresh : Integer*, rthresh : Real*, dz_ub__ : Real*, ignore_cwise__ : Logical*, info : Integer*) : LibC::Int
  fun sla_lin_berr_(n : Integer*, nz : Integer*, nrhs : Integer*, res : Real*, ayb : Real*, berr : Real*) : LibC::Int
  fun sla_porcond_(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, cmode : Integer*, c__ : Real*, info : Integer*, work : Real*, iwork : Integer*, uplo_len : Ftnlen) : Doublereal
  fun sla_porfsx_extended_(prec_type__ : Integer*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, colequ : Logical*, c__ : Real*, b : Real*, ldb : Integer*, y : Real*, ldy : Integer*, berr_out__ : Real*, n_norms__ : Integer*, errs_n__ : Real*, errs_c__ : Real*, res : Real*, ayb : Real*, dy : Real*, y_tail__ : Real*, rcond : Real*, ithresh : Integer*, rthresh : Real*, dz_ub__ : Real*, ignore_cwise__ : Logical*, info : Integer*, uplo_len : Ftnlen) : LibC::Int
  fun sla_porpvgrw_(uplo : LibC::Char*, ncols : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, work : Real*, uplo_len : Ftnlen) : Doublereal
  fun sla_rpvgrw_(n : Integer*, ncols : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*) : Doublereal
  fun sla_syamv_(uplo : Integer*, n : Integer*, alpha : Real*, a : Real*, lda : Integer*, x : Real*, incx : Integer*, beta : Real*, y : Real*, incy : Integer*) : LibC::Int
  fun sla_syrcond_(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, ipiv : Integer*, cmode : Integer*, c__ : Real*, info : Integer*, work : Real*, iwork : Integer*, uplo_len : Ftnlen) : Doublereal
  fun sla_syrfsx_extended_(prec_type__ : Integer*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Real*, b : Real*, ldb : Integer*, y : Real*, ldy : Integer*, berr_out__ : Real*, n_norms__ : Integer*, errs_n__ : Real*, errs_c__ : Real*, res : Real*, ayb : Real*, dy : Real*, y_tail__ : Real*, rcond : Real*, ithresh : Integer*, rthresh : Real*, dz_ub__ : Real*, ignore_cwise__ : Logical*, info : Integer*, uplo_len : Ftnlen) : LibC::Int
  fun sla_syrpvgrw_(uplo : LibC::Char*, n : Integer*, info : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, ipiv : Integer*, work : Real*, uplo_len : Ftnlen) : Doublereal
  fun sla_wwaddw_(n : Integer*, x : Real*, y : Real*, w : Real*) : LibC::Int
  fun slabad(small : Real*, large : Real*) : LibC::Int
  fun slabrd(m : Integer*, n : Integer*, nb : Integer*, a : Real*, lda : Integer*, d__ : Real*, e : Real*, tauq : Real*, taup : Real*, x : Real*, ldx : Integer*, y : Real*, ldy : Integer*) : LibC::Int
  fun slacn2(n : Integer*, v : Real*, x : Real*, isgn : Integer*, est : Real*, kase : Integer*, isave : Integer*) : LibC::Int
  fun slacon(n : Integer*, v : Real*, x : Real*, isgn : Integer*, est : Real*, kase : Integer*) : LibC::Int
  fun slacpy(uplo : LibC::Char*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*) : LibC::Int
  fun sladiv(a : Real*, b : Real*, c__ : Real*, d__ : Real*, p : Real*, q : Real*) : LibC::Int
  fun slae2(a : Real*, b : Real*, c__ : Real*, rt1 : Real*, rt2 : Real*) : LibC::Int
  fun slaebz(ijob : Integer*, nitmax : Integer*, n : Integer*, mmax : Integer*, minp : Integer*, nbmin : Integer*, abstol : Real*, reltol : Real*, pivmin : Real*, d__ : Real*, e : Real*, e2 : Real*, nval : Integer*, ab : Real*, c__ : Real*, mout : Integer*, nab : Integer*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun slaed0(icompq : Integer*, qsiz : Integer*, n : Integer*, d__ : Real*, e : Real*, q : Real*, ldq : Integer*, qstore : Real*, ldqs : Integer*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun slaed1(n : Integer*, d__ : Real*, q : Real*, ldq : Integer*, indxq : Integer*, rho : Real*, cutpnt : Integer*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun slaed2(k : Integer*, n : Integer*, n1 : Integer*, d__ : Real*, q : Real*, ldq : Integer*, indxq : Integer*, rho : Real*, z__ : Real*, dlamda : Real*, w : Real*, q2 : Real*, indx : Integer*, indxc : Integer*, indxp : Integer*, coltyp : Integer*, info : Integer*) : LibC::Int
  fun slaed3(k : Integer*, n : Integer*, n1 : Integer*, d__ : Real*, q : Real*, ldq : Integer*, rho : Real*, dlamda : Real*, q2 : Real*, indx : Integer*, ctot : Integer*, w : Real*, s : Real*, info : Integer*) : LibC::Int
  fun slaed4(n : Integer*, i__ : Integer*, d__ : Real*, z__ : Real*, delta : Real*, rho : Real*, dlam : Real*, info : Integer*) : LibC::Int
  fun slaed5(i__ : Integer*, d__ : Real*, z__ : Real*, delta : Real*, rho : Real*, dlam : Real*) : LibC::Int
  fun slaed6(kniter : Integer*, orgati : Logical*, rho : Real*, d__ : Real*, z__ : Real*, finit : Real*, tau : Real*, info : Integer*) : LibC::Int
  fun slaed7(icompq : Integer*, n : Integer*, qsiz : Integer*, tlvls : Integer*, curlvl : Integer*, curpbm : Integer*, d__ : Real*, q : Real*, ldq : Integer*, indxq : Integer*, rho : Real*, cutpnt : Integer*, qstore : Real*, qptr : Integer*, prmptr : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, givnum : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun slaed8(icompq : Integer*, k : Integer*, n : Integer*, qsiz : Integer*, d__ : Real*, q : Real*, ldq : Integer*, indxq : Integer*, rho : Real*, cutpnt : Integer*, z__ : Real*, dlamda : Real*, q2 : Real*, ldq2 : Integer*, w : Real*, perm : Integer*, givptr : Integer*, givcol : Integer*, givnum : Real*, indxp : Integer*, indx : Integer*, info : Integer*) : LibC::Int
  fun slaed9(k : Integer*, kstart : Integer*, kstop : Integer*, n : Integer*, d__ : Real*, q : Real*, ldq : Integer*, rho : Real*, dlamda : Real*, w : Real*, s : Real*, lds : Integer*, info : Integer*) : LibC::Int
  fun slaeda(n : Integer*, tlvls : Integer*, curlvl : Integer*, curpbm : Integer*, prmptr : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, givnum : Real*, q : Real*, qptr : Integer*, z__ : Real*, ztemp : Real*, info : Integer*) : LibC::Int
  fun slaein(rightv : Logical*, noinit : Logical*, n : Integer*, h__ : Real*, ldh : Integer*, wr : Real*, wi : Real*, vr : Real*, vi : Real*, b : Real*, ldb : Integer*, work : Real*, eps3 : Real*, smlnum : Real*, bignum : Real*, info : Integer*) : LibC::Int
  fun slaev2(a : Real*, b : Real*, c__ : Real*, rt1 : Real*, rt2 : Real*, cs1 : Real*, sn1 : Real*) : LibC::Int
  fun slaexc(wantq : Logical*, n : Integer*, t : Real*, ldt : Integer*, q : Real*, ldq : Integer*, j1 : Integer*, n1 : Integer*, n2 : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun slag2(a : Real*, lda : Integer*, b : Real*, ldb : Integer*, safmin : Real*, scale1 : Real*, scale2 : Real*, wr1 : Real*, wr2 : Real*, wi : Real*) : LibC::Int
  fun slag2d(m : Integer*, n : Integer*, sa : Real*, ldsa : Integer*, a : Doublereal*, lda : Integer*, info : Integer*) : LibC::Int
  fun slags2(upper : Logical*, a1 : Real*, a2 : Real*, a3 : Real*, b1 : Real*, b2 : Real*, b3 : Real*, csu : Real*, snu : Real*, csv : Real*, snv : Real*, csq : Real*, snq : Real*) : LibC::Int
  fun slagtf(n : Integer*, a : Real*, lambda : Real*, b : Real*, c__ : Real*, tol : Real*, d__ : Real*, in : Integer*, info : Integer*) : LibC::Int
  fun slagtm(trans : LibC::Char*, n : Integer*, nrhs : Integer*, alpha : Real*, dl : Real*, d__ : Real*, du : Real*, x : Real*, ldx : Integer*, beta : Real*, b : Real*, ldb : Integer*) : LibC::Int
  fun slagts(job : Integer*, n : Integer*, a : Real*, b : Real*, c__ : Real*, d__ : Real*, in : Integer*, y : Real*, tol : Real*, info : Integer*) : LibC::Int
  fun slagv2(a : Real*, lda : Integer*, b : Real*, ldb : Integer*, alphar : Real*, alphai : Real*, beta : Real*, csl : Real*, snl : Real*, csr : Real*, snr : Real*) : LibC::Int
  fun slahqr(wantt : Logical*, wantz : Logical*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Real*, ldh : Integer*, wr : Real*, wi : Real*, iloz : Integer*, ihiz : Integer*, z__ : Real*, ldz : Integer*, info : Integer*) : LibC::Int
  fun slahr2(n : Integer*, k : Integer*, nb : Integer*, a : Real*, lda : Integer*, tau : Real*, t : Real*, ldt : Integer*, y : Real*, ldy : Integer*) : LibC::Int
  fun slahrd(n : Integer*, k : Integer*, nb : Integer*, a : Real*, lda : Integer*, tau : Real*, t : Real*, ldt : Integer*, y : Real*, ldy : Integer*) : LibC::Int
  fun slaic1(job : Integer*, j : Integer*, x : Real*, sest : Real*, w : Real*, gamma : Real*, sestpr : Real*, s : Real*, c__ : Real*) : LibC::Int
  fun slaisnan(sin1 : Real*, sin2 : Real*) : Logical
  fun slaln2(ltrans : Logical*, na : Integer*, nw : Integer*, smin : Real*, ca : Real*, a : Real*, lda : Integer*, d1 : Real*, d2 : Real*, b : Real*, ldb : Integer*, wr : Real*, wi : Real*, x : Real*, ldx : Integer*, scale : Real*, xnorm : Real*, info : Integer*) : LibC::Int
  fun slals0(icompq : Integer*, nl : Integer*, nr : Integer*, sqre : Integer*, nrhs : Integer*, b : Real*, ldb : Integer*, bx : Real*, ldbx : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, givnum : Real*, ldgnum : Integer*, poles : Real*, difl : Real*, difr : Real*, z__ : Real*, k : Integer*, c__ : Real*, s : Real*, work : Real*, info : Integer*) : LibC::Int
  fun slalsa(icompq : Integer*, smlsiz : Integer*, n : Integer*, nrhs : Integer*, b : Real*, ldb : Integer*, bx : Real*, ldbx : Integer*, u : Real*, ldu : Integer*, vt : Real*, k : Integer*, difl : Real*, difr : Real*, z__ : Real*, poles : Real*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, perm : Integer*, givnum : Real*, c__ : Real*, s : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun slalsd(uplo : LibC::Char*, smlsiz : Integer*, n : Integer*, nrhs : Integer*, d__ : Real*, e : Real*, b : Real*, ldb : Integer*, rcond : Real*, rank : Integer*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun slamrg(n1 : Integer*, n2 : Integer*, a : Real*, strd1 : Integer*, strd2 : Integer*, index : Integer*) : LibC::Int
  fun slaneg(n : Integer*, d__ : Real*, lld : Real*, sigma : Real*, pivmin : Real*, r__ : Integer*) : Integer
  fun slangb(norm : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Real*, ldab : Integer*, work : Real*) : Real
  fun slange(norm : LibC::Char*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, work : Real*) : Real
  fun slangt(norm : LibC::Char*, n : Integer*, dl : Real*, d__ : Real*, du : Real*) : Real
  fun slanhs(norm : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, work : Real*) : Real
  fun slansb(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, k : Integer*, ab : Real*, ldab : Integer*, work : Real*) : Real
  fun slansf(norm : LibC::Char*, transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Real*, work : Real*) : Real
  fun slansp(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Real*, work : Real*) : Real
  fun slanst(norm : LibC::Char*, n : Integer*, d__ : Real*, e : Real*) : Real
  fun slansy(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, work : Real*) : Real
  fun slantb(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, k : Integer*, ab : Real*, ldab : Integer*, work : Real*) : Real
  fun slantp(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, ap : Real*, work : Real*) : Real
  fun slantr(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, work : Real*) : Real
  fun slanv2(a : Real*, b : Real*, c__ : Real*, d__ : Real*, rt1r : Real*, rt1i : Real*, rt2r : Real*, rt2i : Real*, cs : Real*, sn : Real*) : LibC::Int
  fun slapll(n : Integer*, x : Real*, incx : Integer*, y : Real*, incy : Integer*, ssmin : Real*) : LibC::Int
  fun slapmt(forwrd : Logical*, m : Integer*, n : Integer*, x : Real*, ldx : Integer*, k : Integer*) : LibC::Int
  fun slapy2(x : Real*, y : Real*) : Doublereal
  fun slapy3(x : Real*, y : Real*, z__ : Real*) : Doublereal
  fun slaqgb(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Real*, ldab : Integer*, r__ : Real*, c__ : Real*, rowcnd : Real*, colcnd : Real*, amax : Real*, equed : LibC::Char*) : LibC::Int
  fun slaqge(m : Integer*, n : Integer*, a : Real*, lda : Integer*, r__ : Real*, c__ : Real*, rowcnd : Real*, colcnd : Real*, amax : Real*, equed : LibC::Char*) : LibC::Int
  fun slaqp2(m : Integer*, n : Integer*, offset : Integer*, a : Real*, lda : Integer*, jpvt : Integer*, tau : Real*, vn1 : Real*, vn2 : Real*, work : Real*) : LibC::Int
  fun slaqps(m : Integer*, n : Integer*, offset : Integer*, nb : Integer*, kb : Integer*, a : Real*, lda : Integer*, jpvt : Integer*, tau : Real*, vn1 : Real*, vn2 : Real*, auxv : Real*, f : Real*, ldf : Integer*) : LibC::Int
  fun slaqr0(wantt : Logical*, wantz : Logical*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Real*, ldh : Integer*, wr : Real*, wi : Real*, iloz : Integer*, ihiz : Integer*, z__ : Real*, ldz : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun slaqr1(n : Integer*, h__ : Real*, ldh : Integer*, sr1 : Real*, si1 : Real*, sr2 : Real*, si2 : Real*, v : Real*) : LibC::Int
  fun slaqr2(wantt : Logical*, wantz : Logical*, n : Integer*, ktop : Integer*, kbot : Integer*, nw : Integer*, h__ : Real*, ldh : Integer*, iloz : Integer*, ihiz : Integer*, z__ : Real*, ldz : Integer*, ns : Integer*, nd : Integer*, sr : Real*, si : Real*, v : Real*, ldv : Integer*, nh : Integer*, t : Real*, ldt : Integer*, nv : Integer*, wv : Real*, ldwv : Integer*, work : Real*, lwork : Integer*) : LibC::Int
  fun slaqr3(wantt : Logical*, wantz : Logical*, n : Integer*, ktop : Integer*, kbot : Integer*, nw : Integer*, h__ : Real*, ldh : Integer*, iloz : Integer*, ihiz : Integer*, z__ : Real*, ldz : Integer*, ns : Integer*, nd : Integer*, sr : Real*, si : Real*, v : Real*, ldv : Integer*, nh : Integer*, t : Real*, ldt : Integer*, nv : Integer*, wv : Real*, ldwv : Integer*, work : Real*, lwork : Integer*) : LibC::Int
  fun slaqr4(wantt : Logical*, wantz : Logical*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Real*, ldh : Integer*, wr : Real*, wi : Real*, iloz : Integer*, ihiz : Integer*, z__ : Real*, ldz : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun slaqr5(wantt : Logical*, wantz : Logical*, kacc22 : Integer*, n : Integer*, ktop : Integer*, kbot : Integer*, nshfts : Integer*, sr : Real*, si : Real*, h__ : Real*, ldh : Integer*, iloz : Integer*, ihiz : Integer*, z__ : Real*, ldz : Integer*, v : Real*, ldv : Integer*, u : Real*, ldu : Integer*, nv : Integer*, wv : Real*, ldwv : Integer*, nh : Integer*, wh : Real*, ldwh : Integer*) : LibC::Int
  fun slaqsb(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Real*, ldab : Integer*, s : Real*, scond : Real*, amax : Real*, equed : LibC::Char*) : LibC::Int
  fun slaqsp(uplo : LibC::Char*, n : Integer*, ap : Real*, s : Real*, scond : Real*, amax : Real*, equed : LibC::Char*) : LibC::Int
  fun slaqsy(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, s : Real*, scond : Real*, amax : Real*, equed : LibC::Char*) : LibC::Int
  fun slaqtr(ltran : Logical*, lreal : Logical*, n : Integer*, t : Real*, ldt : Integer*, b : Real*, w : Real*, scale : Real*, x : Real*, work : Real*, info : Integer*) : LibC::Int
  fun slar1v(n : Integer*, b1 : Integer*, bn : Integer*, lambda : Real*, d__ : Real*, l : Real*, ld : Real*, lld : Real*, pivmin : Real*, gaptol : Real*, z__ : Real*, wantnc : Logical*, negcnt : Integer*, ztz : Real*, mingma : Real*, r__ : Integer*, isuppz : Integer*, nrminv : Real*, resid : Real*, rqcorr : Real*, work : Real*) : LibC::Int
  fun slar2v(n : Integer*, x : Real*, y : Real*, z__ : Real*, incx : Integer*, c__ : Real*, s : Real*, incc : Integer*) : LibC::Int
  fun slarf(side : LibC::Char*, m : Integer*, n : Integer*, v : Real*, incv : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*) : LibC::Int
  fun slarfb(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, v : Real*, ldv : Integer*, t : Real*, ldt : Integer*, c__ : Real*, ldc : Integer*, work : Real*, ldwork : Integer*) : LibC::Int
  fun slarfg(n : Integer*, alpha : Real*, x : Real*, incx : Integer*, tau : Real*) : LibC::Int
  fun slarfp(n : Integer*, alpha : Real*, x : Real*, incx : Integer*, tau : Real*) : LibC::Int
  fun slarft(direct : LibC::Char*, storev : LibC::Char*, n : Integer*, k : Integer*, v : Real*, ldv : Integer*, tau : Real*, t : Real*, ldt : Integer*) : LibC::Int
  fun slarfx(side : LibC::Char*, m : Integer*, n : Integer*, v : Real*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*) : LibC::Int
  fun slargv(n : Integer*, x : Real*, incx : Integer*, y : Real*, incy : Integer*, c__ : Real*, incc : Integer*) : LibC::Int
  fun slarnv(idist : Integer*, iseed : Integer*, n : Integer*, x : Real*) : LibC::Int
  fun slarra(n : Integer*, d__ : Real*, e : Real*, e2 : Real*, spltol : Real*, tnrm : Real*, nsplit : Integer*, isplit : Integer*, info : Integer*) : LibC::Int
  fun slarrb(n : Integer*, d__ : Real*, lld : Real*, ifirst : Integer*, ilast : Integer*, rtol1 : Real*, rtol2 : Real*, offset : Integer*, w : Real*, wgap : Real*, werr : Real*, work : Real*, iwork : Integer*, pivmin : Real*, spdiam : Real*, twist : Integer*, info : Integer*) : LibC::Int
  fun slarrc(jobt : LibC::Char*, n : Integer*, vl : Real*, vu : Real*, d__ : Real*, e : Real*, pivmin : Real*, eigcnt : Integer*, lcnt : Integer*, rcnt : Integer*, info : Integer*) : LibC::Int
  fun slarrd(range : LibC::Char*, order : LibC::Char*, n : Integer*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, gers : Real*, reltol : Real*, d__ : Real*, e : Real*, e2 : Real*, pivmin : Real*, nsplit : Integer*, isplit : Integer*, m : Integer*, w : Real*, werr : Real*, wl : Real*, wu : Real*, iblock : Integer*, indexw : Integer*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun slarre(range : LibC::Char*, n : Integer*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, d__ : Real*, e : Real*, e2 : Real*, rtol1 : Real*, rtol2 : Real*, spltol : Real*, nsplit : Integer*, isplit : Integer*, m : Integer*, w : Real*, werr : Real*, wgap : Real*, iblock : Integer*, indexw : Integer*, gers : Real*, pivmin : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun slarrf(n : Integer*, d__ : Real*, l : Real*, ld : Real*, clstrt : Integer*, clend : Integer*, w : Real*, wgap : Real*, werr : Real*, spdiam : Real*, clgapl : Real*, clgapr : Real*, pivmin : Real*, sigma : Real*, dplus : Real*, lplus : Real*, work : Real*, info : Integer*) : LibC::Int
  fun slarrj(n : Integer*, d__ : Real*, e2 : Real*, ifirst : Integer*, ilast : Integer*, rtol : Real*, offset : Integer*, w : Real*, werr : Real*, work : Real*, iwork : Integer*, pivmin : Real*, spdiam : Real*, info : Integer*) : LibC::Int
  fun slarrk(n : Integer*, iw : Integer*, gl : Real*, gu : Real*, d__ : Real*, e2 : Real*, pivmin : Real*, reltol : Real*, w : Real*, werr : Real*, info : Integer*) : LibC::Int
  fun slarrr(n : Integer*, d__ : Real*, e : Real*, info : Integer*) : LibC::Int
  fun slarrv(n : Integer*, vl : Real*, vu : Real*, d__ : Real*, l : Real*, pivmin : Real*, isplit : Integer*, m : Integer*, dol : Integer*, dou : Integer*, minrgp : Real*, rtol1 : Real*, rtol2 : Real*, w : Real*, werr : Real*, wgap : Real*, iblock : Integer*, indexw : Integer*, gers : Real*, z__ : Real*, ldz : Integer*, isuppz : Integer*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun slarscl2(m : Integer*, n : Integer*, d__ : Real*, x : Real*, ldx : Integer*) : LibC::Int
  fun slartg(f : Real*, g : Real*, cs : Real*, sn : Real*, r__ : Real*) : LibC::Int
  fun slartv(n : Integer*, x : Real*, incx : Integer*, y : Real*, incy : Integer*, c__ : Real*, s : Real*, incc : Integer*) : LibC::Int
  fun slaruv(iseed : Integer*, n : Integer*, x : Real*) : LibC::Int
  fun slarz(side : LibC::Char*, m : Integer*, n : Integer*, l : Integer*, v : Real*, incv : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*) : LibC::Int
  fun slarzb(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, l : Integer*, v : Real*, ldv : Integer*, t : Real*, ldt : Integer*, c__ : Real*, ldc : Integer*, work : Real*, ldwork : Integer*) : LibC::Int
  fun slarzt(direct : LibC::Char*, storev : LibC::Char*, n : Integer*, k : Integer*, v : Real*, ldv : Integer*, tau : Real*, t : Real*, ldt : Integer*) : LibC::Int
  fun slas2(f : Real*, g : Real*, h__ : Real*, ssmin : Real*, ssmax : Real*) : LibC::Int
  fun slascl(type__ : LibC::Char*, kl : Integer*, ku : Integer*, cfrom : Real*, cto : Real*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, info : Integer*) : LibC::Int
  fun slascl2(m : Integer*, n : Integer*, d__ : Real*, x : Real*, ldx : Integer*) : LibC::Int
  fun slasd0(n : Integer*, sqre : Integer*, d__ : Real*, e : Real*, u : Real*, ldu : Integer*, vt : Real*, ldvt : Integer*, smlsiz : Integer*, iwork : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun slasd1(nl : Integer*, nr : Integer*, sqre : Integer*, d__ : Real*, alpha : Real*, beta : Real*, u : Real*, ldu : Integer*, vt : Real*, ldvt : Integer*, idxq : Integer*, iwork : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun slasd2(nl : Integer*, nr : Integer*, sqre : Integer*, k : Integer*, d__ : Real*, z__ : Real*, alpha : Real*, beta : Real*, u : Real*, ldu : Integer*, vt : Real*, ldvt : Integer*, dsigma : Real*, u2 : Real*, ldu2 : Integer*, vt2 : Real*, ldvt2 : Integer*, idxp : Integer*, idx : Integer*, idxc : Integer*, idxq : Integer*, coltyp : Integer*, info : Integer*) : LibC::Int
  fun slasd3(nl : Integer*, nr : Integer*, sqre : Integer*, k : Integer*, d__ : Real*, q : Real*, ldq : Integer*, dsigma : Real*, u : Real*, ldu : Integer*, u2 : Real*, ldu2 : Integer*, vt : Real*, ldvt : Integer*, vt2 : Real*, ldvt2 : Integer*, idxc : Integer*, ctot : Integer*, z__ : Real*, info : Integer*) : LibC::Int
  fun slasd4(n : Integer*, i__ : Integer*, d__ : Real*, z__ : Real*, delta : Real*, rho : Real*, sigma : Real*, work : Real*, info : Integer*) : LibC::Int
  fun slasd5(i__ : Integer*, d__ : Real*, z__ : Real*, delta : Real*, rho : Real*, dsigma : Real*, work : Real*) : LibC::Int
  fun slasd6(icompq : Integer*, nl : Integer*, nr : Integer*, sqre : Integer*, d__ : Real*, vf : Real*, vl : Real*, alpha : Real*, beta : Real*, idxq : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, givnum : Real*, ldgnum : Integer*, poles : Real*, difl : Real*, difr : Real*, z__ : Real*, k : Integer*, c__ : Real*, s : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun slasd7(icompq : Integer*, nl : Integer*, nr : Integer*, sqre : Integer*, k : Integer*, d__ : Real*, z__ : Real*, zw : Real*, vf : Real*, vfw : Real*, vl : Real*, vlw : Real*, alpha : Real*, beta : Real*, dsigma : Real*, idx : Integer*, idxp : Integer*, idxq : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, givnum : Real*, ldgnum : Integer*, c__ : Real*, s : Real*, info : Integer*) : LibC::Int
  fun slasd8(icompq : Integer*, k : Integer*, d__ : Real*, z__ : Real*, vf : Real*, vl : Real*, difl : Real*, difr : Real*, lddifr : Integer*, dsigma : Real*, work : Real*, info : Integer*) : LibC::Int
  fun slasda(icompq : Integer*, smlsiz : Integer*, n : Integer*, sqre : Integer*, d__ : Real*, e : Real*, u : Real*, ldu : Integer*, vt : Real*, k : Integer*, difl : Real*, difr : Real*, z__ : Real*, poles : Real*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, perm : Integer*, givnum : Real*, c__ : Real*, s : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun slasdq(uplo : LibC::Char*, sqre : Integer*, n : Integer*, ncvt : Integer*, nru : Integer*, ncc : Integer*, d__ : Real*, e : Real*, vt : Real*, ldvt : Integer*, u : Real*, ldu : Integer*, c__ : Real*, ldc : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun slasdt(n : Integer*, lvl : Integer*, nd : Integer*, inode : Integer*, ndiml : Integer*, ndimr : Integer*, msub : Integer*) : LibC::Int
  fun slaset(uplo : LibC::Char*, m : Integer*, n : Integer*, alpha : Real*, beta : Real*, a : Real*, lda : Integer*) : LibC::Int
  fun slasq1(n : Integer*, d__ : Real*, e : Real*, work : Real*, info : Integer*) : LibC::Int
  fun slasq2(n : Integer*, z__ : Real*, info : Integer*) : LibC::Int
  fun slasq3(i0 : Integer*, n0 : Integer*, z__ : Real*, pp : Integer*, dmin__ : Real*, sigma : Real*, desig : Real*, qmax : Real*, nfail : Integer*, iter : Integer*, ndiv : Integer*, ieee : Logical*, ttype : Integer*, dmin1 : Real*, dmin2 : Real*, dn : Real*, dn1 : Real*, dn2 : Real*, g : Real*, tau : Real*) : LibC::Int
  fun slasq4(i0 : Integer*, n0 : Integer*, z__ : Real*, pp : Integer*, n0in : Integer*, dmin__ : Real*, dmin1 : Real*, dmin2 : Real*, dn : Real*, dn1 : Real*, dn2 : Real*, tau : Real*, ttype : Integer*, g : Real*) : LibC::Int
  fun slasq5(i0 : Integer*, n0 : Integer*, z__ : Real*, pp : Integer*, tau : Real*, dmin__ : Real*, dmin1 : Real*, dmin2 : Real*, dn : Real*, dnm1 : Real*, dnm2 : Real*, ieee : Logical*) : LibC::Int
  fun slasq6(i0 : Integer*, n0 : Integer*, z__ : Real*, pp : Integer*, dmin__ : Real*, dmin1 : Real*, dmin2 : Real*, dn : Real*, dnm1 : Real*, dnm2 : Real*) : LibC::Int
  fun slasr(side : LibC::Char*, pivot : LibC::Char*, direct : LibC::Char*, m : Integer*, n : Integer*, c__ : Real*, s : Real*, a : Real*, lda : Integer*) : LibC::Int
  fun slasrt(id : LibC::Char*, n : Integer*, d__ : Real*, info : Integer*) : LibC::Int
  fun slassq(n : Integer*, x : Real*, incx : Integer*, scale : Real*, sumsq : Real*) : LibC::Int
  fun slasv2(f : Real*, g : Real*, h__ : Real*, ssmin : Real*, ssmax : Real*, snr : Real*, csr : Real*, snl : Real*, csl : Real*) : LibC::Int
  fun slaswp(n : Integer*, a : Real*, lda : Integer*, k1 : Integer*, k2 : Integer*, ipiv : Integer*, incx : Integer*) : LibC::Int
  fun slasy2(ltranl : Logical*, ltranr : Logical*, isgn : Integer*, n1 : Integer*, n2 : Integer*, tl : Real*, ldtl : Integer*, tr : Real*, ldtr : Integer*, b : Real*, ldb : Integer*, scale : Real*, x : Real*, ldx : Integer*, xnorm : Real*, info : Integer*) : LibC::Int
  fun slasyf(uplo : LibC::Char*, n : Integer*, nb : Integer*, kb : Integer*, a : Real*, lda : Integer*, ipiv : Integer*, w : Real*, ldw : Integer*, info : Integer*) : LibC::Int
  fun slatbs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Integer*, kd : Integer*, ab : Real*, ldab : Integer*, x : Real*, scale : Real*, cnorm : Real*, info : Integer*) : LibC::Int
  fun slatdf(ijob : Integer*, n : Integer*, z__ : Real*, ldz : Integer*, rhs : Real*, rdsum : Real*, rdscal : Real*, ipiv : Integer*, jpiv : Integer*) : LibC::Int
  fun slatps(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Integer*, ap : Real*, x : Real*, scale : Real*, cnorm : Real*, info : Integer*) : LibC::Int
  fun slatrd(uplo : LibC::Char*, n : Integer*, nb : Integer*, a : Real*, lda : Integer*, e : Real*, tau : Real*, w : Real*, ldw : Integer*) : LibC::Int
  fun slatrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, x : Real*, scale : Real*, cnorm : Real*, info : Integer*) : LibC::Int
  fun slatrz(m : Integer*, n : Integer*, l : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*) : LibC::Int
  fun slatzm(side : LibC::Char*, m : Integer*, n : Integer*, v : Real*, incv : Integer*, tau : Real*, c1 : Real*, c2 : Real*, ldc : Integer*, work : Real*) : LibC::Int
  fun slauu2(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, info : Integer*) : LibC::Int
  fun slauum(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, info : Integer*) : LibC::Int
  fun sopgtr(uplo : LibC::Char*, n : Integer*, ap : Real*, tau : Real*, q : Real*, ldq : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun sopmtr(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, ap : Real*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun sorg2l(m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sorg2r(m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sorgbr(vect : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sorghr(n : Integer*, ilo : Integer*, ihi : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sorgl2(m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sorglq(m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sorgql(m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sorgqr(m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sorgr2(m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sorgrq(m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sorgtr(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sorm2l(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun sorm2r(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun sormbr(vect : LibC::Char*, side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sormhr(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, ilo : Integer*, ihi : Integer*, a : Real*, lda : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sorml2(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun sormlq(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sormql(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sormqr(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sormr2(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun sormr3(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, l : Integer*, a : Real*, lda : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun sormrq(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Real*, lda : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sormrz(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, l : Integer*, a : Real*, lda : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun sormtr(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, tau : Real*, c__ : Real*, ldc : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun spbcon(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Real*, ldab : Integer*, anorm : Real*, rcond : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun spbequ(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Real*, ldab : Integer*, s : Real*, scond : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun spbrfs(uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Real*, ldab : Integer*, afb : Real*, ldafb : Integer*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun spbstf(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Real*, ldab : Integer*, info : Integer*) : LibC::Int
  fun spbsv(uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Real*, ldab : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun spbsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Real*, ldab : Integer*, afb : Real*, ldafb : Integer*, equed : LibC::Char*, s : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun spbtf2(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Real*, ldab : Integer*, info : Integer*) : LibC::Int
  fun spbtrf(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Real*, ldab : Integer*, info : Integer*) : LibC::Int
  fun spbtrs(uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Real*, ldab : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun spftrf(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Real*, info : Integer*) : LibC::Int
  fun spftri(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Real*, info : Integer*) : LibC::Int
  fun spftrs(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun spocon(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, anorm : Real*, rcond : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun spoequ(n : Integer*, a : Real*, lda : Integer*, s : Real*, scond : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun spoequb(n : Integer*, a : Real*, lda : Integer*, s : Real*, scond : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun sporfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sporfsx(uplo : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, s : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sposv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun sposvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, equed : LibC::Char*, s : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sposvxx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, equed : LibC::Char*, s : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, rpvgrw : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun spotf2(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, info : Integer*) : LibC::Int
  fun spotrf(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, info : Integer*) : LibC::Int
  fun spotri(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, info : Integer*) : LibC::Int
  fun spotrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun sppcon(uplo : LibC::Char*, n : Integer*, ap : Real*, anorm : Real*, rcond : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sppequ(uplo : LibC::Char*, n : Integer*, ap : Real*, s : Real*, scond : Real*, amax : Real*, info : Integer*) : LibC::Int
  fun spprfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Real*, afp : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sppsv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Real*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun sppsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Real*, afp : Real*, equed : LibC::Char*, s : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun spptrf(uplo : LibC::Char*, n : Integer*, ap : Real*, info : Integer*) : LibC::Int
  fun spptri(uplo : LibC::Char*, n : Integer*, ap : Real*, info : Integer*) : LibC::Int
  fun spptrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Real*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun spstf2(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, piv : Integer*, rank : Integer*, tol : Real*, work : Real*, info : Integer*) : LibC::Int
  fun spstrf(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, piv : Integer*, rank : Integer*, tol : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sptcon(n : Integer*, d__ : Real*, e : Real*, anorm : Real*, rcond : Real*, work : Real*, info : Integer*) : LibC::Int
  fun spteqr(compz : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, z__ : Real*, ldz : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun sptrfs(n : Integer*, nrhs : Integer*, d__ : Real*, e : Real*, df : Real*, ef : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, ferr : Real*, berr : Real*, work : Real*, info : Integer*) : LibC::Int
  fun sptsv(n : Integer*, nrhs : Integer*, d__ : Real*, e : Real*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun sptsvx(fact : LibC::Char*, n : Integer*, nrhs : Integer*, d__ : Real*, e : Real*, df : Real*, ef : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Real*, info : Integer*) : LibC::Int
  fun spttrf(n : Integer*, d__ : Real*, e : Real*, info : Integer*) : LibC::Int
  fun spttrs(n : Integer*, nrhs : Integer*, d__ : Real*, e : Real*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun sptts2(n : Integer*, nrhs : Integer*, d__ : Real*, e : Real*, b : Real*, ldb : Integer*) : LibC::Int
  fun srscl(n : Integer*, sa : Real*, sx : Real*, incx : Integer*) : LibC::Int
  fun ssbev(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Real*, ldab : Integer*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun ssbevd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Real*, ldab : Integer*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun ssbevx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Real*, ldab : Integer*, q : Real*, ldq : Integer*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun ssbgst(vect : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Real*, ldab : Integer*, bb : Real*, ldbb : Integer*, x : Real*, ldx : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun ssbgv(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Real*, ldab : Integer*, bb : Real*, ldbb : Integer*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun ssbgvd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Real*, ldab : Integer*, bb : Real*, ldbb : Integer*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun ssbgvx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Real*, ldab : Integer*, bb : Real*, ldbb : Integer*, q : Real*, ldq : Integer*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun ssbtrd(vect : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Real*, ldab : Integer*, d__ : Real*, e : Real*, q : Real*, ldq : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun ssfrk(transr : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, n : Integer*, k : Integer*, alpha : Real*, a : Real*, lda : Integer*, beta : Real*, c__ : Real*) : LibC::Int
  fun sspcon(uplo : LibC::Char*, n : Integer*, ap : Real*, ipiv : Integer*, anorm : Real*, rcond : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sspev(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Real*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun sspevd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Real*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun sspevx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Real*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun sspgst(itype : Integer*, uplo : LibC::Char*, n : Integer*, ap : Real*, bp : Real*, info : Integer*) : LibC::Int
  fun sspgv(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Real*, bp : Real*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun sspgvd(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Real*, bp : Real*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun sspgvx(itype : Integer*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Real*, bp : Real*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun ssprfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Real*, afp : Real*, ipiv : Integer*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sspsv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Real*, ipiv : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun sspsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Real*, afp : Real*, ipiv : Integer*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun ssptrd(uplo : LibC::Char*, n : Integer*, ap : Real*, d__ : Real*, e : Real*, tau : Real*, info : Integer*) : LibC::Int
  fun ssptrf(uplo : LibC::Char*, n : Integer*, ap : Real*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun ssptri(uplo : LibC::Char*, n : Integer*, ap : Real*, ipiv : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun ssptrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Real*, ipiv : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun sstebz(range : LibC::Char*, order : LibC::Char*, n : Integer*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, d__ : Real*, e : Real*, m : Integer*, nsplit : Integer*, w : Real*, iblock : Integer*, isplit : Integer*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun sstedc(compz : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, z__ : Real*, ldz : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun sstegr(jobz : LibC::Char*, range : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Real*, ldz : Integer*, isuppz : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun sstein(n : Integer*, d__ : Real*, e : Real*, m : Integer*, w : Real*, iblock : Integer*, isplit : Integer*, z__ : Real*, ldz : Integer*, work : Real*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun sstemr(jobz : LibC::Char*, range : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, m : Integer*, w : Real*, z__ : Real*, ldz : Integer*, nzc : Integer*, isuppz : Integer*, tryrac : Logical*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun ssteqr(compz : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, z__ : Real*, ldz : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun ssterf(n : Integer*, d__ : Real*, e : Real*, info : Integer*) : LibC::Int
  fun sstev(jobz : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, z__ : Real*, ldz : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun sstevd(jobz : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, z__ : Real*, ldz : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun sstevr(jobz : LibC::Char*, range : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Real*, ldz : Integer*, isuppz : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun sstevx(jobz : LibC::Char*, range : LibC::Char*, n : Integer*, d__ : Real*, e : Real*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun ssycon(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, ipiv : Integer*, anorm : Real*, rcond : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun ssyequb(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, s : Real*, scond : Real*, amax : Real*, work : Real*, info : Integer*) : LibC::Int
  fun ssyev(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, w : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun ssyevd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, w : Real*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun ssyevr(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Real*, ldz : Integer*, isuppz : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun ssyevx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun ssygs2(itype : Integer*, uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun ssygst(itype : Integer*, uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun ssygv(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, w : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun ssygvd(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, w : Real*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun ssygvx(itype : Integer*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, vl : Real*, vu : Real*, il : Integer*, iu : Integer*, abstol : Real*, m : Integer*, w : Real*, z__ : Real*, ldz : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun ssyrfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, ipiv : Integer*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun ssyrfsx(uplo : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, ipiv : Integer*, s : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun ssysv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, ipiv : Integer*, b : Real*, ldb : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun ssysvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, ipiv : Integer*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, ferr : Real*, berr : Real*, work : Real*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun ssysvxx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, af : Real*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, s : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, rcond : Real*, rpvgrw : Real*, berr : Real*, n_err_bnds__ : Integer*, err_bnds_norm__ : Real*, err_bnds_comp__ : Real*, nparams : Integer*, params : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun ssytd2(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, d__ : Real*, e : Real*, tau : Real*, info : Integer*) : LibC::Int
  fun ssytf2(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun ssytrd(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, d__ : Real*, e : Real*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun ssytrf(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, ipiv : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun ssytri(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, ipiv : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun ssytrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, ipiv : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun stbcon(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, kd : Integer*, ab : Real*, ldab : Integer*, rcond : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun stbrfs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Real*, ldab : Integer*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun stbtrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Real*, ldab : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun stfsm(transr : LibC::Char*, side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, m : Integer*, n : Integer*, alpha : Real*, a : Real*, b : Real*, ldb : Integer*) : LibC::Int
  fun stftri(transr : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Real*, info : Integer*) : LibC::Int
  fun stfttp(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, arf : Real*, ap : Real*, info : Integer*) : LibC::Int
  fun stfttr(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, arf : Real*, a : Real*, lda : Integer*, info : Integer*) : LibC::Int
  fun stgevc(side : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, s : Real*, lds : Integer*, p : Real*, ldp : Integer*, vl : Real*, ldvl : Integer*, vr : Real*, ldvr : Integer*, mm : Integer*, m : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun stgex2(wantq : Logical*, wantz : Logical*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, q : Real*, ldq : Integer*, z__ : Real*, ldz : Integer*, j1 : Integer*, n1 : Integer*, n2 : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun stgexc(wantq : Logical*, wantz : Logical*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, q : Real*, ldq : Integer*, z__ : Real*, ldz : Integer*, ifst : Integer*, ilst : Integer*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun stgsen(ijob : Integer*, wantq : Logical*, wantz : Logical*, select : Logical*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, alphar : Real*, alphai : Real*, beta : Real*, q : Real*, ldq : Integer*, z__ : Real*, ldz : Integer*, m : Integer*, pl : Real*, pr : Real*, dif : Real*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun stgsja(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Integer*, p : Integer*, n : Integer*, k : Integer*, l : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, tola : Real*, tolb : Real*, alpha : Real*, beta : Real*, u : Real*, ldu : Integer*, v : Real*, ldv : Integer*, q : Real*, ldq : Integer*, work : Real*, ncycle : Integer*, info : Integer*) : LibC::Int
  fun stgsna(job : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, vl : Real*, ldvl : Integer*, vr : Real*, ldvr : Integer*, s : Real*, dif : Real*, mm : Integer*, m : Integer*, work : Real*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun stgsy2(trans : LibC::Char*, ijob : Integer*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, c__ : Real*, ldc : Integer*, d__ : Real*, ldd : Integer*, e : Real*, lde : Integer*, f : Real*, ldf : Integer*, scale : Real*, rdsum : Real*, rdscal : Real*, iwork : Integer*, pq : Integer*, info : Integer*) : LibC::Int
  fun stgsyl(trans : LibC::Char*, ijob : Integer*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, c__ : Real*, ldc : Integer*, d__ : Real*, ldd : Integer*, e : Real*, lde : Integer*, f : Real*, ldf : Integer*, scale : Real*, dif : Real*, work : Real*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun stpcon(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, ap : Real*, rcond : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun stprfs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Real*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun stptri(uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, ap : Real*, info : Integer*) : LibC::Int
  fun stptrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Real*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun stpttf(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Real*, arf : Real*, info : Integer*) : LibC::Int
  fun stpttr(uplo : LibC::Char*, n : Integer*, ap : Real*, a : Real*, lda : Integer*, info : Integer*) : LibC::Int
  fun strcon(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, rcond : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun strevc(side : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, t : Real*, ldt : Integer*, vl : Real*, ldvl : Integer*, vr : Real*, ldvr : Integer*, mm : Integer*, m : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun strexc(compq : LibC::Char*, n : Integer*, t : Real*, ldt : Integer*, q : Real*, ldq : Integer*, ifst : Integer*, ilst : Integer*, work : Real*, info : Integer*) : LibC::Int
  fun strrfs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, x : Real*, ldx : Integer*, ferr : Real*, berr : Real*, work : Real*, iwork : Integer*, info : Integer*) : LibC::Int
  fun strsen(job : LibC::Char*, compq : LibC::Char*, select : Logical*, n : Integer*, t : Real*, ldt : Integer*, q : Real*, ldq : Integer*, wr : Real*, wi : Real*, m : Integer*, s : Real*, sep : Real*, work : Real*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun strsna(job : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, t : Real*, ldt : Integer*, vl : Real*, ldvl : Integer*, vr : Real*, ldvr : Integer*, s : Real*, sep : Real*, mm : Integer*, m : Integer*, work : Real*, ldwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun strsyl(trana : LibC::Char*, tranb : LibC::Char*, isgn : Integer*, m : Integer*, n : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, c__ : Real*, ldc : Integer*, scale : Real*, info : Integer*) : LibC::Int
  fun strti2(uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, info : Integer*) : LibC::Int
  fun strtri(uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, info : Integer*) : LibC::Int
  fun strtrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, a : Real*, lda : Integer*, b : Real*, ldb : Integer*, info : Integer*) : LibC::Int
  fun strttf(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, arf : Real*, info : Integer*) : LibC::Int
  fun strttp(uplo : LibC::Char*, n : Integer*, a : Real*, lda : Integer*, ap : Real*, info : Integer*) : LibC::Int
  fun stzrqf(m : Integer*, n : Integer*, a : Real*, lda : Integer*, tau : Real*, info : Integer*) : LibC::Int
  fun stzrzf(m : Integer*, n : Integer*, a : Real*, lda : Integer*, tau : Real*, work : Real*, lwork : Integer*, info : Integer*) : LibC::Int
  fun xerbla(srname : LibC::Char*, info : Integer*) : LibC::Int
  fun xerbla_array_(srname_array__ : LibC::Char*, srname_len__ : Integer*, info : Integer*, srname_array_len : Ftnlen) : LibC::Int
  fun zbdsqr(uplo : LibC::Char*, n : Integer*, ncvt : Integer*, nru : Integer*, ncc : Integer*, d__ : Doublereal*, e : Doublereal*, vt : Doublecomplex*, ldvt : Integer*, u : Doublecomplex*, ldu : Integer*, c__ : Doublecomplex*, ldc : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zcgesv(n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, work : Doublecomplex*, swork : Complex*, rwork : Doublereal*, iter : Integer*, info : Integer*) : LibC::Int
  fun zcposv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, work : Doublecomplex*, swork : Complex*, rwork : Doublereal*, iter : Integer*, info : Integer*) : LibC::Int
  fun zdrscl(n : Integer*, sa : Doublereal*, sx : Doublecomplex*, incx : Integer*) : LibC::Int
  fun zgbbrd(vect : LibC::Char*, m : Integer*, n : Integer*, ncc : Integer*, kl : Integer*, ku : Integer*, ab : Doublecomplex*, ldab : Integer*, d__ : Doublereal*, e : Doublereal*, q : Doublecomplex*, ldq : Integer*, pt : Doublecomplex*, ldpt : Integer*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgbcon(norm : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublecomplex*, ldab : Integer*, ipiv : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgbequ(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublecomplex*, ldab : Integer*, r__ : Doublereal*, c__ : Doublereal*, rowcnd : Doublereal*, colcnd : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun zgbequb(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublecomplex*, ldab : Integer*, r__ : Doublereal*, c__ : Doublereal*, rowcnd : Doublereal*, colcnd : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun zgbrfs(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublecomplex*, ldab : Integer*, afb : Doublecomplex*, ldafb : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgbrfsx(trans : LibC::Char*, equed : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublecomplex*, ldab : Integer*, afb : Doublecomplex*, ldafb : Integer*, ipiv : Integer*, r__ : Doublereal*, c__ : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgbsv(n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublecomplex*, ldab : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zgbsvx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublecomplex*, ldab : Integer*, afb : Doublecomplex*, ldafb : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Doublereal*, c__ : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgbsvxx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublecomplex*, ldab : Integer*, afb : Doublecomplex*, ldafb : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Doublereal*, c__ : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, rpvgrw : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgbtf2(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublecomplex*, ldab : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun zgbtrf(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublecomplex*, ldab : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun zgbtrs(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublecomplex*, ldab : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zgebak(job : LibC::Char*, side : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, scale : Doublereal*, m : Integer*, v : Doublecomplex*, ldv : Integer*, info : Integer*) : LibC::Int
  fun zgebal(job : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, ilo : Integer*, ihi : Integer*, scale : Doublereal*, info : Integer*) : LibC::Int
  fun zgebd2(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, d__ : Doublereal*, e : Doublereal*, tauq : Doublecomplex*, taup : Doublecomplex*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zgebrd(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, d__ : Doublereal*, e : Doublereal*, tauq : Doublecomplex*, taup : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zgecon(norm : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgeequ(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, r__ : Doublereal*, c__ : Doublereal*, rowcnd : Doublereal*, colcnd : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun zgeequb(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, r__ : Doublereal*, c__ : Doublereal*, rowcnd : Doublereal*, colcnd : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun zgees(jobvs : LibC::Char*, sort : LibC::Char*, select : LFp, n : Integer*, a : Doublecomplex*, lda : Integer*, sdim : Integer*, w : Doublecomplex*, vs : Doublecomplex*, ldvs : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, bwork : Logical*, info : Integer*) : LibC::Int
  fun zgeesx(jobvs : LibC::Char*, sort : LibC::Char*, select : LFp, sense : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, sdim : Integer*, w : Doublecomplex*, vs : Doublecomplex*, ldvs : Integer*, rconde : Doublereal*, rcondv : Doublereal*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, bwork : Logical*, info : Integer*) : LibC::Int
  fun zgeev(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, w : Doublecomplex*, vl : Doublecomplex*, ldvl : Integer*, vr : Doublecomplex*, ldvr : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgeevx(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, w : Doublecomplex*, vl : Doublecomplex*, ldvl : Integer*, vr : Doublecomplex*, ldvr : Integer*, ilo : Integer*, ihi : Integer*, scale : Doublereal*, abnrm : Doublereal*, rconde : Doublereal*, rcondv : Doublereal*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgegs(jobvsl : LibC::Char*, jobvsr : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, alpha : Doublecomplex*, beta : Doublecomplex*, vsl : Doublecomplex*, ldvsl : Integer*, vsr : Doublecomplex*, ldvsr : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgegv(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, alpha : Doublecomplex*, beta : Doublecomplex*, vl : Doublecomplex*, ldvl : Integer*, vr : Doublecomplex*, ldvr : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgehd2(n : Integer*, ilo : Integer*, ihi : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zgehrd(n : Integer*, ilo : Integer*, ihi : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zgelq2(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zgelqf(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zgels(trans : LibC::Char*, m : Integer*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zgelsd(m : Integer*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, s : Doublereal*, rcond : Doublereal*, rank : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun zgelss(m : Integer*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, s : Doublereal*, rcond : Doublereal*, rank : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgelsx(m : Integer*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, jpvt : Integer*, rcond : Doublereal*, rank : Integer*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgelsy(m : Integer*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, jpvt : Integer*, rcond : Doublereal*, rank : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgeql2(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zgeqlf(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zgeqp3(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, jpvt : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgeqpf(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, jpvt : Integer*, tau : Doublecomplex*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgeqr2(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zgeqrf(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zgerfs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgerfsx(trans : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, r__ : Doublereal*, c__ : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgerq2(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zgerqf(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zgesc2(n : Integer*, a : Doublecomplex*, lda : Integer*, rhs : Doublecomplex*, ipiv : Integer*, jpiv : Integer*, scale : Doublereal*) : LibC::Int
  fun zgesdd(jobz : LibC::Char*, m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, s : Doublereal*, u : Doublecomplex*, ldu : Integer*, vt : Doublecomplex*, ldvt : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun zgesv(n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zgesvd(jobu : LibC::Char*, jobvt : LibC::Char*, m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, s : Doublereal*, u : Doublecomplex*, ldu : Integer*, vt : Doublecomplex*, ldvt : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgesvx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Doublereal*, c__ : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgesvxx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, r__ : Doublereal*, c__ : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, rpvgrw : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgetc2(n : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, jpiv : Integer*, info : Integer*) : LibC::Int
  fun zgetf2(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun zgetrf(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun zgetri(n : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zgetrs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zggbak(job : LibC::Char*, side : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, lscale : Doublereal*, rscale : Doublereal*, m : Integer*, v : Doublecomplex*, ldv : Integer*, info : Integer*) : LibC::Int
  fun zggbal(job : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, ilo : Integer*, ihi : Integer*, lscale : Doublereal*, rscale : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun zgges(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LFp, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, sdim : Integer*, alpha : Doublecomplex*, beta : Doublecomplex*, vsl : Doublecomplex*, ldvsl : Integer*, vsr : Doublecomplex*, ldvsr : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, bwork : Logical*, info : Integer*) : LibC::Int
  fun zggesx(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LFp, sense : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, sdim : Integer*, alpha : Doublecomplex*, beta : Doublecomplex*, vsl : Doublecomplex*, ldvsl : Integer*, vsr : Doublecomplex*, ldvsr : Integer*, rconde : Doublereal*, rcondv : Doublereal*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, iwork : Integer*, liwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun zggev(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, alpha : Doublecomplex*, beta : Doublecomplex*, vl : Doublecomplex*, ldvl : Integer*, vr : Doublecomplex*, ldvr : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zggevx(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, alpha : Doublecomplex*, beta : Doublecomplex*, vl : Doublecomplex*, ldvl : Integer*, vr : Doublecomplex*, ldvr : Integer*, ilo : Integer*, ihi : Integer*, lscale : Doublereal*, rscale : Doublereal*, abnrm : Doublereal*, bbnrm : Doublereal*, rconde : Doublereal*, rcondv : Doublereal*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, iwork : Integer*, bwork : Logical*, info : Integer*) : LibC::Int
  fun zggglm(n : Integer*, m : Integer*, p : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, d__ : Doublecomplex*, x : Doublecomplex*, y : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zgghrd(compq : LibC::Char*, compz : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, q : Doublecomplex*, ldq : Integer*, z__ : Doublecomplex*, ldz : Integer*, info : Integer*) : LibC::Int
  fun zgglse(m : Integer*, n : Integer*, p : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, c__ : Doublecomplex*, d__ : Doublecomplex*, x : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zggqrf(n : Integer*, m : Integer*, p : Integer*, a : Doublecomplex*, lda : Integer*, taua : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, taub : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zggrqf(m : Integer*, p : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, taua : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, taub : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zggsvd(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Integer*, n : Integer*, p : Integer*, k : Integer*, l : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, alpha : Doublereal*, beta : Doublereal*, u : Doublecomplex*, ldu : Integer*, v : Doublecomplex*, ldv : Integer*, q : Doublecomplex*, ldq : Integer*, work : Doublecomplex*, rwork : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun zggsvp(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Integer*, p : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, tola : Doublereal*, tolb : Doublereal*, k : Integer*, l : Integer*, u : Doublecomplex*, ldu : Integer*, v : Doublecomplex*, ldv : Integer*, q : Doublecomplex*, ldq : Integer*, iwork : Integer*, rwork : Doublereal*, tau : Doublecomplex*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zgtcon(norm : LibC::Char*, n : Integer*, dl : Doublecomplex*, d__ : Doublecomplex*, du : Doublecomplex*, du2 : Doublecomplex*, ipiv : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zgtrfs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, dl : Doublecomplex*, d__ : Doublecomplex*, du : Doublecomplex*, dlf : Doublecomplex*, df : Doublecomplex*, duf : Doublecomplex*, du2 : Doublecomplex*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgtsv(n : Integer*, nrhs : Integer*, dl : Doublecomplex*, d__ : Doublecomplex*, du : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zgtsvx(fact : LibC::Char*, trans : LibC::Char*, n : Integer*, nrhs : Integer*, dl : Doublecomplex*, d__ : Doublecomplex*, du : Doublecomplex*, dlf : Doublecomplex*, df : Doublecomplex*, duf : Doublecomplex*, du2 : Doublecomplex*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zgttrf(n : Integer*, dl : Doublecomplex*, d__ : Doublecomplex*, du : Doublecomplex*, du2 : Doublecomplex*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun zgttrs(trans : LibC::Char*, n : Integer*, nrhs : Integer*, dl : Doublecomplex*, d__ : Doublecomplex*, du : Doublecomplex*, du2 : Doublecomplex*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zgtts2(itrans : Integer*, n : Integer*, nrhs : Integer*, dl : Doublecomplex*, d__ : Doublecomplex*, du : Doublecomplex*, du2 : Doublecomplex*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*) : LibC::Int
  fun zhbev(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublecomplex*, ldab : Integer*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zhbevd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublecomplex*, ldab : Integer*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun zhbevx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublecomplex*, ldab : Integer*, q : Doublecomplex*, ldq : Integer*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, rwork : Doublereal*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun zhbgst(vect : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Doublecomplex*, ldab : Integer*, bb : Doublecomplex*, ldbb : Integer*, x : Doublecomplex*, ldx : Integer*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zhbgv(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Doublecomplex*, ldab : Integer*, bb : Doublecomplex*, ldbb : Integer*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zhbgvd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Doublecomplex*, ldab : Integer*, bb : Doublecomplex*, ldbb : Integer*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun zhbgvx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, ka : Integer*, kb : Integer*, ab : Doublecomplex*, ldab : Integer*, bb : Doublecomplex*, ldbb : Integer*, q : Doublecomplex*, ldq : Integer*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, rwork : Doublereal*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun zhbtrd(vect : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublecomplex*, ldab : Integer*, d__ : Doublereal*, e : Doublereal*, q : Doublecomplex*, ldq : Integer*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zhecon(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zheequb(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zheev(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, w : Doublereal*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zheevd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, w : Doublereal*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun zheevr(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, isuppz : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun zheevx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun zhegs2(itype : Integer*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zhegst(itype : Integer*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zhegv(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, w : Doublereal*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zhegvd(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, w : Doublereal*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun zhegvx(itype : Integer*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun zherfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zherfsx(uplo : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, s : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zhesv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zhesvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zhesvxx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, s : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, rpvgrw : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zhetd2(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, d__ : Doublereal*, e : Doublereal*, tau : Doublecomplex*, info : Integer*) : LibC::Int
  fun zhetf2(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun zhetrd(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, d__ : Doublereal*, e : Doublereal*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zhetrf(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zhetri(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zhetrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zhfrk(transr : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, n : Integer*, k : Integer*, alpha : Doublereal*, a : Doublecomplex*, lda : Integer*, beta : Doublereal*, c__ : Doublecomplex*) : LibC::Int
  fun zhgeqz(job : LibC::Char*, compq : LibC::Char*, compz : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Doublecomplex*, ldh : Integer*, t : Doublecomplex*, ldt : Integer*, alpha : Doublecomplex*, beta : Doublecomplex*, q : Doublecomplex*, ldq : Integer*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zhpcon(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, ipiv : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zhpev(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zhpevd(jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun zhpevx(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, rwork : Doublereal*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun zhpgst(itype : Integer*, uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, bp : Doublecomplex*, info : Integer*) : LibC::Int
  fun zhpgv(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, bp : Doublecomplex*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zhpgvd(itype : Integer*, jobz : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, bp : Doublecomplex*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun zhpgvx(itype : Integer*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, bp : Doublecomplex*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, rwork : Doublereal*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun zhprfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, afp : Doublecomplex*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zhpsv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zhpsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, afp : Doublecomplex*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zhptrd(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, d__ : Doublereal*, e : Doublereal*, tau : Doublecomplex*, info : Integer*) : LibC::Int
  fun zhptrf(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun zhptri(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, ipiv : Integer*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zhptrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zhsein(side : LibC::Char*, eigsrc : LibC::Char*, initv : LibC::Char*, select : Logical*, n : Integer*, h__ : Doublecomplex*, ldh : Integer*, w : Doublecomplex*, vl : Doublecomplex*, ldvl : Integer*, vr : Doublecomplex*, ldvr : Integer*, mm : Integer*, m : Integer*, work : Doublecomplex*, rwork : Doublereal*, ifaill : Integer*, ifailr : Integer*, info : Integer*) : LibC::Int
  fun zhseqr(job : LibC::Char*, compz : LibC::Char*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Doublecomplex*, ldh : Integer*, w : Doublecomplex*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zla_gbamv_(trans : Integer*, m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, alpha : Doublereal*, ab : Doublecomplex*, ldab : Integer*, x : Doublecomplex*, incx : Integer*, beta : Doublereal*, y : Doublereal*, incy : Integer*) : LibC::Int
  fun zla_gbrcond_c_(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublecomplex*, ldab : Integer*, afb : Doublecomplex*, ldafb : Integer*, ipiv : Integer*, c__ : Doublereal*, capply : Logical*, info : Integer*, work : Doublecomplex*, rwork : Doublereal*, trans_len : Ftnlen) : Doublereal
  fun zla_gbrcond_x_(trans : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublecomplex*, ldab : Integer*, afb : Doublecomplex*, ldafb : Integer*, ipiv : Integer*, x : Doublecomplex*, info : Integer*, work : Doublecomplex*, rwork : Doublereal*, trans_len : Ftnlen) : Doublereal
  fun zla_gbrfsx_extended_(prec_type__ : Integer*, trans_type__ : Integer*, n : Integer*, kl : Integer*, ku : Integer*, nrhs : Integer*, ab : Doublecomplex*, ldab : Integer*, afb : Doublecomplex*, ldafb : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Doublereal*, b : Doublecomplex*, ldb : Integer*, y : Doublecomplex*, ldy : Integer*, berr_out__ : Doublereal*, n_norms__ : Integer*, errs_n__ : Doublereal*, errs_c__ : Doublereal*, res : Doublecomplex*, ayb : Doublereal*, dy : Doublecomplex*, y_tail__ : Doublecomplex*, rcond : Doublereal*, ithresh : Integer*, rthresh : Doublereal*, dz_ub__ : Doublereal*, ignore_cwise__ : Logical*, info : Integer*) : LibC::Int
  fun zla_gbrpvgrw_(n : Integer*, kl : Integer*, ku : Integer*, ncols : Integer*, ab : Doublecomplex*, ldab : Integer*, afb : Doublecomplex*, ldafb : Integer*) : Doublereal
  fun zla_geamv_(trans : Integer*, m : Integer*, n : Integer*, alpha : Doublereal*, a : Doublecomplex*, lda : Integer*, x : Doublecomplex*, incx : Integer*, beta : Doublereal*, y : Doublereal*, incy : Integer*) : LibC::Int
  fun zla_gercond_c_(trans : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, c__ : Doublereal*, capply : Logical*, info : Integer*, work : Doublecomplex*, rwork : Doublereal*, trans_len : Ftnlen) : Doublereal
  fun zla_gercond_x_(trans : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, x : Doublecomplex*, info : Integer*, work : Doublecomplex*, rwork : Doublereal*, trans_len : Ftnlen) : Doublereal
  fun zla_gerfsx_extended_(prec_type__ : Integer*, trans_type__ : Integer*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Doublereal*, b : Doublecomplex*, ldb : Integer*, y : Doublecomplex*, ldy : Integer*, berr_out__ : Doublereal*, n_norms__ : Integer*, errs_n__ : Doublereal*, errs_c__ : Doublereal*, res : Doublecomplex*, ayb : Doublereal*, dy : Doublecomplex*, y_tail__ : Doublecomplex*, rcond : Doublereal*, ithresh : Integer*, rthresh : Doublereal*, dz_ub__ : Doublereal*, ignore_cwise__ : Logical*, info : Integer*) : LibC::Int
  fun zla_heamv_(uplo : Integer*, n : Integer*, alpha : Doublereal*, a : Doublecomplex*, lda : Integer*, x : Doublecomplex*, incx : Integer*, beta : Doublereal*, y : Doublereal*, incy : Integer*) : LibC::Int
  fun zla_hercond_c_(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, c__ : Doublereal*, capply : Logical*, info : Integer*, work : Doublecomplex*, rwork : Doublereal*, uplo_len : Ftnlen) : Doublereal
  fun zla_hercond_x_(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, x : Doublecomplex*, info : Integer*, work : Doublecomplex*, rwork : Doublereal*, uplo_len : Ftnlen) : Doublereal
  fun zla_herfsx_extended_(prec_type__ : Integer*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Doublereal*, b : Doublecomplex*, ldb : Integer*, y : Doublecomplex*, ldy : Integer*, berr_out__ : Doublereal*, n_norms__ : Integer*, errs_n__ : Doublereal*, errs_c__ : Doublereal*, res : Doublecomplex*, ayb : Doublereal*, dy : Doublecomplex*, y_tail__ : Doublecomplex*, rcond : Doublereal*, ithresh : Integer*, rthresh : Doublereal*, dz_ub__ : Doublereal*, ignore_cwise__ : Logical*, info : Integer*, uplo_len : Ftnlen) : LibC::Int
  fun zla_herpvgrw_(uplo : LibC::Char*, n : Integer*, info : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, work : Doublereal*, uplo_len : Ftnlen) : Doublereal
  fun zla_lin_berr_(n : Integer*, nz : Integer*, nrhs : Integer*, res : Doublecomplex*, ayb : Doublereal*, berr : Doublereal*) : LibC::Int
  fun zla_porcond_c_(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, c__ : Doublereal*, capply : Logical*, info : Integer*, work : Doublecomplex*, rwork : Doublereal*, uplo_len : Ftnlen) : Doublereal
  fun zla_porcond_x_(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, x : Doublecomplex*, info : Integer*, work : Doublecomplex*, rwork : Doublereal*, uplo_len : Ftnlen) : Doublereal
  fun zla_porfsx_extended_(prec_type__ : Integer*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, colequ : Logical*, c__ : Doublereal*, b : Doublecomplex*, ldb : Integer*, y : Doublecomplex*, ldy : Integer*, berr_out__ : Doublereal*, n_norms__ : Integer*, errs_n__ : Doublereal*, errs_c__ : Doublereal*, res : Doublecomplex*, ayb : Doublereal*, dy : Doublecomplex*, y_tail__ : Doublecomplex*, rcond : Doublereal*, ithresh : Integer*, rthresh : Doublereal*, dz_ub__ : Doublereal*, ignore_cwise__ : Logical*, info : Integer*, uplo_len : Ftnlen) : LibC::Int
  fun zla_porpvgrw_(uplo : LibC::Char*, ncols : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, work : Doublereal*, uplo_len : Ftnlen) : Doublereal
  fun zla_rpvgrw_(n : Integer*, ncols : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*) : Doublereal
  fun zla_syamv_(uplo : Integer*, n : Integer*, alpha : Doublereal*, a : Doublecomplex*, lda : Integer*, x : Doublecomplex*, incx : Integer*, beta : Doublereal*, y : Doublereal*, incy : Integer*) : LibC::Int
  fun zla_syrcond_c_(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, c__ : Doublereal*, capply : Logical*, info : Integer*, work : Doublecomplex*, rwork : Doublereal*, uplo_len : Ftnlen) : Doublereal
  fun zla_syrcond_x_(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, x : Doublecomplex*, info : Integer*, work : Doublecomplex*, rwork : Doublereal*, uplo_len : Ftnlen) : Doublereal
  fun zla_syrfsx_extended_(prec_type__ : Integer*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, colequ : Logical*, c__ : Doublereal*, b : Doublecomplex*, ldb : Integer*, y : Doublecomplex*, ldy : Integer*, berr_out__ : Doublereal*, n_norms__ : Integer*, errs_n__ : Doublereal*, errs_c__ : Doublereal*, res : Doublecomplex*, ayb : Doublereal*, dy : Doublecomplex*, y_tail__ : Doublecomplex*, rcond : Doublereal*, ithresh : Integer*, rthresh : Doublereal*, dz_ub__ : Doublereal*, ignore_cwise__ : Logical*, info : Integer*, uplo_len : Ftnlen) : LibC::Int
  fun zla_syrpvgrw_(uplo : LibC::Char*, n : Integer*, info : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, work : Doublereal*, uplo_len : Ftnlen) : Doublereal
  fun zla_wwaddw_(n : Integer*, x : Doublecomplex*, y : Doublecomplex*, w : Doublecomplex*) : LibC::Int
  fun zlabrd(m : Integer*, n : Integer*, nb : Integer*, a : Doublecomplex*, lda : Integer*, d__ : Doublereal*, e : Doublereal*, tauq : Doublecomplex*, taup : Doublecomplex*, x : Doublecomplex*, ldx : Integer*, y : Doublecomplex*, ldy : Integer*) : LibC::Int
  fun zlacgv(n : Integer*, x : Doublecomplex*, incx : Integer*) : LibC::Int
  fun zlacn2(n : Integer*, v : Doublecomplex*, x : Doublecomplex*, est : Doublereal*, kase : Integer*, isave : Integer*) : LibC::Int
  fun zlacon(n : Integer*, v : Doublecomplex*, x : Doublecomplex*, est : Doublereal*, kase : Integer*) : LibC::Int
  fun zlacp2(uplo : LibC::Char*, m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublecomplex*, ldb : Integer*) : LibC::Int
  fun zlacpy(uplo : LibC::Char*, m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*) : LibC::Int
  fun zlacrm(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublereal*, ldb : Integer*, c__ : Doublecomplex*, ldc : Integer*, rwork : Doublereal*) : LibC::Int
  fun zlacrt(n : Integer*, cx : Doublecomplex*, incx : Integer*, cy : Doublecomplex*, incy : Integer*, c__ : Doublecomplex*, s : Doublecomplex*) : LibC::Int
  fun zladiv(ret_val : Doublecomplex*, x : Doublecomplex*, y : Doublecomplex*)
  fun zlaed0(qsiz : Integer*, n : Integer*, d__ : Doublereal*, e : Doublereal*, q : Doublecomplex*, ldq : Integer*, qstore : Doublecomplex*, ldqs : Integer*, rwork : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun zlaed7(n : Integer*, cutpnt : Integer*, qsiz : Integer*, tlvls : Integer*, curlvl : Integer*, curpbm : Integer*, d__ : Doublereal*, q : Doublecomplex*, ldq : Integer*, rho : Doublereal*, indxq : Integer*, qstore : Doublereal*, qptr : Integer*, prmptr : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, givnum : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun zlaed8(k : Integer*, n : Integer*, qsiz : Integer*, q : Doublecomplex*, ldq : Integer*, d__ : Doublereal*, rho : Doublereal*, cutpnt : Integer*, z__ : Doublereal*, dlamda : Doublereal*, q2 : Doublecomplex*, ldq2 : Integer*, w : Doublereal*, indxp : Integer*, indx : Integer*, indxq : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, givnum : Doublereal*, info : Integer*) : LibC::Int
  fun zlaein(rightv : Logical*, noinit : Logical*, n : Integer*, h__ : Doublecomplex*, ldh : Integer*, w : Doublecomplex*, v : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, rwork : Doublereal*, eps3 : Doublereal*, smlnum : Doublereal*, info : Integer*) : LibC::Int
  fun zlaesy(a : Doublecomplex*, b : Doublecomplex*, c__ : Doublecomplex*, rt1 : Doublecomplex*, rt2 : Doublecomplex*, evscal : Doublecomplex*, cs1 : Doublecomplex*, sn1 : Doublecomplex*) : LibC::Int
  fun zlaev2(a : Doublecomplex*, b : Doublecomplex*, c__ : Doublecomplex*, rt1 : Doublereal*, rt2 : Doublereal*, cs1 : Doublereal*, sn1 : Doublecomplex*) : LibC::Int
  fun zlag2c(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, sa : Complex*, ldsa : Integer*, info : Integer*) : LibC::Int
  fun zlags2(upper : Logical*, a1 : Doublereal*, a2 : Doublecomplex*, a3 : Doublereal*, b1 : Doublereal*, b2 : Doublecomplex*, b3 : Doublereal*, csu : Doublereal*, snu : Doublecomplex*, csv : Doublereal*, snv : Doublecomplex*, csq : Doublereal*, snq : Doublecomplex*) : LibC::Int
  fun zlagtm(trans : LibC::Char*, n : Integer*, nrhs : Integer*, alpha : Doublereal*, dl : Doublecomplex*, d__ : Doublecomplex*, du : Doublecomplex*, x : Doublecomplex*, ldx : Integer*, beta : Doublereal*, b : Doublecomplex*, ldb : Integer*) : LibC::Int
  fun zlahef(uplo : LibC::Char*, n : Integer*, nb : Integer*, kb : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, w : Doublecomplex*, ldw : Integer*, info : Integer*) : LibC::Int
  fun zlahqr(wantt : Logical*, wantz : Logical*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Doublecomplex*, ldh : Integer*, w : Doublecomplex*, iloz : Integer*, ihiz : Integer*, z__ : Doublecomplex*, ldz : Integer*, info : Integer*) : LibC::Int
  fun zlahr2(n : Integer*, k : Integer*, nb : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, t : Doublecomplex*, ldt : Integer*, y : Doublecomplex*, ldy : Integer*) : LibC::Int
  fun zlahrd(n : Integer*, k : Integer*, nb : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, t : Doublecomplex*, ldt : Integer*, y : Doublecomplex*, ldy : Integer*) : LibC::Int
  fun zlaic1(job : Integer*, j : Integer*, x : Doublecomplex*, sest : Doublereal*, w : Doublecomplex*, gamma : Doublecomplex*, sestpr : Doublereal*, s : Doublecomplex*, c__ : Doublecomplex*) : LibC::Int
  fun zlals0(icompq : Integer*, nl : Integer*, nr : Integer*, sqre : Integer*, nrhs : Integer*, b : Doublecomplex*, ldb : Integer*, bx : Doublecomplex*, ldbx : Integer*, perm : Integer*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, givnum : Doublereal*, ldgnum : Integer*, poles : Doublereal*, difl : Doublereal*, difr : Doublereal*, z__ : Doublereal*, k : Integer*, c__ : Doublereal*, s : Doublereal*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zlalsa(icompq : Integer*, smlsiz : Integer*, n : Integer*, nrhs : Integer*, b : Doublecomplex*, ldb : Integer*, bx : Doublecomplex*, ldbx : Integer*, u : Doublereal*, ldu : Integer*, vt : Doublereal*, k : Integer*, difl : Doublereal*, difr : Doublereal*, z__ : Doublereal*, poles : Doublereal*, givptr : Integer*, givcol : Integer*, ldgcol : Integer*, perm : Integer*, givnum : Doublereal*, c__ : Doublereal*, s : Doublereal*, rwork : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun zlalsd(uplo : LibC::Char*, smlsiz : Integer*, n : Integer*, nrhs : Integer*, d__ : Doublereal*, e : Doublereal*, b : Doublecomplex*, ldb : Integer*, rcond : Doublereal*, rank : Integer*, work : Doublecomplex*, rwork : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun zlangb(norm : LibC::Char*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublecomplex*, ldab : Integer*, work : Doublereal*) : Doublereal
  fun zlange(norm : LibC::Char*, m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, work : Doublereal*) : Doublereal
  fun zlangt(norm : LibC::Char*, n : Integer*, dl : Doublecomplex*, d__ : Doublecomplex*, du : Doublecomplex*) : Doublereal
  fun zlanhb(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, k : Integer*, ab : Doublecomplex*, ldab : Integer*, work : Doublereal*) : Doublereal
  fun zlanhe(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, work : Doublereal*) : Doublereal
  fun zlanhf(norm : LibC::Char*, transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, work : Doublereal*) : Doublereal
  fun zlanhp(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, work : Doublereal*) : Doublereal
  fun zlanhs(norm : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, work : Doublereal*) : Doublereal
  fun zlanht(norm : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublecomplex*) : Doublereal
  fun zlansb(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, k : Integer*, ab : Doublecomplex*, ldab : Integer*, work : Doublereal*) : Doublereal
  fun zlansp(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, work : Doublereal*) : Doublereal
  fun zlansy(norm : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, work : Doublereal*) : Doublereal
  fun zlantb(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, k : Integer*, ab : Doublecomplex*, ldab : Integer*, work : Doublereal*) : Doublereal
  fun zlantp(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, ap : Doublecomplex*, work : Doublereal*) : Doublereal
  fun zlantr(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, work : Doublereal*) : Doublereal
  fun zlapll(n : Integer*, x : Doublecomplex*, incx : Integer*, y : Doublecomplex*, incy : Integer*, ssmin : Doublereal*) : LibC::Int
  fun zlapmt(forwrd : Logical*, m : Integer*, n : Integer*, x : Doublecomplex*, ldx : Integer*, k : Integer*) : LibC::Int
  fun zlaqgb(m : Integer*, n : Integer*, kl : Integer*, ku : Integer*, ab : Doublecomplex*, ldab : Integer*, r__ : Doublereal*, c__ : Doublereal*, rowcnd : Doublereal*, colcnd : Doublereal*, amax : Doublereal*, equed : LibC::Char*) : LibC::Int
  fun zlaqge(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, r__ : Doublereal*, c__ : Doublereal*, rowcnd : Doublereal*, colcnd : Doublereal*, amax : Doublereal*, equed : LibC::Char*) : LibC::Int
  fun zlaqhb(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublecomplex*, ldab : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, equed : LibC::Char*) : LibC::Int
  fun zlaqhe(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, equed : LibC::Char*) : LibC::Int
  fun zlaqhp(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, equed : LibC::Char*) : LibC::Int
  fun zlaqp2(m : Integer*, n : Integer*, offset : Integer*, a : Doublecomplex*, lda : Integer*, jpvt : Integer*, tau : Doublecomplex*, vn1 : Doublereal*, vn2 : Doublereal*, work : Doublecomplex*) : LibC::Int
  fun zlaqps(m : Integer*, n : Integer*, offset : Integer*, nb : Integer*, kb : Integer*, a : Doublecomplex*, lda : Integer*, jpvt : Integer*, tau : Doublecomplex*, vn1 : Doublereal*, vn2 : Doublereal*, auxv : Doublecomplex*, f : Doublecomplex*, ldf : Integer*) : LibC::Int
  fun zlaqr0(wantt : Logical*, wantz : Logical*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Doublecomplex*, ldh : Integer*, w : Doublecomplex*, iloz : Integer*, ihiz : Integer*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zlaqr1(n : Integer*, h__ : Doublecomplex*, ldh : Integer*, s1 : Doublecomplex*, s2 : Doublecomplex*, v : Doublecomplex*) : LibC::Int
  fun zlaqr2(wantt : Logical*, wantz : Logical*, n : Integer*, ktop : Integer*, kbot : Integer*, nw : Integer*, h__ : Doublecomplex*, ldh : Integer*, iloz : Integer*, ihiz : Integer*, z__ : Doublecomplex*, ldz : Integer*, ns : Integer*, nd : Integer*, sh : Doublecomplex*, v : Doublecomplex*, ldv : Integer*, nh : Integer*, t : Doublecomplex*, ldt : Integer*, nv : Integer*, wv : Doublecomplex*, ldwv : Integer*, work : Doublecomplex*, lwork : Integer*) : LibC::Int
  fun zlaqr3(wantt : Logical*, wantz : Logical*, n : Integer*, ktop : Integer*, kbot : Integer*, nw : Integer*, h__ : Doublecomplex*, ldh : Integer*, iloz : Integer*, ihiz : Integer*, z__ : Doublecomplex*, ldz : Integer*, ns : Integer*, nd : Integer*, sh : Doublecomplex*, v : Doublecomplex*, ldv : Integer*, nh : Integer*, t : Doublecomplex*, ldt : Integer*, nv : Integer*, wv : Doublecomplex*, ldwv : Integer*, work : Doublecomplex*, lwork : Integer*) : LibC::Int
  fun zlaqr4(wantt : Logical*, wantz : Logical*, n : Integer*, ilo : Integer*, ihi : Integer*, h__ : Doublecomplex*, ldh : Integer*, w : Doublecomplex*, iloz : Integer*, ihiz : Integer*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zlaqr5(wantt : Logical*, wantz : Logical*, kacc22 : Integer*, n : Integer*, ktop : Integer*, kbot : Integer*, nshfts : Integer*, s : Doublecomplex*, h__ : Doublecomplex*, ldh : Integer*, iloz : Integer*, ihiz : Integer*, z__ : Doublecomplex*, ldz : Integer*, v : Doublecomplex*, ldv : Integer*, u : Doublecomplex*, ldu : Integer*, nv : Integer*, wv : Doublecomplex*, ldwv : Integer*, nh : Integer*, wh : Doublecomplex*, ldwh : Integer*) : LibC::Int
  fun zlaqsb(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublecomplex*, ldab : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, equed : LibC::Char*) : LibC::Int
  fun zlaqsp(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, equed : LibC::Char*) : LibC::Int
  fun zlaqsy(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, equed : LibC::Char*) : LibC::Int
  fun zlar1v(n : Integer*, b1 : Integer*, bn : Integer*, lambda : Doublereal*, d__ : Doublereal*, l : Doublereal*, ld : Doublereal*, lld : Doublereal*, pivmin : Doublereal*, gaptol : Doublereal*, z__ : Doublecomplex*, wantnc : Logical*, negcnt : Integer*, ztz : Doublereal*, mingma : Doublereal*, r__ : Integer*, isuppz : Integer*, nrminv : Doublereal*, resid : Doublereal*, rqcorr : Doublereal*, work : Doublereal*) : LibC::Int
  fun zlar2v(n : Integer*, x : Doublecomplex*, y : Doublecomplex*, z__ : Doublecomplex*, incx : Integer*, c__ : Doublereal*, s : Doublecomplex*, incc : Integer*) : LibC::Int
  fun zlarcm(m : Integer*, n : Integer*, a : Doublereal*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, c__ : Doublecomplex*, ldc : Integer*, rwork : Doublereal*) : LibC::Int
  fun zlarf(side : LibC::Char*, m : Integer*, n : Integer*, v : Doublecomplex*, incv : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*) : LibC::Int
  fun zlarfb(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, v : Doublecomplex*, ldv : Integer*, t : Doublecomplex*, ldt : Integer*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, ldwork : Integer*) : LibC::Int
  fun zlarfg(n : Integer*, alpha : Doublecomplex*, x : Doublecomplex*, incx : Integer*, tau : Doublecomplex*) : LibC::Int
  fun zlarfp(n : Integer*, alpha : Doublecomplex*, x : Doublecomplex*, incx : Integer*, tau : Doublecomplex*) : LibC::Int
  fun zlarft(direct : LibC::Char*, storev : LibC::Char*, n : Integer*, k : Integer*, v : Doublecomplex*, ldv : Integer*, tau : Doublecomplex*, t : Doublecomplex*, ldt : Integer*) : LibC::Int
  fun zlarfx(side : LibC::Char*, m : Integer*, n : Integer*, v : Doublecomplex*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*) : LibC::Int
  fun zlargv(n : Integer*, x : Doublecomplex*, incx : Integer*, y : Doublecomplex*, incy : Integer*, c__ : Doublereal*, incc : Integer*) : LibC::Int
  fun zlarnv(idist : Integer*, iseed : Integer*, n : Integer*, x : Doublecomplex*) : LibC::Int
  fun zlarrv(n : Integer*, vl : Doublereal*, vu : Doublereal*, d__ : Doublereal*, l : Doublereal*, pivmin : Doublereal*, isplit : Integer*, m : Integer*, dol : Integer*, dou : Integer*, minrgp : Doublereal*, rtol1 : Doublereal*, rtol2 : Doublereal*, w : Doublereal*, werr : Doublereal*, wgap : Doublereal*, iblock : Integer*, indexw : Integer*, gers : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, isuppz : Integer*, work : Doublereal*, iwork : Integer*, info : Integer*) : LibC::Int
  fun zlarscl2(m : Integer*, n : Integer*, d__ : Doublereal*, x : Doublecomplex*, ldx : Integer*) : LibC::Int
  fun zlartg(f : Doublecomplex*, g : Doublecomplex*, cs : Doublereal*, sn : Doublecomplex*, r__ : Doublecomplex*) : LibC::Int
  fun zlartv(n : Integer*, x : Doublecomplex*, incx : Integer*, y : Doublecomplex*, incy : Integer*, c__ : Doublereal*, s : Doublecomplex*, incc : Integer*) : LibC::Int
  fun zlarz(side : LibC::Char*, m : Integer*, n : Integer*, l : Integer*, v : Doublecomplex*, incv : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*) : LibC::Int
  fun zlarzb(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, l : Integer*, v : Doublecomplex*, ldv : Integer*, t : Doublecomplex*, ldt : Integer*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, ldwork : Integer*) : LibC::Int
  fun zlarzt(direct : LibC::Char*, storev : LibC::Char*, n : Integer*, k : Integer*, v : Doublecomplex*, ldv : Integer*, tau : Doublecomplex*, t : Doublecomplex*, ldt : Integer*) : LibC::Int
  fun zlascl(type__ : LibC::Char*, kl : Integer*, ku : Integer*, cfrom : Doublereal*, cto : Doublereal*, m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, info : Integer*) : LibC::Int
  fun zlascl2(m : Integer*, n : Integer*, d__ : Doublereal*, x : Doublecomplex*, ldx : Integer*) : LibC::Int
  fun zlaset(uplo : LibC::Char*, m : Integer*, n : Integer*, alpha : Doublecomplex*, beta : Doublecomplex*, a : Doublecomplex*, lda : Integer*) : LibC::Int
  fun zlasr(side : LibC::Char*, pivot : LibC::Char*, direct : LibC::Char*, m : Integer*, n : Integer*, c__ : Doublereal*, s : Doublereal*, a : Doublecomplex*, lda : Integer*) : LibC::Int
  fun zlassq(n : Integer*, x : Doublecomplex*, incx : Integer*, scale : Doublereal*, sumsq : Doublereal*) : LibC::Int
  fun zlaswp(n : Integer*, a : Doublecomplex*, lda : Integer*, k1 : Integer*, k2 : Integer*, ipiv : Integer*, incx : Integer*) : LibC::Int
  fun zlasyf(uplo : LibC::Char*, n : Integer*, nb : Integer*, kb : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, w : Doublecomplex*, ldw : Integer*, info : Integer*) : LibC::Int
  fun zlat2c(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, sa : Complex*, ldsa : Integer*, info : Integer*) : LibC::Int
  fun zlatbs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublecomplex*, ldab : Integer*, x : Doublecomplex*, scale : Doublereal*, cnorm : Doublereal*, info : Integer*) : LibC::Int
  fun zlatdf(ijob : Integer*, n : Integer*, z__ : Doublecomplex*, ldz : Integer*, rhs : Doublecomplex*, rdsum : Doublereal*, rdscal : Doublereal*, ipiv : Integer*, jpiv : Integer*) : LibC::Int
  fun zlatps(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Integer*, ap : Doublecomplex*, x : Doublecomplex*, scale : Doublereal*, cnorm : Doublereal*, info : Integer*) : LibC::Int
  fun zlatrd(uplo : LibC::Char*, n : Integer*, nb : Integer*, a : Doublecomplex*, lda : Integer*, e : Doublereal*, tau : Doublecomplex*, w : Doublecomplex*, ldw : Integer*) : LibC::Int
  fun zlatrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, x : Doublecomplex*, scale : Doublereal*, cnorm : Doublereal*, info : Integer*) : LibC::Int
  fun zlatrz(m : Integer*, n : Integer*, l : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*) : LibC::Int
  fun zlatzm(side : LibC::Char*, m : Integer*, n : Integer*, v : Doublecomplex*, incv : Integer*, tau : Doublecomplex*, c1 : Doublecomplex*, c2 : Doublecomplex*, ldc : Integer*, work : Doublecomplex*) : LibC::Int
  fun zlauu2(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, info : Integer*) : LibC::Int
  fun zlauum(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, info : Integer*) : LibC::Int
  fun zpbcon(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublecomplex*, ldab : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zpbequ(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublecomplex*, ldab : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun zpbrfs(uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Doublecomplex*, ldab : Integer*, afb : Doublecomplex*, ldafb : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zpbstf(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublecomplex*, ldab : Integer*, info : Integer*) : LibC::Int
  fun zpbsv(uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Doublecomplex*, ldab : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zpbsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Doublecomplex*, ldab : Integer*, afb : Doublecomplex*, ldafb : Integer*, equed : LibC::Char*, s : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zpbtf2(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublecomplex*, ldab : Integer*, info : Integer*) : LibC::Int
  fun zpbtrf(uplo : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublecomplex*, ldab : Integer*, info : Integer*) : LibC::Int
  fun zpbtrs(uplo : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Doublecomplex*, ldab : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zpftrf(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, info : Integer*) : LibC::Int
  fun zpftri(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, info : Integer*) : LibC::Int
  fun zpftrs(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zpocon(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zpoequ(n : Integer*, a : Doublecomplex*, lda : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun zpoequb(n : Integer*, a : Doublecomplex*, lda : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun zporfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zporfsx(uplo : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, s : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zposv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zposvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, equed : LibC::Char*, s : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zposvxx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, equed : LibC::Char*, s : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, rpvgrw : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zpotf2(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, info : Integer*) : LibC::Int
  fun zpotrf(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, info : Integer*) : LibC::Int
  fun zpotri(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, info : Integer*) : LibC::Int
  fun zpotrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zppcon(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, anorm : Doublereal*, rcond : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zppequ(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, info : Integer*) : LibC::Int
  fun zpprfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, afp : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zppsv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zppsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, afp : Doublecomplex*, equed : LibC::Char*, s : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zpptrf(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, info : Integer*) : LibC::Int
  fun zpptri(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, info : Integer*) : LibC::Int
  fun zpptrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zpstf2(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, piv : Integer*, rank : Integer*, tol : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun zpstrf(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, piv : Integer*, rank : Integer*, tol : Doublereal*, work : Doublereal*, info : Integer*) : LibC::Int
  fun zptcon(n : Integer*, d__ : Doublereal*, e : Doublecomplex*, anorm : Doublereal*, rcond : Doublereal*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zpteqr(compz : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun zptrfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, d__ : Doublereal*, e : Doublecomplex*, df : Doublereal*, ef : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zptsv(n : Integer*, nrhs : Integer*, d__ : Doublereal*, e : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zptsvx(fact : LibC::Char*, n : Integer*, nrhs : Integer*, d__ : Doublereal*, e : Doublecomplex*, df : Doublereal*, ef : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zpttrf(n : Integer*, d__ : Doublereal*, e : Doublecomplex*, info : Integer*) : LibC::Int
  fun zpttrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, d__ : Doublereal*, e : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zptts2(iuplo : Integer*, n : Integer*, nrhs : Integer*, d__ : Doublereal*, e : Doublecomplex*, b : Doublecomplex*, ldb : Integer*) : LibC::Int
  fun zrot(n : Integer*, cx : Doublecomplex*, incx : Integer*, cy : Doublecomplex*, incy : Integer*, c__ : Doublereal*, s : Doublecomplex*) : LibC::Int
  fun zspcon(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, ipiv : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zspmv(uplo : LibC::Char*, n : Integer*, alpha : Doublecomplex*, ap : Doublecomplex*, x : Doublecomplex*, incx : Integer*, beta : Doublecomplex*, y : Doublecomplex*, incy : Integer*) : LibC::Int
  fun zspr(uplo : LibC::Char*, n : Integer*, alpha : Doublecomplex*, x : Doublecomplex*, incx : Integer*, ap : Doublecomplex*) : LibC::Int
  fun zsprfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, afp : Doublecomplex*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zspsv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zspsvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, afp : Doublecomplex*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zsptrf(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun zsptri(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, ipiv : Integer*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zsptrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun zstedc(compz : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, lrwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun zstegr(jobz : LibC::Char*, range : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, abstol : Doublereal*, m : Integer*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, isuppz : Integer*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun zstein(n : Integer*, d__ : Doublereal*, e : Doublereal*, m : Integer*, w : Doublereal*, iblock : Integer*, isplit : Integer*, z__ : Doublecomplex*, ldz : Integer*, work : Doublereal*, iwork : Integer*, ifail : Integer*, info : Integer*) : LibC::Int
  fun zstemr(jobz : LibC::Char*, range : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, vl : Doublereal*, vu : Doublereal*, il : Integer*, iu : Integer*, m : Integer*, w : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, nzc : Integer*, isuppz : Integer*, tryrac : Logical*, work : Doublereal*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun zsteqr(compz : LibC::Char*, n : Integer*, d__ : Doublereal*, e : Doublereal*, z__ : Doublecomplex*, ldz : Integer*, work : Doublereal*, info : Integer*) : LibC::Int
  fun zsycon(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, anorm : Doublereal*, rcond : Doublereal*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zsyequb(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, s : Doublereal*, scond : Doublereal*, amax : Doublereal*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zsymv(uplo : LibC::Char*, n : Integer*, alpha : Doublecomplex*, a : Doublecomplex*, lda : Integer*, x : Doublecomplex*, incx : Integer*, beta : Doublecomplex*, y : Doublecomplex*, incy : Integer*) : LibC::Int
  fun zsyr(uplo : LibC::Char*, n : Integer*, alpha : Doublecomplex*, x : Doublecomplex*, incx : Integer*, a : Doublecomplex*, lda : Integer*) : LibC::Int
  fun zsyrfs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zsyrfsx(uplo : LibC::Char*, equed : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, s : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zsysv(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zsysvx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, lwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zsysvxx(fact : LibC::Char*, uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, af : Doublecomplex*, ldaf : Integer*, ipiv : Integer*, equed : LibC::Char*, s : Doublereal*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, rcond : Doublereal*, rpvgrw : Doublereal*, berr : Doublereal*, n_err_bnds__ : Integer*, err_bnds_norm__ : Doublereal*, err_bnds_comp__ : Doublereal*, nparams : Integer*, params : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun zsytf2(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, info : Integer*) : LibC::Int
  fun zsytrf(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zsytri(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zsytrs(uplo : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, ipiv : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun ztbcon(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, kd : Integer*, ab : Doublecomplex*, ldab : Integer*, rcond : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun ztbrfs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Doublecomplex*, ldab : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun ztbtrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, kd : Integer*, nrhs : Integer*, ab : Doublecomplex*, ldab : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun ztfsm(transr : LibC::Char*, side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, m : Integer*, n : Integer*, alpha : Doublecomplex*, a : Doublecomplex*, b : Doublecomplex*, ldb : Integer*) : LibC::Int
  fun ztftri(transr : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Doublecomplex*, info : Integer*) : LibC::Int
  fun ztfttp(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, arf : Doublecomplex*, ap : Doublecomplex*, info : Integer*) : LibC::Int
  fun ztfttr(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, arf : Doublecomplex*, a : Doublecomplex*, lda : Integer*, info : Integer*) : LibC::Int
  fun ztgevc(side : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, s : Doublecomplex*, lds : Integer*, p : Doublecomplex*, ldp : Integer*, vl : Doublecomplex*, ldvl : Integer*, vr : Doublecomplex*, ldvr : Integer*, mm : Integer*, m : Integer*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun ztgex2(wantq : Logical*, wantz : Logical*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, q : Doublecomplex*, ldq : Integer*, z__ : Doublecomplex*, ldz : Integer*, j1 : Integer*, info : Integer*) : LibC::Int
  fun ztgexc(wantq : Logical*, wantz : Logical*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, q : Doublecomplex*, ldq : Integer*, z__ : Doublecomplex*, ldz : Integer*, ifst : Integer*, ilst : Integer*, info : Integer*) : LibC::Int
  fun ztgsen(ijob : Integer*, wantq : Logical*, wantz : Logical*, select : Logical*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, alpha : Doublecomplex*, beta : Doublecomplex*, q : Doublecomplex*, ldq : Integer*, z__ : Doublecomplex*, ldz : Integer*, m : Integer*, pl : Doublereal*, pr : Doublereal*, dif : Doublereal*, work : Doublecomplex*, lwork : Integer*, iwork : Integer*, liwork : Integer*, info : Integer*) : LibC::Int
  fun ztgsja(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Integer*, p : Integer*, n : Integer*, k : Integer*, l : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, tola : Doublereal*, tolb : Doublereal*, alpha : Doublereal*, beta : Doublereal*, u : Doublecomplex*, ldu : Integer*, v : Doublecomplex*, ldv : Integer*, q : Doublecomplex*, ldq : Integer*, work : Doublecomplex*, ncycle : Integer*, info : Integer*) : LibC::Int
  fun ztgsna(job : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, vl : Doublecomplex*, ldvl : Integer*, vr : Doublecomplex*, ldvr : Integer*, s : Doublereal*, dif : Doublereal*, mm : Integer*, m : Integer*, work : Doublecomplex*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun ztgsy2(trans : LibC::Char*, ijob : Integer*, m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, c__ : Doublecomplex*, ldc : Integer*, d__ : Doublecomplex*, ldd : Integer*, e : Doublecomplex*, lde : Integer*, f : Doublecomplex*, ldf : Integer*, scale : Doublereal*, rdsum : Doublereal*, rdscal : Doublereal*, info : Integer*) : LibC::Int
  fun ztgsyl(trans : LibC::Char*, ijob : Integer*, m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, c__ : Doublecomplex*, ldc : Integer*, d__ : Doublecomplex*, ldd : Integer*, e : Doublecomplex*, lde : Integer*, f : Doublecomplex*, ldf : Integer*, scale : Doublereal*, dif : Doublereal*, work : Doublecomplex*, lwork : Integer*, iwork : Integer*, info : Integer*) : LibC::Int
  fun ztpcon(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, ap : Doublecomplex*, rcond : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun ztprfs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun ztptri(uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, ap : Doublecomplex*, info : Integer*) : LibC::Int
  fun ztptrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, ap : Doublecomplex*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun ztpttf(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, arf : Doublecomplex*, info : Integer*) : LibC::Int
  fun ztpttr(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, a : Doublecomplex*, lda : Integer*, info : Integer*) : LibC::Int
  fun ztrcon(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, rcond : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun ztrevc(side : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, t : Doublecomplex*, ldt : Integer*, vl : Doublecomplex*, ldvl : Integer*, vr : Doublecomplex*, ldvr : Integer*, mm : Integer*, m : Integer*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun ztrexc(compq : LibC::Char*, n : Integer*, t : Doublecomplex*, ldt : Integer*, q : Doublecomplex*, ldq : Integer*, ifst : Integer*, ilst : Integer*, info : Integer*) : LibC::Int
  fun ztrrfs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, x : Doublecomplex*, ldx : Integer*, ferr : Doublereal*, berr : Doublereal*, work : Doublecomplex*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun ztrsen(job : LibC::Char*, compq : LibC::Char*, select : Logical*, n : Integer*, t : Doublecomplex*, ldt : Integer*, q : Doublecomplex*, ldq : Integer*, w : Doublecomplex*, m : Integer*, s : Doublereal*, sep : Doublereal*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun ztrsna(job : LibC::Char*, howmny : LibC::Char*, select : Logical*, n : Integer*, t : Doublecomplex*, ldt : Integer*, vl : Doublecomplex*, ldvl : Integer*, vr : Doublecomplex*, ldvr : Integer*, s : Doublereal*, sep : Doublereal*, mm : Integer*, m : Integer*, work : Doublecomplex*, ldwork : Integer*, rwork : Doublereal*, info : Integer*) : LibC::Int
  fun ztrsyl(trana : LibC::Char*, tranb : LibC::Char*, isgn : Integer*, m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, c__ : Doublecomplex*, ldc : Integer*, scale : Doublereal*, info : Integer*) : LibC::Int
  fun ztrti2(uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, info : Integer*) : LibC::Int
  fun ztrtri(uplo : LibC::Char*, diag : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, info : Integer*) : LibC::Int
  fun ztrtrs(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Integer*, nrhs : Integer*, a : Doublecomplex*, lda : Integer*, b : Doublecomplex*, ldb : Integer*, info : Integer*) : LibC::Int
  fun ztrttf(transr : LibC::Char*, uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, arf : Doublecomplex*, info : Integer*) : LibC::Int
  fun ztrttp(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, ap : Doublecomplex*, info : Integer*) : LibC::Int
  fun ztzrqf(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, info : Integer*) : LibC::Int
  fun ztzrzf(m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zung2l(m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zung2r(m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zungbr(vect : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zunghr(n : Integer*, ilo : Integer*, ihi : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zungl2(m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zunglq(m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zungql(m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zungqr(m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zungr2(m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zungrq(m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zungtr(uplo : LibC::Char*, n : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zunm2l(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zunm2r(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zunmbr(vect : LibC::Char*, side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zunmhr(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, ilo : Integer*, ihi : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zunml2(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zunmlq(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zunmql(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zunmqr(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zunmr2(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zunmr3(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, l : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zunmrq(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zunmrz(side : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, k : Integer*, l : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zunmtr(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, a : Doublecomplex*, lda : Integer*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, lwork : Integer*, info : Integer*) : LibC::Int
  fun zupgtr(uplo : LibC::Char*, n : Integer*, ap : Doublecomplex*, tau : Doublecomplex*, q : Doublecomplex*, ldq : Integer*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun zupmtr(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Integer*, n : Integer*, ap : Doublecomplex*, tau : Doublecomplex*, c__ : Doublecomplex*, ldc : Integer*, work : Doublecomplex*, info : Integer*) : LibC::Int
  fun dsecnd : Doublereal
  fun ilaver(vers_major__ : Integer*, vers_minor__ : Integer*, vers_patch__ : Integer*) : LibC::Int
  fun lsame(ca : LibC::Char*, cb : LibC::Char*) : Logical
  fun second : Doublereal
  fun slamch(cmach : LibC::Char*) : Doublereal
  fun slamc1(beta : Integer*, t : Integer*, rnd : Logical*, ieee1 : Logical*) : LibC::Int
  fun slamc2(beta : Integer*, t : Integer*, rnd : Logical*, eps : Real*, emin : Integer*, rmin : Real*, emax : Integer*, rmax : Real*) : LibC::Int
  fun slamc3(a : Real*, b : Real*) : Doublereal
  fun slamc4(emin : Integer*, start : Real*, base : Integer*) : LibC::Int
  fun slamc5(beta : Integer*, p : Integer*, emin : Integer*, ieee : Logical*, emax : Integer*, rmax : Real*) : LibC::Int
  fun dlamch(cmach : LibC::Char*) : Doublereal
  fun dlamc1(beta : Integer*, t : Integer*, rnd : Logical*, ieee1 : Logical*) : LibC::Int
  fun dlamc2(beta : Integer*, t : Integer*, rnd : Logical*, eps : Doublereal*, emin : Integer*, rmin : Doublereal*, emax : Integer*, rmax : Doublereal*) : LibC::Int
  fun dlamc3(a : Doublereal*, b : Doublereal*) : Doublereal
  fun dlamc4(emin : Integer*, start : Doublereal*, base : Integer*) : LibC::Int
  fun dlamc5(beta : Integer*, p : Integer*, emin : Integer*, ieee : Logical*, emax : Integer*, rmax : Doublereal*) : LibC::Int
  fun ilaenv(ispec : Integer*, name__ : LibC::Char*, opts : LibC::Char*, n1 : Integer*, n2 : Integer*, n3 : Integer*, n4 : Integer*) : Integer
end
