require "./libCBLAS"

{% if !flag?(:darwin) %}

{% if flag?(:windows) %}
  @[Link("libopenblas")]
{% else %}
  @[Link("lapack")]
{% end %}
  lib LibLAPACK
    alias ComplexFloat = LibCBLAS::ComplexFloat
    alias ComplexDouble = LibCBLAS::ComplexDouble
    alias LapackCSelect1 = (ComplexFloat* -> Int32) 
    alias LapackCSelect2 = (ComplexFloat*, ComplexFloat* -> Int32) 
    alias LapackDSelect2 = (LibC::Double*, LibC::Double* -> Int32) 
    alias LapackDSelect3 = (LibC::Double*, LibC::Double*, LibC::Double* -> Int32) 
    alias LapackSSelect2 = (LibC::Float*, LibC::Float* -> Int32) 
    alias LapackSSelect3 = (LibC::Float*, LibC::Float*, LibC::Float* -> Int32) 
    alias LapackZSelect1 = (ComplexDouble* -> Int32) 
    alias LapackZSelect2 = (ComplexDouble*, ComplexDouble* -> Int32) 
    alias LapackFloatReturn = LibC::Float

    fun cbdsqr = cbdsqr_(uplo : LibC::Char*, n : Int32*, ncvt : Int32*, nru : Int32*, ncc : Int32*, d : LibC::Float*, e : LibC::Float*, vt : ComplexFloat*, ldvt : Int32*, u : ComplexFloat*, ldu : Int32*, c : ComplexFloat*, ldc : Int32*, rwork : LibC::Float*, info : Int32*)
    fun cgbbrd = cgbbrd_(vect : LibC::Char*, m : Int32*, n : Int32*, ncc : Int32*, kl : Int32*, ku : Int32*, ab : ComplexFloat*, ldab : Int32*, d : LibC::Float*, e : LibC::Float*, q : ComplexFloat*, ldq : Int32*, pt : ComplexFloat*, ldpt : Int32*, c : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgbcon = cgbcon_(norm : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexFloat*, ldab : Int32*, ipiv : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgbequ = cgbequ_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexFloat*, ldab : Int32*, r : LibC::Float*, c : LibC::Float*, rowcnd : LibC::Float*, colcnd : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun cgbequb = cgbequb_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexFloat*, ldab : Int32*, r : LibC::Float*, c : LibC::Float*, rowcnd : LibC::Float*, colcnd : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun cgbrfs = cgbrfs_(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexFloat*, ldab : Int32*, afb : ComplexFloat*, ldafb : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgbrfsx = cgbrfsx_(trans : LibC::Char*, equed : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexFloat*, ldab : Int32*, afb : ComplexFloat*, ldafb : Int32*, ipiv : Int32*, r : LibC::Float*, c : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgbsv = cgbsv_(n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexFloat*, ldab : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cgbsvx = cgbsvx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexFloat*, ldab : Int32*, afb : ComplexFloat*, ldafb : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Float*, c : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgbsvxx = cgbsvxx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexFloat*, ldab : Int32*, afb : ComplexFloat*, ldafb : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Float*, c : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, rpvgrw : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgbtf2 = cgbtf2_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexFloat*, ldab : Int32*, ipiv : Int32*, info : Int32*)
    fun cgbtrf = cgbtrf_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexFloat*, ldab : Int32*, ipiv : Int32*, info : Int32*)
    fun cgbtrs = cgbtrs_(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexFloat*, ldab : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cgebak = cgebak_(job : LibC::Char*, side : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, scale : LibC::Float*, m : Int32*, v : ComplexFloat*, ldv : Int32*, info : Int32*)
    fun cgebal = cgebal_(job : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, ilo : Int32*, ihi : Int32*, scale : LibC::Float*, info : Int32*)
    fun cgebd2 = cgebd2_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, d__ : LibC::Float*, e : LibC::Float*, tauq : ComplexFloat*, taup : ComplexFloat*, work : ComplexFloat*, info : Int32*)
    fun cgebrd = cgebrd_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, d : LibC::Float*, e : LibC::Float*, tauq : ComplexFloat*, taup : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cgecon = cgecon_(norm : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgeequ = cgeequ_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, r : LibC::Float*, c : LibC::Float*, rowcnd : LibC::Float*, colcnd : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun cgeequb = cgeequb_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, r : LibC::Float*, c : LibC::Float*, rowcnd : LibC::Float*, colcnd : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun cgees = cgees_(jobvs : LibC::Char*, sort : LibC::Char*, select : LapackCSelect1, n : Int32*, a : ComplexFloat*, lda : Int32*, sdim : Int32*, w : ComplexFloat*, vs : ComplexFloat*, ldvs : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, bwork : Int32*, info : Int32*)
    fun cgeesx = cgeesx_(jobvs : LibC::Char*, sort : LibC::Char*, select : LapackCSelect1, sense : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, sdim : Int32*, w : ComplexFloat*, vs : ComplexFloat*, ldvs : Int32*, rconde : LibC::Float*, rcondv : LibC::Float*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, bwork : Int32*, info : Int32*)
    fun cgeev = cgeev_(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, w : ComplexFloat*, vl : ComplexFloat*, ldvl : Int32*, vr : ComplexFloat*, ldvr : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun cgeevx = cgeevx_(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, w : ComplexFloat*, vl : ComplexFloat*, ldvl : Int32*, vr : ComplexFloat*, ldvr : Int32*, ilo : Int32*, ihi : Int32*, scale : LibC::Float*, abnrm : LibC::Float*, rconde : LibC::Float*, rcondv : LibC::Float*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun cgegs = cgegs_(jobvsl : LibC::Char*, jobvsr : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, alpha : ComplexFloat*, beta : ComplexFloat*, vsl : ComplexFloat*, ldvsl : Int32*, vsr : ComplexFloat*, ldvsr : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun cgegv = cgegv_(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, alpha : ComplexFloat*, beta : ComplexFloat*, vl : ComplexFloat*, ldvl : Int32*, vr : ComplexFloat*, ldvr : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun cgehd2 = cgehd2_(n : Int32*, ilo : Int32*, ihi : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, info : Int32*)
    fun cgehrd = cgehrd_(n : Int32*, ilo : Int32*, ihi : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cgelq2 = cgelq2_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, info : Int32*)
    fun cgelqf = cgelqf_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cgels = cgels_(trans : LibC::Char*, m : Int32*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cgelsd = cgelsd_(m : Int32*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, s : LibC::Float*, rcond : LibC::Float*, rank : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, iwork : Int32*, info : Int32*)
    fun cgelss = cgelss_(m : Int32*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, s : LibC::Float*, rcond : LibC::Float*, rank : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun cgelsx = cgelsx_(m : Int32*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, jpvt : Int32*, rcond : LibC::Float*, rank : Int32*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgelsy = cgelsy_(m : Int32*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, jpvt : Int32*, rcond : LibC::Float*, rank : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun cgeql2 = cgeql2_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, info : Int32*)
    fun cgeqlf = cgeqlf_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cgeqp3 = cgeqp3_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, jpvt : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun cgeqpf = cgeqpf_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, jpvt : Int32*, tau : ComplexFloat*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgeqr2 = cgeqr2_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, info : Int32*)
    fun cgeqrf = cgeqrf_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cgerfs = cgerfs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgerfsx = cgerfsx_(trans : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, r : LibC::Float*, c : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgerq2 = cgerq2_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, info : Int32*)
    fun cgerqf = cgerqf_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cgesc2 = cgesc2_(n : Int32*, a : ComplexFloat*, lda : Int32*, rhs : ComplexFloat*, ipiv : Int32*, jpiv : Int32*, scale : LibC::Float*)
    fun cgesdd = cgesdd_(jobz : LibC::Char*, m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, s : LibC::Float*, u : ComplexFloat*, ldu : Int32*, vt : ComplexFloat*, ldvt : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, iwork : Int32*, info : Int32*)
    fun cgesv = cgesv_(n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cgesvd = cgesvd_(jobu : LibC::Char*, jobvt : LibC::Char*, m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, s : LibC::Float*, u : ComplexFloat*, ldu : Int32*, vt : ComplexFloat*, ldvt : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun cgesvx = cgesvx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Float*, c : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgesvxx = cgesvxx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Float*, c : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, rpvgrw : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgetc2 = cgetc2_(n : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, jpiv : Int32*, info : Int32*)
    fun cgetf2 = cgetf2_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun cgetrf = cgetrf_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun cgetri = cgetri_(n : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cgetrs = cgetrs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cggbak = cggbak_(job : LibC::Char*, side : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, lscale : LibC::Float*, rscale : LibC::Float*, m : Int32*, v : ComplexFloat*, ldv : Int32*, info : Int32*)
    fun cggbal = cggbal_(job : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, ilo : Int32*, ihi : Int32*, lscale : LibC::Float*, rscale : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun cgges = cgges_(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LapackCSelect2, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, sdim : Int32*, alpha : ComplexFloat*, beta : ComplexFloat*, vsl : ComplexFloat*, ldvsl : Int32*, vsr : ComplexFloat*, ldvsr : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, bwork : Int32*, info : Int32*)
    fun cggesx = cggesx_(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LapackCSelect2, sense : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, sdim : Int32*, alpha : ComplexFloat*, beta : ComplexFloat*, vsl : ComplexFloat*, ldvsl : Int32*, vsr : ComplexFloat*, ldvsr : Int32*, rconde : LibC::Float*, rcondv : LibC::Float*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, iwork : Int32*, liwork : Int32*, bwork : Int32*, info : Int32*)
    fun cggev = cggev_(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, alpha : ComplexFloat*, beta : ComplexFloat*, vl : ComplexFloat*, ldvl : Int32*, vr : ComplexFloat*, ldvr : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun cggevx = cggevx_(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, alpha : ComplexFloat*, beta : ComplexFloat*, vl : ComplexFloat*, ldvl : Int32*, vr : ComplexFloat*, ldvr : Int32*, ilo : Int32*, ihi : Int32*, lscale : LibC::Float*, rscale : LibC::Float*, abnrm : LibC::Float*, bbnrm : LibC::Float*, rconde : LibC::Float*, rcondv : LibC::Float*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, iwork : Int32*, bwork : Int32*, info : Int32*)
    fun cggglm = cggglm_(n : Int32*, m : Int32*, p : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, d : ComplexFloat*, x : ComplexFloat*, y : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cgghrd = cgghrd_(compq : LibC::Char*, compz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, q : ComplexFloat*, ldq : Int32*, z : ComplexFloat*, ldz : Int32*, info : Int32*)
    fun cgglse = cgglse_(m : Int32*, n : Int32*, p : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, c : ComplexFloat*, d : ComplexFloat*, x : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cggqrf = cggqrf_(n : Int32*, m : Int32*, p : Int32*, a : ComplexFloat*, lda : Int32*, taua : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, taub : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cggrqf = cggrqf_(m : Int32*, p : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, taua : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, taub : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cggsvd = cggsvd_(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Int32*, n : Int32*, p : Int32*, k : Int32*, l : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, alpha : LibC::Float*, beta : LibC::Float*, u : ComplexFloat*, ldu : Int32*, v : ComplexFloat*, ldv : Int32*, q : ComplexFloat*, ldq : Int32*, work : ComplexFloat*, rwork : LibC::Float*, iwork : Int32*, info : Int32*) : Int32
    fun cggsvp = cggsvp_(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Int32*, p : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, tola : LibC::Float*, tolb : LibC::Float*, k : Int32*, l : Int32*, u : ComplexFloat*, ldu : Int32*, v : ComplexFloat*, ldv : Int32*, q : ComplexFloat*, ldq : Int32*, iwork : Int32*, rwork : LibC::Float*, tau : ComplexFloat*, work : ComplexFloat*, info : Int32*) : Int32
    fun cgtcon = cgtcon_(norm : LibC::Char*, n : Int32*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*, du2 : ComplexFloat*, ipiv : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : ComplexFloat*, info : Int32*)
    fun cgtrfs = cgtrfs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*, dlf : ComplexFloat*, df : ComplexFloat*, duf : ComplexFloat*, du2 : ComplexFloat*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgtsv = cgtsv_(n : Int32*, nrhs : Int32*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cgtsvx = cgtsvx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, nrhs : Int32*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*, dlf : ComplexFloat*, df : ComplexFloat*, duf : ComplexFloat*, du2 : ComplexFloat*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cgttrf = cgttrf_(n : Int32*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*, du2 : ComplexFloat*, ipiv : Int32*, info : Int32*)
    fun cgttrs = cgttrs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*, du2 : ComplexFloat*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cgtts2 = cgtts2_(itrans : Int32*, n : Int32*, nrhs : Int32*, dl : ComplexFloat*, d__ : ComplexFloat*, du : ComplexFloat*, du2 : ComplexFloat*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*)
    fun chbev = chbev_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexFloat*, ldab : Int32*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun chbevd = chbevd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexFloat*, ldab : Int32*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun chbevx = chbevx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexFloat*, ldab : Int32*, q : ComplexFloat*, ldq : Int32*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, rwork : LibC::Float*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun chbgst = chbgst_(vect : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : ComplexFloat*, ldab : Int32*, bb : ComplexFloat*, ldbb : Int32*, x : ComplexFloat*, ldx : Int32*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun chbgv = chbgv_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : ComplexFloat*, ldab : Int32*, bb : ComplexFloat*, ldbb : Int32*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun chbgvd = chbgvd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : ComplexFloat*, ldab : Int32*, bb : ComplexFloat*, ldbb : Int32*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun chbgvx = chbgvx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : ComplexFloat*, ldab : Int32*, bb : ComplexFloat*, ldbb : Int32*, q : ComplexFloat*, ldq : Int32*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, rwork : LibC::Float*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun chbtrd = chbtrd_(vect : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexFloat*, ldab : Int32*, d : LibC::Float*, e : LibC::Float*, q : ComplexFloat*, ldq : Int32*, work : ComplexFloat*, info : Int32*)
    fun checon = checon_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : ComplexFloat*, info : Int32*)
    fun cheequb = cheequb_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, work : ComplexFloat*, info : Int32*)
    fun cheev = cheev_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, w : LibC::Float*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun cheevd = cheevd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, w : LibC::Float*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun cheevr = cheevr_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, isuppz : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun cheevx = cheevx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun chegs2 = chegs2_(itype : Int32*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun chegst = chegst_(itype : Int32*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun chegv = chegv_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, w : LibC::Float*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun chegvd = chegvd_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, w : LibC::Float*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun chegvx = chegvx_(itype : Int32*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun cherfs = cherfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cherfsx = cherfsx_(uplo : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, s : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun chesv = chesv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun chesvx = chesvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun chesvxx = chesvxx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, s : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, rpvgrw : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun chetd2 = chetd2_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, d__ : LibC::Float*, e : LibC::Float*, tau : ComplexFloat*, info : Int32*)
    fun chetf2 = chetf2_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun chetrd = chetrd_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, d : LibC::Float*, e : LibC::Float*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun chetrf = chetrf_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun chetri = chetri_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, work : ComplexFloat*, info : Int32*)
    fun chetrs = chetrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun chfrk = chfrk_(transr : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, n : Int32*, k : Int32*, alpha : LibC::Float*, a : ComplexFloat*, lda : Int32*, beta : LibC::Float*, c : ComplexFloat*)
    fun chgeqz = chgeqz_(job : LibC::Char*, compq : LibC::Char*, compz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h : ComplexFloat*, ldh : Int32*, t : ComplexFloat*, ldt : Int32*, alpha : ComplexFloat*, beta : ComplexFloat*, q : ComplexFloat*, ldq : Int32*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun chla_transtype_ = chla_transtype__(ret_val : LibC::Char*, ret_val_len : LibC::Int, trans : Int32*)
    fun chpcon = chpcon_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, ipiv : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : ComplexFloat*, info : Int32*)
    fun chpev = chpev_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun chpevd = chpevd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun chpevx = chpevx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, rwork : LibC::Float*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun chpgst = chpgst_(itype : Int32*, uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, bp : ComplexFloat*, info : Int32*)
    fun chpgv = chpgv_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, bp : ComplexFloat*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun chpgvd = chpgvd_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, bp : ComplexFloat*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun chpgvx = chpgvx_(itype : Int32*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, bp : ComplexFloat*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, rwork : LibC::Float*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun chprfs = chprfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, afp : ComplexFloat*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun chpsv = chpsv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun chpsvx = chpsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, afp : ComplexFloat*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun chptrd = chptrd_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, d : LibC::Float*, e : LibC::Float*, tau : ComplexFloat*, info : Int32*)
    fun chptrf = chptrf_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, ipiv : Int32*, info : Int32*)
    fun chptri = chptri_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, ipiv : Int32*, work : ComplexFloat*, info : Int32*)
    fun chptrs = chptrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun chsein = chsein_(side : LibC::Char*, eigsrc : LibC::Char*, initv : LibC::Char*, select : Int32*, n : Int32*, h : ComplexFloat*, ldh : Int32*, w : ComplexFloat*, vl : ComplexFloat*, ldvl : Int32*, vr : ComplexFloat*, ldvr : Int32*, mm : Int32*, m : Int32*, work : ComplexFloat*, rwork : LibC::Float*, ifaill : Int32*, ifailr : Int32*, info : Int32*)
    fun chseqr = chseqr_(job : LibC::Char*, compz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h : ComplexFloat*, ldh : Int32*, w : ComplexFloat*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cla_gbamv_ = cla_gbamv__(trans : Int32*, m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, alpha : LibC::Float*, ab : ComplexFloat*, ldab : Int32*, x : ComplexFloat*, incx : Int32*, beta : LibC::Float*, y : LibC::Float*, incy : Int32*)
    fun cla_gbrcond_c_ = cla_gbrcond_c__(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexFloat*, ldab : Int32*, afb : ComplexFloat*, ldafb : Int32*, ipiv : Int32*, c__ : LibC::Float*, capply : LibC::Char*, info : Int32*, work : ComplexFloat*, rwork : LibC::Float*, trans_len : LibC::Int) : LibC::Double
    fun cla_gbrcond_x_ = cla_gbrcond_x__(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexFloat*, ldab : Int32*, afb : ComplexFloat*, ldafb : Int32*, ipiv : Int32*, x : ComplexFloat*, info : Int32*, work : ComplexFloat*, rwork : LibC::Float*, trans_len : LibC::Int) : LibC::Double
    fun cla_gbrfsx_extended_ = cla_gbrfsx_extended__(prec_type__ : Int32*, trans_type__ : Int32*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexFloat*, ldab : Int32*, afb : ComplexFloat*, ldafb : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Float*, b : ComplexFloat*, ldb : Int32*, y : ComplexFloat*, ldy : Int32*, berr_out__ : LibC::Float*, n_norms__ : Int32*, errs_n__ : LibC::Float*, errs_c__ : LibC::Float*, res : ComplexFloat*, ayb : LibC::Float*, dy : ComplexFloat*, y_tail__ : ComplexFloat*, rcond : LibC::Float*, ithresh : Int32*, rthresh : LibC::Float*, dz_ub__ : LibC::Float*, ignore_cwise__ : LibC::Char*, info : Int32*)
    fun cla_gbrpvgrw_ = cla_gbrpvgrw__(n : Int32*, kl : Int32*, ku : Int32*, ncols : Int32*, ab : ComplexFloat*, ldab : Int32*, afb : ComplexFloat*, ldafb : Int32*) : LibC::Double
    fun cla_geamv_ = cla_geamv__(trans : Int32*, m : Int32*, n : Int32*, alpha : LibC::Float*, a : ComplexFloat*, lda : Int32*, x : ComplexFloat*, incx : Int32*, beta : LibC::Float*, y : LibC::Float*, incy : Int32*)
    fun cla_gercond_c_ = cla_gercond_c__(trans : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, c__ : LibC::Float*, capply : LibC::Char*, info : Int32*, work : ComplexFloat*, rwork : LibC::Float*, trans_len : LibC::Int) : LibC::Double
    fun cla_gercond_x_ = cla_gercond_x__(trans : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, x : ComplexFloat*, info : Int32*, work : ComplexFloat*, rwork : LibC::Float*, trans_len : LibC::Int) : LibC::Double
    fun cla_gerfsx_extended_ = cla_gerfsx_extended__(prec_type__ : Int32*, trans_type__ : Int32*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Float*, b : ComplexFloat*, ldb : Int32*, y : ComplexFloat*, ldy : Int32*, berr_out__ : LibC::Float*, n_norms__ : Int32*, errs_n__ : LibC::Float*, errs_c__ : LibC::Float*, res : ComplexFloat*, ayb : LibC::Float*, dy : ComplexFloat*, y_tail__ : ComplexFloat*, rcond : LibC::Float*, ithresh : Int32*, rthresh : LibC::Float*, dz_ub__ : LibC::Float*, ignore_cwise__ : LibC::Char*, info : Int32*)
    fun cla_heamv_ = cla_heamv__(uplo : Int32*, n : Int32*, alpha : LibC::Float*, a : ComplexFloat*, lda : Int32*, x : ComplexFloat*, incx : Int32*, beta : LibC::Float*, y : LibC::Float*, incy : Int32*)
    fun cla_hercond_c_ = cla_hercond_c__(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, c__ : LibC::Float*, capply : LibC::Char*, info : Int32*, work : ComplexFloat*, rwork : LibC::Float*, uplo_len : LibC::Int) : LibC::Double
    fun cla_hercond_x_ = cla_hercond_x__(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, x : ComplexFloat*, info : Int32*, work : ComplexFloat*, rwork : LibC::Float*, uplo_len : LibC::Int) : LibC::Double
    fun cla_herfsx_extended_ = cla_herfsx_extended__(prec_type__ : Int32*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Float*, b : ComplexFloat*, ldb : Int32*, y : ComplexFloat*, ldy : Int32*, berr_out__ : LibC::Float*, n_norms__ : Int32*, errs_n__ : LibC::Float*, errs_c__ : LibC::Float*, res : ComplexFloat*, ayb : LibC::Float*, dy : ComplexFloat*, y_tail__ : ComplexFloat*, rcond : LibC::Float*, ithresh : Int32*, rthresh : LibC::Float*, dz_ub__ : LibC::Float*, ignore_cwise__ : LibC::Char*, info : Int32*, uplo_len : LibC::Int)
    fun cla_herpvgrw_ = cla_herpvgrw__(uplo : LibC::Char*, n : Int32*, info : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, work : LibC::Float*, uplo_len : LibC::Int) : LibC::Double
    fun cla_lin_berr_ = cla_lin_berr__(n : Int32*, nz : Int32*, nrhs : Int32*, res : ComplexFloat*, ayb : LibC::Float*, berr : LibC::Float*)
    fun cla_porcond_c_ = cla_porcond_c__(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, c__ : LibC::Float*, capply : LibC::Char*, info : Int32*, work : ComplexFloat*, rwork : LibC::Float*, uplo_len : LibC::Int) : LibC::Double
    fun cla_porcond_x_ = cla_porcond_x__(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, x : ComplexFloat*, info : Int32*, work : ComplexFloat*, rwork : LibC::Float*, uplo_len : LibC::Int) : LibC::Double
    fun cla_porfsx_extended_ = cla_porfsx_extended__(prec_type__ : Int32*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, colequ : LibC::Char*, c__ : LibC::Float*, b : ComplexFloat*, ldb : Int32*, y : ComplexFloat*, ldy : Int32*, berr_out__ : LibC::Float*, n_norms__ : Int32*, errs_n__ : LibC::Float*, errs_c__ : LibC::Float*, res : ComplexFloat*, ayb : LibC::Float*, dy : ComplexFloat*, y_tail__ : ComplexFloat*, rcond : LibC::Float*, ithresh : Int32*, rthresh : LibC::Float*, dz_ub__ : LibC::Float*, ignore_cwise__ : LibC::Char*, info : Int32*, uplo_len : LibC::Int)
    fun cla_porpvgrw_ = cla_porpvgrw__(uplo : LibC::Char*, ncols : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, work : LibC::Float*, uplo_len : LibC::Int) : LibC::Double
    fun cla_rpvgrw_ = cla_rpvgrw__(n : Int32*, ncols : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*) : LibC::Double
    fun cla_syamv_ = cla_syamv__(uplo : Int32*, n : Int32*, alpha : LibC::Float*, a : ComplexFloat*, lda : Int32*, x : ComplexFloat*, incx : Int32*, beta : LibC::Float*, y : LibC::Float*, incy : Int32*)
    fun cla_syrcond_c_ = cla_syrcond_c__(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, c__ : LibC::Float*, capply : LibC::Char*, info : Int32*, work : ComplexFloat*, rwork : LibC::Float*, uplo_len : LibC::Int) : LibC::Double
    fun cla_syrcond_x_ = cla_syrcond_x__(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, x : ComplexFloat*, info : Int32*, work : ComplexFloat*, rwork : LibC::Float*, uplo_len : LibC::Int) : LibC::Double
    fun cla_syrfsx_extended_ = cla_syrfsx_extended__(prec_type__ : Int32*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Float*, b : ComplexFloat*, ldb : Int32*, y : ComplexFloat*, ldy : Int32*, berr_out__ : LibC::Float*, n_norms__ : Int32*, errs_n__ : LibC::Float*, errs_c__ : LibC::Float*, res : ComplexFloat*, ayb : LibC::Float*, dy : ComplexFloat*, y_tail__ : ComplexFloat*, rcond : LibC::Float*, ithresh : Int32*, rthresh : LibC::Float*, dz_ub__ : LibC::Float*, ignore_cwise__ : LibC::Char*, info : Int32*, uplo_len : LibC::Int)
    fun cla_syrpvgrw_ = cla_syrpvgrw__(uplo : LibC::Char*, n : Int32*, info : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, work : LibC::Float*, uplo_len : LibC::Int) : LibC::Double
    fun cla_wwaddw_ = cla_wwaddw__(n : Int32*, x : ComplexFloat*, y : ComplexFloat*, w : ComplexFloat*)
    fun clabrd = clabrd_(m : Int32*, n : Int32*, nb : Int32*, a : ComplexFloat*, lda : Int32*, d__ : LibC::Float*, e : LibC::Float*, tauq : ComplexFloat*, taup : ComplexFloat*, x : ComplexFloat*, ldx : Int32*, y : ComplexFloat*, ldy : Int32*)
    fun clacgv = clacgv_(n : Int32*, x : ComplexFloat*, incx : Int32*)
    fun clacn2 = clacn2_(n : Int32*, v : ComplexFloat*, x : ComplexFloat*, est : LibC::Float*, kase : Int32*, isave : Int32*)
    fun clacon = clacon_(n : Int32*, v : ComplexFloat*, x : ComplexFloat*, est : LibC::Float*, kase : Int32*)
    fun clacp2 = clacp2_(uplo : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, b : ComplexFloat*, ldb : Int32*)
    fun clacpy = clacpy_(uplo : LibC::Char*, m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*)
    fun clacrm = clacrm_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : LibC::Float*, ldb : Int32*, c : ComplexFloat*, ldc : Int32*, rwork : LibC::Float*)
    fun clacrt = clacrt_(n : Int32*, cx : ComplexFloat*, incx : Int32*, cy : ComplexFloat*, incy : Int32*, c__ : ComplexFloat*, s : ComplexFloat*)
    fun cladiv = cladiv_(ret_val : ComplexFloat*, x : ComplexFloat*, y : ComplexFloat*)
    fun claed0 = claed0_(qsiz : Int32*, n : Int32*, d__ : LibC::Float*, e : LibC::Float*, q : ComplexFloat*, ldq : Int32*, qstore : ComplexFloat*, ldqs : Int32*, rwork : LibC::Float*, iwork : Int32*, info : Int32*)
    fun claed7 = claed7_(n : Int32*, cutpnt : Int32*, qsiz : Int32*, tlvls : Int32*, curlvl : Int32*, curpbm : Int32*, d__ : LibC::Float*, q : ComplexFloat*, ldq : Int32*, rho : LibC::Float*, indxq : Int32*, qstore : LibC::Float*, qptr : Int32*, prmptr : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, givnum : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, iwork : Int32*, info : Int32*)
    fun claed8 = claed8_(k : Int32*, n : Int32*, qsiz : Int32*, q : ComplexFloat*, ldq : Int32*, d__ : LibC::Float*, rho : LibC::Float*, cutpnt : Int32*, z__ : LibC::Float*, dlamda : LibC::Float*, q2 : ComplexFloat*, ldq2 : Int32*, w : LibC::Float*, indxp : Int32*, indx : Int32*, indxq : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, givnum : LibC::Float*, info : Int32*)
    fun claein = claein_(rightv : LibC::Char*, noinit : LibC::Char*, n : Int32*, h__ : ComplexFloat*, ldh : Int32*, w : ComplexFloat*, v : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, rwork : LibC::Float*, eps3 : LibC::Float*, smlnum : LibC::Float*, info : Int32*)
    fun claesy = claesy_(a : ComplexFloat*, b : ComplexFloat*, c__ : ComplexFloat*, rt1 : ComplexFloat*, rt2 : ComplexFloat*, evscal : ComplexFloat*, cs1 : ComplexFloat*, sn1 : ComplexFloat*)
    fun claev2 = claev2_(a : ComplexFloat*, b : ComplexFloat*, c__ : ComplexFloat*, rt1 : LibC::Float*, rt2 : LibC::Float*, cs1 : LibC::Float*, sn1 : ComplexFloat*)
    fun clag2z = clag2z_(m : Int32*, n : Int32*, sa : ComplexFloat*, ldsa : Int32*, a : ComplexDouble*, lda : Int32*, info : Int32*)
    fun clags2 = clags2_(upper : LibC::Char*, a1 : LibC::Float*, a2 : ComplexFloat*, a3 : LibC::Float*, b1 : LibC::Float*, b2 : ComplexFloat*, b3 : LibC::Float*, csu : LibC::Float*, snu : ComplexFloat*, csv : LibC::Float*, snv : ComplexFloat*, csq : LibC::Float*, snq : ComplexFloat*)
    fun clagtm = clagtm_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, alpha : LibC::Float*, dl : ComplexFloat*, d__ : ComplexFloat*, du : ComplexFloat*, x : ComplexFloat*, ldx : Int32*, beta : LibC::Float*, b : ComplexFloat*, ldb : Int32*)
    fun clahef = clahef_(uplo : LibC::Char*, n : Int32*, nb : Int32*, kb : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, w : ComplexFloat*, ldw : Int32*, info : Int32*)
    fun clahqr = clahqr_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h__ : ComplexFloat*, ldh : Int32*, w : ComplexFloat*, iloz : Int32*, ihiz : Int32*, z__ : ComplexFloat*, ldz : Int32*, info : Int32*)
    fun clahr2 = clahr2_(n : Int32*, k : Int32*, nb : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, t : ComplexFloat*, ldt : Int32*, y : ComplexFloat*, ldy : Int32*)
    fun clahrd = clahrd_(n : Int32*, k : Int32*, nb : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, t : ComplexFloat*, ldt : Int32*, y : ComplexFloat*, ldy : Int32*)
    fun claic1 = claic1_(job : Int32*, j : Int32*, x : ComplexFloat*, sest : LibC::Float*, w : ComplexFloat*, gamma : ComplexFloat*, sestpr : LibC::Float*, s : ComplexFloat*, c__ : ComplexFloat*)
    fun clals0 = clals0_(icompq : Int32*, nl : Int32*, nr : Int32*, sqre : Int32*, nrhs : Int32*, b : ComplexFloat*, ldb : Int32*, bx : ComplexFloat*, ldbx : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, givnum : LibC::Float*, ldgnum : Int32*, poles : LibC::Float*, difl : LibC::Float*, difr : LibC::Float*, z__ : LibC::Float*, k : Int32*, c__ : LibC::Float*, s : LibC::Float*, rwork : LibC::Float*, info : Int32*)
    fun clalsa = clalsa_(icompq : Int32*, smlsiz : Int32*, n : Int32*, nrhs : Int32*, b : ComplexFloat*, ldb : Int32*, bx : ComplexFloat*, ldbx : Int32*, u : LibC::Float*, ldu : Int32*, vt : LibC::Float*, k : Int32*, difl : LibC::Float*, difr : LibC::Float*, z__ : LibC::Float*, poles : LibC::Float*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, perm : Int32*, givnum : LibC::Float*, c__ : LibC::Float*, s : LibC::Float*, rwork : LibC::Float*, iwork : Int32*, info : Int32*)
    fun clalsd = clalsd_(uplo : LibC::Char*, smlsiz : Int32*, n : Int32*, nrhs : Int32*, d__ : LibC::Float*, e : LibC::Float*, b : ComplexFloat*, ldb : Int32*, rcond : LibC::Float*, rank : Int32*, work : ComplexFloat*, rwork : LibC::Float*, iwork : Int32*, info : Int32*)
    fun clangb = clangb_(norm : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexFloat*, ldab : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun clange = clange_(norm : LibC::Char*, m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun clangt = clangt_(norm : LibC::Char*, n : Int32*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*) : LapackFloatReturn
    fun clanhb = clanhb_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, k : Int32*, ab : ComplexFloat*, ldab : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun clanhe = clanhe_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun clanhf = clanhf_(norm : LibC::Char*, transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, work : LibC::Float*) : LibC::Double
    fun clanhp = clanhp_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, work : LibC::Float*) : LapackFloatReturn
    fun clanhs = clanhs_(norm : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun clanht = clanht_(norm : LibC::Char*, n : Int32*, d : LibC::Float*, e : ComplexFloat*) : LapackFloatReturn
    fun clansb = clansb_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, k : Int32*, ab : ComplexFloat*, ldab : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun clansp = clansp_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, work : LibC::Float*) : LapackFloatReturn
    fun clansy = clansy_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun clantb = clantb_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, k : Int32*, ab : ComplexFloat*, ldab : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun clantp = clantp_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, ap : ComplexFloat*, work : LibC::Float*) : LapackFloatReturn
    fun clantr = clantr_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun clapll = clapll_(n : Int32*, x : ComplexFloat*, incx : Int32*, y : ComplexFloat*, incy : Int32*, ssmin : LibC::Float*)
    fun clapmt = clapmt_(forwrd : Int32*, m : Int32*, n : Int32*, x : ComplexFloat*, ldx : Int32*, k : Int32*)
    fun claqgb = claqgb_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexFloat*, ldab : Int32*, r__ : LibC::Float*, c__ : LibC::Float*, rowcnd : LibC::Float*, colcnd : LibC::Float*, amax : LibC::Float*, equed : LibC::Char*)
    fun claqge = claqge_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, r__ : LibC::Float*, c__ : LibC::Float*, rowcnd : LibC::Float*, colcnd : LibC::Float*, amax : LibC::Float*, equed : LibC::Char*)
    fun claqhb = claqhb_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexFloat*, ldab : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, equed : LibC::Char*)
    fun claqhe = claqhe_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, equed : LibC::Char*)
    fun claqhp = claqhp_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, equed : LibC::Char*)
    fun claqp2 = claqp2_(m : Int32*, n : Int32*, offset : Int32*, a : ComplexFloat*, lda : Int32*, jpvt : Int32*, tau : ComplexFloat*, vn1 : LibC::Float*, vn2 : LibC::Float*, work : ComplexFloat*)
    fun claqps = claqps_(m : Int32*, n : Int32*, offset : Int32*, nb : Int32*, kb : Int32*, a : ComplexFloat*, lda : Int32*, jpvt : Int32*, tau : ComplexFloat*, vn1 : LibC::Float*, vn2 : LibC::Float*, auxv : ComplexFloat*, f : ComplexFloat*, ldf : Int32*)
    fun claqr0 = claqr0_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h__ : ComplexFloat*, ldh : Int32*, w : ComplexFloat*, iloz : Int32*, ihiz : Int32*, z__ : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun claqr1 = claqr1_(n : Int32*, h__ : ComplexFloat*, ldh : Int32*, s1 : ComplexFloat*, s2 : ComplexFloat*, v : ComplexFloat*)
    fun claqr2 = claqr2_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ktop : Int32*, kbot : Int32*, nw : Int32*, h__ : ComplexFloat*, ldh : Int32*, iloz : Int32*, ihiz : Int32*, z__ : ComplexFloat*, ldz : Int32*, ns : Int32*, nd : Int32*, sh : ComplexFloat*, v : ComplexFloat*, ldv : Int32*, nh : Int32*, t : ComplexFloat*, ldt : Int32*, nv : Int32*, wv : ComplexFloat*, ldwv : Int32*, work : ComplexFloat*, lwork : Int32*)
    fun claqr3 = claqr3_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ktop : Int32*, kbot : Int32*, nw : Int32*, h__ : ComplexFloat*, ldh : Int32*, iloz : Int32*, ihiz : Int32*, z__ : ComplexFloat*, ldz : Int32*, ns : Int32*, nd : Int32*, sh : ComplexFloat*, v : ComplexFloat*, ldv : Int32*, nh : Int32*, t : ComplexFloat*, ldt : Int32*, nv : Int32*, wv : ComplexFloat*, ldwv : Int32*, work : ComplexFloat*, lwork : Int32*)
    fun claqr4 = claqr4_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h__ : ComplexFloat*, ldh : Int32*, w : ComplexFloat*, iloz : Int32*, ihiz : Int32*, z__ : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun claqr5 = claqr5_(wantt : LibC::Char*, wantz : LibC::Char*, kacc22 : Int32*, n : Int32*, ktop : Int32*, kbot : Int32*, nshfts : Int32*, s : ComplexFloat*, h__ : ComplexFloat*, ldh : Int32*, iloz : Int32*, ihiz : Int32*, z__ : ComplexFloat*, ldz : Int32*, v : ComplexFloat*, ldv : Int32*, u : ComplexFloat*, ldu : Int32*, nv : Int32*, wv : ComplexFloat*, ldwv : Int32*, nh : Int32*, wh : ComplexFloat*, ldwh : Int32*)
    fun claqsb = claqsb_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexFloat*, ldab : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, equed : LibC::Char*)
    fun claqsp = claqsp_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, equed : LibC::Char*)
    fun claqsy = claqsy_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, equed : LibC::Char*)
    fun clar1v = clar1v_(n : Int32*, b1 : Int32*, bn : Int32*, lambda : LibC::Float*, d__ : LibC::Float*, l : LibC::Float*, ld : LibC::Float*, lld : LibC::Float*, pivmin : LibC::Float*, gaptol : LibC::Float*, z__ : ComplexFloat*, wantnc : LibC::Char*, negcnt : Int32*, ztz : LibC::Float*, mingma : LibC::Float*, r__ : Int32*, isuppz : Int32*, nrminv : LibC::Float*, resid : LibC::Float*, rqcorr : LibC::Float*, work : LibC::Float*)
    fun clar2v = clar2v_(n : Int32*, x : ComplexFloat*, y : ComplexFloat*, z__ : ComplexFloat*, incx : Int32*, c__ : LibC::Float*, s : ComplexFloat*, incc : Int32*)
    fun clarcm = clarcm_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, c : ComplexFloat*, ldc : Int32*, rwork : LibC::Float*)
    fun clarf = clarf_(side : LibC::Char*, m : Int32*, n : Int32*, v : ComplexFloat*, incv : Int32*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int32*, work : ComplexFloat*)
    fun clarfb = clarfb_(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, v : ComplexFloat*, ldv : Int32*, t : ComplexFloat*, ldt : Int32*, c : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, ldwork : Int32*)
    fun clarfg = clarfg_(n : Int32*, alpha : ComplexFloat*, x : ComplexFloat*, incx : Int32*, tau : ComplexFloat*)
    fun clarfp = clarfp_(n : Int32*, alpha : ComplexFloat*, x : ComplexFloat*, incx : Int32*, tau : ComplexFloat*)
    fun clarft = clarft_(direct : LibC::Char*, storev : LibC::Char*, n : Int32*, k : Int32*, v : ComplexFloat*, ldv : Int32*, tau : ComplexFloat*, t : ComplexFloat*, ldt : Int32*)
    fun clarfx = clarfx_(side : LibC::Char*, m : Int32*, n : Int32*, v : ComplexFloat*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int32*, work : ComplexFloat*)
    fun clargv = clargv_(n : Int32*, x : ComplexFloat*, incx : Int32*, y : ComplexFloat*, incy : Int32*, c__ : LibC::Float*, incc : Int32*)
    fun clarnv = clarnv_(idist : Int32*, iseed : Int32*, n : Int32*, x : ComplexFloat*)
    fun clarrv = clarrv_(n : Int32*, vl : LibC::Float*, vu : LibC::Float*, d__ : LibC::Float*, l : LibC::Float*, pivmin : LibC::Float*, isplit : Int32*, m : Int32*, dol : Int32*, dou : Int32*, minrgp : LibC::Float*, rtol1 : LibC::Float*, rtol2 : LibC::Float*, w : LibC::Float*, werr : LibC::Float*, wgap : LibC::Float*, iblock : Int32*, indexw : Int32*, gers : LibC::Float*, z__ : ComplexFloat*, ldz : Int32*, isuppz : Int32*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun clarscl2 = clarscl2_(m : Int32*, n : Int32*, d__ : LibC::Float*, x : ComplexFloat*, ldx : Int32*)
    fun clartg = clartg_(f : ComplexFloat*, g : ComplexFloat*, cs : LibC::Float*, sn : ComplexFloat*, r__ : ComplexFloat*)
    fun clartv = clartv_(n : Int32*, x : ComplexFloat*, incx : Int32*, y : ComplexFloat*, incy : Int32*, c__ : LibC::Float*, s : ComplexFloat*, incc : Int32*)
    fun clarz = clarz_(side : LibC::Char*, m : Int32*, n : Int32*, l : Int32*, v : ComplexFloat*, incv : Int32*, tau : ComplexFloat*, c__ : ComplexFloat*, ldc : Int32*, work : ComplexFloat*)
    fun clarzb = clarzb_(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, l : Int32*, v : ComplexFloat*, ldv : Int32*, t : ComplexFloat*, ldt : Int32*, c__ : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, ldwork : Int32*)
    fun clarzt = clarzt_(direct : LibC::Char*, storev : LibC::Char*, n : Int32*, k : Int32*, v : ComplexFloat*, ldv : Int32*, tau : ComplexFloat*, t : ComplexFloat*, ldt : Int32*)
    fun clascl = clascl_(type : LibC::Char*, kl : Int32*, ku : Int32*, cfrom : LibC::Float*, cto : LibC::Float*, m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, info : Int32*)
    fun clascl2 = clascl2_(m : Int32*, n : Int32*, d__ : LibC::Float*, x : ComplexFloat*, ldx : Int32*)
    fun claset = claset_(uplo : LibC::Char*, m : Int32*, n : Int32*, alpha : ComplexFloat*, beta : ComplexFloat*, a : ComplexFloat*, lda : Int32*)
    fun clasr = clasr_(side : LibC::Char*, pivot : LibC::Char*, direct : LibC::Char*, m : Int32*, n : Int32*, c__ : LibC::Float*, s : LibC::Float*, a : ComplexFloat*, lda : Int32*)
    fun classq = classq_(n : Int32*, x : ComplexFloat*, incx : Int32*, scale : LibC::Float*, sumsq : LibC::Float*)
    fun claswp = claswp_(n : Int32*, a : ComplexFloat*, lda : Int32*, k1 : Int32*, k2 : Int32*, ipiv : Int32*, incx : Int32*)
    fun clasyf = clasyf_(uplo : LibC::Char*, n : Int32*, nb : Int32*, kb : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, w : ComplexFloat*, ldw : Int32*, info : Int32*)
    fun clatbs = clatbs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexFloat*, ldab : Int32*, x : ComplexFloat*, scale : LibC::Float*, cnorm : LibC::Float*, info : Int32*)
    fun clatdf = clatdf_(ijob : Int32*, n : Int32*, z__ : ComplexFloat*, ldz : Int32*, rhs : ComplexFloat*, rdsum : LibC::Float*, rdscal : LibC::Float*, ipiv : Int32*, jpiv : Int32*)
    fun clatps = clatps_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Int32*, ap : ComplexFloat*, x : ComplexFloat*, scale : LibC::Float*, cnorm : LibC::Float*, info : Int32*)
    fun clatrd = clatrd_(uplo : LibC::Char*, n : Int32*, nb : Int32*, a : ComplexFloat*, lda : Int32*, e : LibC::Float*, tau : ComplexFloat*, w : ComplexFloat*, ldw : Int32*)
    fun clatrs = clatrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, x : ComplexFloat*, scale : LibC::Float*, cnorm : LibC::Float*, info : Int32*)
    fun clatrz = clatrz_(m : Int32*, n : Int32*, l : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*)
    fun clatzm = clatzm_(side : LibC::Char*, m : Int32*, n : Int32*, v : ComplexFloat*, incv : Int32*, tau : ComplexFloat*, c1 : ComplexFloat*, c2 : ComplexFloat*, ldc : Int32*, work : ComplexFloat*)
    fun clauu2 = clauu2_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, info : Int32*)
    fun clauum = clauum_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, info : Int32*)
    fun cpbcon = cpbcon_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexFloat*, ldab : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cpbequ = cpbequ_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexFloat*, ldab : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun cpbrfs = cpbrfs_(uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : ComplexFloat*, ldab : Int32*, afb : ComplexFloat*, ldafb : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cpbstf = cpbstf_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexFloat*, ldab : Int32*, info : Int32*)
    fun cpbsv = cpbsv_(uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : ComplexFloat*, ldab : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cpbsvx = cpbsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : ComplexFloat*, ldab : Int32*, afb : ComplexFloat*, ldafb : Int32*, equed : LibC::Char*, s : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cpbtf2 = cpbtf2_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexFloat*, ldab : Int32*, info : Int32*)
    fun cpbtrf = cpbtrf_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexFloat*, ldab : Int32*, info : Int32*)
    fun cpbtrs = cpbtrs_(uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : ComplexFloat*, ldab : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cpftrf = cpftrf_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, info : Int32*)
    fun cpftri = cpftri_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, info : Int32*)
    fun cpftrs = cpftrs_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cpocon = cpocon_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cpoequ = cpoequ_(n : Int32*, a : ComplexFloat*, lda : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun cpoequb = cpoequb_(n : Int32*, a : ComplexFloat*, lda : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun cporfs = cporfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cporfsx = cporfsx_(uplo : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, s : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cposv = cposv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cposvx = cposvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, equed : LibC::Char*, s : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cposvxx = cposvxx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, equed : LibC::Char*, s : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, rpvgrw : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cpotf2 = cpotf2_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, info : Int32*)
    fun cpotrf = cpotrf_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, info : Int32*)
    fun cpotri = cpotri_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, info : Int32*)
    fun cpotrs = cpotrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cppcon = cppcon_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, anorm : LibC::Float*, rcond : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cppequ = cppequ_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun cpprfs = cpprfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, afp : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cppsv = cppsv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cppsvx = cppsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, afp : ComplexFloat*, equed : LibC::Char*, s : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cpptrf = cpptrf_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, info : Int32*)
    fun cpptri = cpptri_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, info : Int32*)
    fun cpptrs = cpptrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cpstf2 = cpstf2_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, piv : Int32*, rank : Int32*, tol : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun cpstrf = cpstrf_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, piv : Int32*, rank : Int32*, tol : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun cptcon = cptcon_(n : Int32*, d : LibC::Float*, e : ComplexFloat*, anorm : LibC::Float*, rcond : LibC::Float*, rwork : LibC::Float*, info : Int32*)
    fun cpteqr = cpteqr_(compz : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : LibC::Float*, info : Int32*)
    fun cptrfs = cptrfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, d : LibC::Float*, e : ComplexFloat*, df : LibC::Float*, ef : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cptsv = cptsv_(n : Int32*, nrhs : Int32*, d : LibC::Float*, e : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cptsvx = cptsvx_(fact : LibC::Char*, n : Int32*, nrhs : Int32*, d : LibC::Float*, e : ComplexFloat*, df : LibC::Float*, ef : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cpttrf = cpttrf_(n : Int32*, d : LibC::Float*, e : ComplexFloat*, info : Int32*)
    fun cpttrs = cpttrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, d : LibC::Float*, e : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cptts2 = cptts2_(iuplo : Int32*, n : Int32*, nrhs : Int32*, d__ : LibC::Float*, e : ComplexFloat*, b : ComplexFloat*, ldb : Int32*)
    fun crot = crot_(n : Int32*, cx : ComplexFloat*, incx : Int32*, cy : ComplexFloat*, incy : Int32*, c__ : LibC::Float*, s : ComplexFloat*)
    fun cspcon = cspcon_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, ipiv : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : ComplexFloat*, info : Int32*)
    fun cspmv = cspmv_(uplo : LibC::Char*, n : Int32*, alpha : ComplexFloat*, ap : ComplexFloat*, x : ComplexFloat*, incx : Int32*, beta : ComplexFloat*, y : ComplexFloat*, incy : Int32*)
    fun cspr = cspr_(uplo : LibC::Char*, n : Int32*, alpha : ComplexFloat*, x : ComplexFloat*, incx : Int32*, ap : ComplexFloat*)
    fun csprfs = csprfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, afp : ComplexFloat*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun cspsv = cspsv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun cspsvx = cspsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, afp : ComplexFloat*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun csptrf = csptrf_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, ipiv : Int32*, info : Int32*)
    fun csptri = csptri_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, ipiv : Int32*, work : ComplexFloat*, info : Int32*)
    fun csptrs = csptrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun csrscl = csrscl_(n : Int32*, sa : LibC::Float*, sx : ComplexFloat*, incx : Int32*)
    fun cstedc = cstedc_(compz : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun cstegr = cstegr_(jobz : LibC::Char*, range : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, isuppz : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun cstein = cstein_(n : Int32*, d : LibC::Float*, e : LibC::Float*, m : Int32*, w : LibC::Float*, iblock : Int32*, isplit : Int32*, z : ComplexFloat*, ldz : Int32*, work : LibC::Float*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun cstemr = cstemr_(jobz : LibC::Char*, range : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, m : Int32*, w : LibC::Float*, z : ComplexFloat*, ldz : Int32*, nzc : Int32*, isuppz : Int32*, tryrac : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun csteqr = csteqr_(compz : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, z : ComplexFloat*, ldz : Int32*, work : LibC::Float*, info : Int32*)
    fun csycon = csycon_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : ComplexFloat*, info : Int32*)
    fun csyequb = csyequb_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, work : ComplexFloat*, info : Int32*)
    fun csymv = csymv_(uplo : LibC::Char*, n : Int32*, alpha : ComplexFloat*, a : ComplexFloat*, lda : Int32*, x : ComplexFloat*, incx : Int32*, beta : ComplexFloat*, y : ComplexFloat*, incy : Int32*)
    fun csyr = csyr_(uplo : LibC::Char*, n : Int32*, alpha : ComplexFloat*, x : ComplexFloat*, incx : Int32*, a : ComplexFloat*, lda : Int32*)
    fun csyrfs = csyrfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun csyrfsx = csyrfsx_(uplo : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, s : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun csysv = csysv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun csysvx = csysvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, lwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun csysvxx = csysvxx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, af : ComplexFloat*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, s : LibC::Float*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, rcond : LibC::Float*, rpvgrw : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun csytf2 = csytf2_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun csytrf = csytrf_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun csytri = csytri_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, work : ComplexFloat*, info : Int32*)
    fun csytrs = csytrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, ipiv : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun ctbcon = ctbcon_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexFloat*, ldab : Int32*, rcond : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun ctbrfs = ctbrfs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : ComplexFloat*, ldab : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun ctbtrs = ctbtrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : ComplexFloat*, ldab : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun ctfsm = ctfsm_(transr : LibC::Char*, side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, m : Int32*, n : Int32*, alpha : ComplexFloat*, a : ComplexFloat*, b : ComplexFloat*, ldb : Int32*)
    fun ctftri = ctftri_(transr : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : ComplexFloat*, info : Int32*)
    fun ctfttp = ctfttp_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, arf : ComplexFloat*, ap : ComplexFloat*, info : Int32*)
    fun ctfttr = ctfttr_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, arf : ComplexFloat*, a : ComplexFloat*, lda : Int32*, info : Int32*)
    fun ctgevc = ctgevc_(side : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, s : ComplexFloat*, lds : Int32*, p : ComplexFloat*, ldp : Int32*, vl : ComplexFloat*, ldvl : Int32*, vr : ComplexFloat*, ldvr : Int32*, mm : Int32*, m : Int32*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun ctgex2 = ctgex2_(wantq : LibC::Char*, wantz : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, q : ComplexFloat*, ldq : Int32*, z__ : ComplexFloat*, ldz : Int32*, j1 : Int32*, info : Int32*)
    fun ctgexc = ctgexc_(wantq : Int32*, wantz : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, q : ComplexFloat*, ldq : Int32*, z : ComplexFloat*, ldz : Int32*, ifst : Int32*, ilst : Int32*, info : Int32*)
    fun ctgsen = ctgsen_(ijob : Int32*, wantq : Int32*, wantz : Int32*, select : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, alpha : ComplexFloat*, beta : ComplexFloat*, q : ComplexFloat*, ldq : Int32*, z : ComplexFloat*, ldz : Int32*, m : Int32*, pl : LibC::Float*, pr : LibC::Float*, dif : LibC::Float*, work : ComplexFloat*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun ctgsja = ctgsja_(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Int32*, p : Int32*, n : Int32*, k : Int32*, l : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, tola : LibC::Float*, tolb : LibC::Float*, alpha : LibC::Float*, beta : LibC::Float*, u : ComplexFloat*, ldu : Int32*, v : ComplexFloat*, ldv : Int32*, q : ComplexFloat*, ldq : Int32*, work : ComplexFloat*, ncycle : Int32*, info : Int32*)
    fun ctgsna = ctgsna_(job : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, vl : ComplexFloat*, ldvl : Int32*, vr : ComplexFloat*, ldvr : Int32*, s : LibC::Float*, dif : LibC::Float*, mm : Int32*, m : Int32*, work : ComplexFloat*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun ctgsy2 = ctgsy2_(trans : LibC::Char*, ijob : Int32*, m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, c__ : ComplexFloat*, ldc : Int32*, d__ : ComplexFloat*, ldd : Int32*, e : ComplexFloat*, lde : Int32*, f : ComplexFloat*, ldf : Int32*, scale : LibC::Float*, rdsum : LibC::Float*, rdscal : LibC::Float*, info : Int32*)
    fun ctgsyl = ctgsyl_(trans : LibC::Char*, ijob : Int32*, m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, c : ComplexFloat*, ldc : Int32*, d : ComplexFloat*, ldd : Int32*, e : ComplexFloat*, lde : Int32*, f : ComplexFloat*, ldf : Int32*, dif : LibC::Float*, scale : LibC::Float*, work : ComplexFloat*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun ctpcon = ctpcon_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, ap : ComplexFloat*, rcond : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun ctprfs = ctprfs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun ctptri = ctptri_(uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, ap : ComplexFloat*, info : Int32*)
    fun ctptrs = ctptrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexFloat*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun ctpttf = ctpttf_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, arf : ComplexFloat*, info : Int32*)
    fun ctpttr = ctpttr_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, a : ComplexFloat*, lda : Int32*, info : Int32*)
    fun ctrcon = ctrcon_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, rcond : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun ctrevc = ctrevc_(side : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, t : ComplexFloat*, ldt : Int32*, vl : ComplexFloat*, ldvl : Int32*, vr : ComplexFloat*, ldvr : Int32*, mm : Int32*, m : Int32*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun ctrexc = ctrexc_(compq : LibC::Char*, n : Int32*, t : ComplexFloat*, ldt : Int32*, q : ComplexFloat*, ldq : Int32*, ifst : Int32*, ilst : Int32*, info : Int32*)
    fun ctrrfs = ctrrfs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, x : ComplexFloat*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : ComplexFloat*, rwork : LibC::Float*, info : Int32*)
    fun ctrsen = ctrsen_(job : LibC::Char*, compq : LibC::Char*, select : Int32*, n : Int32*, t : ComplexFloat*, ldt : Int32*, q : ComplexFloat*, ldq : Int32*, w : ComplexFloat*, m : Int32*, s : LibC::Float*, sep : LibC::Float*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun ctrsna = ctrsna_(job : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, t : ComplexFloat*, ldt : Int32*, vl : ComplexFloat*, ldvl : Int32*, vr : ComplexFloat*, ldvr : Int32*, s : LibC::Float*, sep : LibC::Float*, mm : Int32*, m : Int32*, work : ComplexFloat*, ldwork : Int32*, rwork : LibC::Float*, info : Int32*)
    fun ctrsyl = ctrsyl_(trana : LibC::Char*, tranb : LibC::Char*, isgn : Int32*, m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, c : ComplexFloat*, ldc : Int32*, scale : LibC::Float*, info : Int32*)
    fun ctrti2 = ctrti2_(uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, info : Int32*)
    fun ctrtri = ctrtri_(uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, info : Int32*)
    fun ctrtrs = ctrtrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexFloat*, lda : Int32*, b : ComplexFloat*, ldb : Int32*, info : Int32*)
    fun ctrttf = ctrttf_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, arf : ComplexFloat*, info : Int32*)
    fun ctrttp = ctrttp_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, ap : ComplexFloat*, info : Int32*)
    fun ctzrqf = ctzrqf_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, info : Int32*)
    fun ctzrzf = ctzrzf_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cung2l = cung2l_(m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, info : Int32*)
    fun cung2r = cung2r_(m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, info : Int32*)
    fun cungbr = cungbr_(vect : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cunghr = cunghr_(n : Int32*, ilo : Int32*, ihi : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cungl2 = cungl2_(m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, info : Int32*)
    fun cunglq = cunglq_(m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cungql = cungql_(m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cungqr = cungqr_(m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cungr2 = cungr2_(m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, info : Int32*)
    fun cungrq = cungrq_(m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cungtr = cungtr_(uplo : LibC::Char*, n : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cunm2l = cunm2l_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, c__ : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, info : Int32*)
    fun cunm2r = cunm2r_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, c__ : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, info : Int32*)
    fun cunmbr = cunmbr_(vect : LibC::Char*, side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cunmhr = cunmhr_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, ilo : Int32*, ihi : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cunml2 = cunml2_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, c__ : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, info : Int32*)
    fun cunmlq = cunmlq_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cunmql = cunmql_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cunmqr = cunmqr_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cunmr2 = cunmr2_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, c__ : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, info : Int32*)
    fun cunmr3 = cunmr3_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, l : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, c__ : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, info : Int32*)
    fun cunmrq = cunmrq_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cunmrz = cunmrz_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, l : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cunmtr = cunmtr_(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, lwork : Int32*, info : Int32*)
    fun cupgtr = cupgtr_(uplo : LibC::Char*, n : Int32*, ap : ComplexFloat*, tau : ComplexFloat*, q : ComplexFloat*, ldq : Int32*, work : ComplexFloat*, info : Int32*)
    fun cupmtr = cupmtr_(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, ap : ComplexFloat*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int32*, work : ComplexFloat*, info : Int32*)
    fun dbdsdc = dbdsdc_(uplo : LibC::Char*, compq : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, u : LibC::Double*, ldu : Int32*, vt : LibC::Double*, ldvt : Int32*, q : LibC::Double*, iq : Int32*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dbdsqr = dbdsqr_(uplo : LibC::Char*, n : Int32*, ncvt : Int32*, nru : Int32*, ncc : Int32*, d : LibC::Double*, e : LibC::Double*, vt : LibC::Double*, ldvt : Int32*, u : LibC::Double*, ldu : Int32*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*, info : Int32*)
    fun ddisna = ddisna_(job : LibC::Char*, m : Int32*, n : Int32*, d : LibC::Double*, sep : LibC::Double*, info : Int32*)
    fun dgbbrd = dgbbrd_(vect : LibC::Char*, m : Int32*, n : Int32*, ncc : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Double*, ldab : Int32*, d : LibC::Double*, e : LibC::Double*, q : LibC::Double*, ldq : Int32*, pt : LibC::Double*, ldpt : Int32*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*, info : Int32*)
    fun dgbcon = dgbcon_(norm : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Double*, ldab : Int32*, ipiv : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dgbequ = dgbequ_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Double*, ldab : Int32*, r : LibC::Double*, c : LibC::Double*, rowcnd : LibC::Double*, colcnd : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun dgbequb = dgbequb_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Double*, ldab : Int32*, r : LibC::Double*, c : LibC::Double*, rowcnd : LibC::Double*, colcnd : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun dgbrfs = dgbrfs_(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Double*, ldab : Int32*, afb : LibC::Double*, ldafb : Int32*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dgbrfsx = dgbrfsx_(trans : LibC::Char*, equed : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Double*, ldab : Int32*, afb : LibC::Double*, ldafb : Int32*, ipiv : Int32*, r : LibC::Double*, c : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dgbsv = dgbsv_(n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Double*, ldab : Int32*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dgbsvx = dgbsvx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Double*, ldab : Int32*, afb : LibC::Double*, ldafb : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Double*, c : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dgbsvxx = dgbsvxx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Double*, ldab : Int32*, afb : LibC::Double*, ldafb : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Double*, c : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, rpvgrw : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dgbtf2 = dgbtf2_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Double*, ldab : Int32*, ipiv : Int32*, info : Int32*)
    fun dgbtrf = dgbtrf_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Double*, ldab : Int32*, ipiv : Int32*, info : Int32*)
    fun dgbtrs = dgbtrs_(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Double*, ldab : Int32*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dgebak = dgebak_(job : LibC::Char*, side : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, scale : LibC::Double*, m : Int32*, v : LibC::Double*, ldv : Int32*, info : Int32*)
    fun dgebal = dgebal_(job : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, ilo : Int32*, ihi : Int32*, scale : LibC::Double*, info : Int32*)
    fun dgebd2 = dgebd2_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, d__ : LibC::Double*, e : LibC::Double*, tauq : LibC::Double*, taup : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dgebrd = dgebrd_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, d : LibC::Double*, e : LibC::Double*, tauq : LibC::Double*, taup : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgecon = dgecon_(norm : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dgeequ = dgeequ_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, r : LibC::Double*, c : LibC::Double*, rowcnd : LibC::Double*, colcnd : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun dgeequb = dgeequb_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, r : LibC::Double*, c : LibC::Double*, rowcnd : LibC::Double*, colcnd : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun dgees = dgees_(jobvs : LibC::Char*, sort : LibC::Char*, select : LapackDSelect2, n : Int32*, a : LibC::Double*, lda : Int32*, sdim : Int32*, wr : LibC::Double*, wi : LibC::Double*, vs : LibC::Double*, ldvs : Int32*, work : LibC::Double*, lwork : Int32*, bwork : Int32*, info : Int32*)
    fun dgeesx = dgeesx_(jobvs : LibC::Char*, sort : LibC::Char*, select : LapackDSelect2, sense : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, sdim : Int32*, wr : LibC::Double*, wi : LibC::Double*, vs : LibC::Double*, ldvs : Int32*, rconde : LibC::Double*, rcondv : LibC::Double*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, bwork : Int32*, info : Int32*)
    fun dgeev = dgeev_(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, wr : LibC::Double*, wi : LibC::Double*, vl : LibC::Double*, ldvl : Int32*, vr : LibC::Double*, ldvr : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgeevx = dgeevx_(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, wr : LibC::Double*, wi : LibC::Double*, vl : LibC::Double*, ldvl : Int32*, vr : LibC::Double*, ldvr : Int32*, ilo : Int32*, ihi : Int32*, scale : LibC::Double*, abnrm : LibC::Double*, rconde : LibC::Double*, rcondv : LibC::Double*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun dgegs = dgegs_(jobvsl : LibC::Char*, jobvsr : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, alphar : LibC::Double*, alphai : LibC::Double*, beta : LibC::Double*, vsl : LibC::Double*, ldvsl : Int32*, vsr : LibC::Double*, ldvsr : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgegv = dgegv_(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, alphar : LibC::Double*, alphai : LibC::Double*, beta : LibC::Double*, vl : LibC::Double*, ldvl : Int32*, vr : LibC::Double*, ldvr : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgehd2 = dgehd2_(n : Int32*, ilo : Int32*, ihi : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dgehrd = dgehrd_(n : Int32*, ilo : Int32*, ihi : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgejsv = dgejsv_(joba : LibC::Char*, jobu : LibC::Char*, jobv : LibC::Char*, jobr : LibC::Char*, jobt : LibC::Char*, jobp : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, sva : LibC::Double*, u : LibC::Double*, ldu : Int32*, v : LibC::Double*, ldv : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun dgelq2 = dgelq2_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dgelqf = dgelqf_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgels = dgels_(trans : LibC::Char*, m : Int32*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgelsd = dgelsd_(m : Int32*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, s : LibC::Double*, rcond : LibC::Double*, rank : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun dgelss = dgelss_(m : Int32*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, s : LibC::Double*, rcond : LibC::Double*, rank : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgelsx = dgelsx_(m : Int32*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, jpvt : Int32*, rcond : LibC::Double*, rank : Int32*, work : LibC::Double*, info : Int32*)
    fun dgelsy = dgelsy_(m : Int32*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, jpvt : Int32*, rcond : LibC::Double*, rank : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgeql2 = dgeql2_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dgeqlf = dgeqlf_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgeqp3 = dgeqp3_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, jpvt : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgeqpf = dgeqpf_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, jpvt : Int32*, tau : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dgeqr2 = dgeqr2_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dgeqrf = dgeqrf_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgerfs = dgerfs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dgerfsx = dgerfsx_(trans : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, ipiv : Int32*, r : LibC::Double*, c : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dgerq2 = dgerq2_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dgerqf = dgerqf_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgesc2 = dgesc2_(n : Int32*, a : LibC::Double*, lda : Int32*, rhs : LibC::Double*, ipiv : Int32*, jpiv : Int32*, scale : LibC::Double*)
    fun dgesdd = dgesdd_(jobz : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, s : LibC::Double*, u : LibC::Double*, ldu : Int32*, vt : LibC::Double*, ldvt : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun dgesv = dgesv_(n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dgesvd = dgesvd_(jobu : LibC::Char*, jobvt : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, s : LibC::Double*, u : LibC::Double*, ldu : Int32*, vt : LibC::Double*, ldvt : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgesvj = dgesvj_(joba : LibC::Char*, jobu : LibC::Char*, jobv : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, sva : LibC::Double*, mv : Int32*, v : LibC::Double*, ldv : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgesvx = dgesvx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Double*, c : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dgesvxx = dgesvxx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Double*, c : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, rpvgrw : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dgetc2 = dgetc2_(n : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, jpiv : Int32*, info : Int32*)
    fun dgetf2 = dgetf2_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun dgetrf = dgetrf_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun dgetri = dgetri_(n : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgetrs = dgetrs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dggbak = dggbak_(job : LibC::Char*, side : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, lscale : LibC::Double*, rscale : LibC::Double*, m : Int32*, v : LibC::Double*, ldv : Int32*, info : Int32*)
    fun dggbal = dggbal_(job : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, ilo : Int32*, ihi : Int32*, lscale : LibC::Double*, rscale : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dgges = dgges_(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LapackDSelect3, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, sdim : Int32*, alphar : LibC::Double*, alphai : LibC::Double*, beta : LibC::Double*, vsl : LibC::Double*, ldvsl : Int32*, vsr : LibC::Double*, ldvsr : Int32*, work : LibC::Double*, lwork : Int32*, bwork : Int32*, info : Int32*)
    fun dggesx = dggesx_(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LapackDSelect3, sense : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, sdim : Int32*, alphar : LibC::Double*, alphai : LibC::Double*, beta : LibC::Double*, vsl : LibC::Double*, ldvsl : Int32*, vsr : LibC::Double*, ldvsr : Int32*, rconde : LibC::Double*, rcondv : LibC::Double*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, bwork : Int32*, info : Int32*)
    fun dggev = dggev_(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, alphar : LibC::Double*, alphai : LibC::Double*, beta : LibC::Double*, vl : LibC::Double*, ldvl : Int32*, vr : LibC::Double*, ldvr : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dggevx = dggevx_(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, alphar : LibC::Double*, alphai : LibC::Double*, beta : LibC::Double*, vl : LibC::Double*, ldvl : Int32*, vr : LibC::Double*, ldvr : Int32*, ilo : Int32*, ihi : Int32*, lscale : LibC::Double*, rscale : LibC::Double*, abnrm : LibC::Double*, bbnrm : LibC::Double*, rconde : LibC::Double*, rcondv : LibC::Double*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, bwork : Int32*, info : Int32*)
    fun dggglm = dggglm_(n : Int32*, m : Int32*, p : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, d : LibC::Double*, x : LibC::Double*, y : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgghrd = dgghrd_(compq : LibC::Char*, compz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, q : LibC::Double*, ldq : Int32*, z : LibC::Double*, ldz : Int32*, info : Int32*)
    fun dgglse = dgglse_(m : Int32*, n : Int32*, p : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, c : LibC::Double*, d : LibC::Double*, x : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dggqrf = dggqrf_(n : Int32*, m : Int32*, p : Int32*, a : LibC::Double*, lda : Int32*, taua : LibC::Double*, b : LibC::Double*, ldb : Int32*, taub : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dggrqf = dggrqf_(m : Int32*, p : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, taua : LibC::Double*, b : LibC::Double*, ldb : Int32*, taub : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dggsvd = dggsvd_(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Int32*, n : Int32*, p : Int32*, k : Int32*, l : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, alpha : LibC::Double*, beta : LibC::Double*, u : LibC::Double*, ldu : Int32*, v : LibC::Double*, ldv : Int32*, q : LibC::Double*, ldq : Int32*, work : LibC::Double*, iwork : Int32*, info : Int32*) : Int32
    fun dggsvp = dggsvp_(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Int32*, p : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, tola : LibC::Double*, tolb : LibC::Double*, k : Int32*, l : Int32*, u : LibC::Double*, ldu : Int32*, v : LibC::Double*, ldv : Int32*, q : LibC::Double*, ldq : Int32*, iwork : Int32*, tau : LibC::Double*, work : LibC::Double*, info : Int32*) : Int32
    fun dgsvj0 = dgsvj0_(jobv : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, d__ : LibC::Double*, sva : LibC::Double*, mv : Int32*, v : LibC::Double*, ldv : Int32*, eps : LibC::Double*, sfmin : LibC::Double*, tol : LibC::Double*, nsweep : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgsvj1 = dgsvj1_(jobv : LibC::Char*, m : Int32*, n : Int32*, n1 : Int32*, a : LibC::Double*, lda : Int32*, d__ : LibC::Double*, sva : LibC::Double*, mv : Int32*, v : LibC::Double*, ldv : Int32*, eps : LibC::Double*, sfmin : LibC::Double*, tol : LibC::Double*, nsweep : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dgtcon = dgtcon_(norm : LibC::Char*, n : Int32*, dl : LibC::Double*, d : LibC::Double*, du : LibC::Double*, du2 : LibC::Double*, ipiv : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dgtrfs = dgtrfs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, dl : LibC::Double*, d : LibC::Double*, du : LibC::Double*, dlf : LibC::Double*, df : LibC::Double*, duf : LibC::Double*, du2 : LibC::Double*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dgtsv = dgtsv_(n : Int32*, nrhs : Int32*, dl : LibC::Double*, d : LibC::Double*, du : LibC::Double*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dgtsvx = dgtsvx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, nrhs : Int32*, dl : LibC::Double*, d : LibC::Double*, du : LibC::Double*, dlf : LibC::Double*, df : LibC::Double*, duf : LibC::Double*, du2 : LibC::Double*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dgttrf = dgttrf_(n : Int32*, dl : LibC::Double*, d : LibC::Double*, du : LibC::Double*, du2 : LibC::Double*, ipiv : Int32*, info : Int32*)
    fun dgttrs = dgttrs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, dl : LibC::Double*, d : LibC::Double*, du : LibC::Double*, du2 : LibC::Double*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dgtts2 = dgtts2_(itrans : Int32*, n : Int32*, nrhs : Int32*, dl : LibC::Double*, d__ : LibC::Double*, du : LibC::Double*, du2 : LibC::Double*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*)
    fun dhgeqz = dhgeqz_(job : LibC::Char*, compq : LibC::Char*, compz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h : LibC::Double*, ldh : Int32*, t : LibC::Double*, ldt : Int32*, alphar : LibC::Double*, alphai : LibC::Double*, beta : LibC::Double*, q : LibC::Double*, ldq : Int32*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dhsein = dhsein_(side : LibC::Char*, eigsrc : LibC::Char*, initv : LibC::Char*, select : Int32*, n : Int32*, h : LibC::Double*, ldh : Int32*, wr : LibC::Double*, wi : LibC::Double*, vl : LibC::Double*, ldvl : Int32*, vr : LibC::Double*, ldvr : Int32*, mm : Int32*, m : Int32*, work : LibC::Double*, ifaill : Int32*, ifailr : Int32*, info : Int32*)
    fun dhseqr = dhseqr_(job : LibC::Char*, compz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h : LibC::Double*, ldh : Int32*, wr : LibC::Double*, wi : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun disnan = disnan_(din : LibC::Double*) : LibC::Char
    fun dla_gbamv_ = dla_gbamv__(trans : Int32*, m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, alpha : LibC::Double*, ab : LibC::Double*, ldab : Int32*, x : LibC::Double*, incx : Int32*, beta : LibC::Double*, y : LibC::Double*, incy : Int32*)
    fun dla_gbrcond_ = dla_gbrcond__(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Double*, ldab : Int32*, afb : LibC::Double*, ldafb : Int32*, ipiv : Int32*, cmode : Int32*, c__ : LibC::Double*, info : Int32*, work : LibC::Double*, iwork : Int32*, trans_len : LibC::Int) : LibC::Double
    fun dla_gbrfsx_extended_ = dla_gbrfsx_extended__(prec_type__ : Int32*, trans_type__ : Int32*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Double*, ldab : Int32*, afb : LibC::Double*, ldafb : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Double*, b : LibC::Double*, ldb : Int32*, y : LibC::Double*, ldy : Int32*, berr_out__ : LibC::Double*, n_norms__ : Int32*, errs_n__ : LibC::Double*, errs_c__ : LibC::Double*, res : LibC::Double*, ayb : LibC::Double*, dy : LibC::Double*, y_tail__ : LibC::Double*, rcond : LibC::Double*, ithresh : Int32*, rthresh : LibC::Double*, dz_ub__ : LibC::Double*, ignore_cwise__ : LibC::Char*, info : Int32*)
    fun dla_gbrpvgrw_ = dla_gbrpvgrw__(n : Int32*, kl : Int32*, ku : Int32*, ncols : Int32*, ab : LibC::Double*, ldab : Int32*, afb : LibC::Double*, ldafb : Int32*) : LibC::Double
    fun dla_geamv_ = dla_geamv__(trans : Int32*, m : Int32*, n : Int32*, alpha : LibC::Double*, a : LibC::Double*, lda : Int32*, x : LibC::Double*, incx : Int32*, beta : LibC::Double*, y : LibC::Double*, incy : Int32*)
    fun dla_gercond_ = dla_gercond__(trans : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, ipiv : Int32*, cmode : Int32*, c__ : LibC::Double*, info : Int32*, work : LibC::Double*, iwork : Int32*, trans_len : LibC::Int) : LibC::Double
    fun dla_gerfsx_extended_ = dla_gerfsx_extended__(prec_type__ : Int32*, trans_type__ : Int32*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Double*, b : LibC::Double*, ldb : Int32*, y : LibC::Double*, ldy : Int32*, berr_out__ : LibC::Double*, n_norms__ : Int32*, errs_n__ : LibC::Double*, errs_c__ : LibC::Double*, res : LibC::Double*, ayb : LibC::Double*, dy : LibC::Double*, y_tail__ : LibC::Double*, rcond : LibC::Double*, ithresh : Int32*, rthresh : LibC::Double*, dz_ub__ : LibC::Double*, ignore_cwise__ : LibC::Char*, info : Int32*)
    fun dla_lin_berr_ = dla_lin_berr__(n : Int32*, nz : Int32*, nrhs : Int32*, res : LibC::Double*, ayb : LibC::Double*, berr : LibC::Double*)
    fun dla_porcond_ = dla_porcond__(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, cmode : Int32*, c__ : LibC::Double*, info : Int32*, work : LibC::Double*, iwork : Int32*, uplo_len : LibC::Int) : LibC::Double
    fun dla_porfsx_extended_ = dla_porfsx_extended__(prec_type__ : Int32*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, colequ : LibC::Char*, c__ : LibC::Double*, b : LibC::Double*, ldb : Int32*, y : LibC::Double*, ldy : Int32*, berr_out__ : LibC::Double*, n_norms__ : Int32*, errs_n__ : LibC::Double*, errs_c__ : LibC::Double*, res : LibC::Double*, ayb : LibC::Double*, dy : LibC::Double*, y_tail__ : LibC::Double*, rcond : LibC::Double*, ithresh : Int32*, rthresh : LibC::Double*, dz_ub__ : LibC::Double*, ignore_cwise__ : LibC::Char*, info : Int32*, uplo_len : LibC::Int)
    fun dla_porpvgrw_ = dla_porpvgrw__(uplo : LibC::Char*, ncols : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, work : LibC::Double*, uplo_len : LibC::Int) : LibC::Double
    fun dla_rpvgrw_ = dla_rpvgrw__(n : Int32*, ncols : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*) : LibC::Double
    fun dla_syamv_ = dla_syamv__(uplo : Int32*, n : Int32*, alpha : LibC::Double*, a : LibC::Double*, lda : Int32*, x : LibC::Double*, incx : Int32*, beta : LibC::Double*, y : LibC::Double*, incy : Int32*)
    fun dla_syrcond_ = dla_syrcond__(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, ipiv : Int32*, cmode : Int32*, c__ : LibC::Double*, info : Int32*, work : LibC::Double*, iwork : Int32*, uplo_len : LibC::Int) : LibC::Double
    fun dla_syrfsx_extended_ = dla_syrfsx_extended__(prec_type__ : Int32*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Double*, b : LibC::Double*, ldb : Int32*, y : LibC::Double*, ldy : Int32*, berr_out__ : LibC::Double*, n_norms__ : Int32*, errs_n__ : LibC::Double*, errs_c__ : LibC::Double*, res : LibC::Double*, ayb : LibC::Double*, dy : LibC::Double*, y_tail__ : LibC::Double*, rcond : LibC::Double*, ithresh : Int32*, rthresh : LibC::Double*, dz_ub__ : LibC::Double*, ignore_cwise__ : LibC::Char*, info : Int32*, uplo_len : LibC::Int)
    fun dla_syrpvgrw_ = dla_syrpvgrw__(uplo : LibC::Char*, n : Int32*, info : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, ipiv : Int32*, work : LibC::Double*, uplo_len : LibC::Int) : LibC::Double
    fun dla_wwaddw_ = dla_wwaddw__(n : Int32*, x : LibC::Double*, y : LibC::Double*, w : LibC::Double*)
    fun dlabad = dlabad_(small : LibC::Double*, large : LibC::Double*)
    fun dlabrd = dlabrd_(m : Int32*, n : Int32*, nb : Int32*, a : LibC::Double*, lda : Int32*, d__ : LibC::Double*, e : LibC::Double*, tauq : LibC::Double*, taup : LibC::Double*, x : LibC::Double*, ldx : Int32*, y : LibC::Double*, ldy : Int32*)
    fun dlacn2 = dlacn2_(n : Int32*, v : LibC::Double*, x : LibC::Double*, isgn : Int32*, est : LibC::Double*, kase : Int32*, isave : Int32*)
    fun dlacon = dlacon_(n : Int32*, v : LibC::Double*, x : LibC::Double*, isgn : Int32*, est : LibC::Double*, kase : Int32*)
    fun dlacpy = dlacpy_(uplo : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*)
    fun dladiv = dladiv_(a : LibC::Double*, b : LibC::Double*, c__ : LibC::Double*, d__ : LibC::Double*, p : LibC::Double*, q : LibC::Double*)
    fun dlae2 = dlae2_(a : LibC::Double*, b : LibC::Double*, c__ : LibC::Double*, rt1 : LibC::Double*, rt2 : LibC::Double*)
    fun dlaebz = dlaebz_(ijob : Int32*, nitmax : Int32*, n : Int32*, mmax : Int32*, minp : Int32*, nbmin : Int32*, abstol : LibC::Double*, reltol : LibC::Double*, pivmin : LibC::Double*, d__ : LibC::Double*, e : LibC::Double*, e2 : LibC::Double*, nval : Int32*, ab : LibC::Double*, c__ : LibC::Double*, mout : Int32*, nab : Int32*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dlaed0 = dlaed0_(icompq : Int32*, qsiz : Int32*, n : Int32*, d__ : LibC::Double*, e : LibC::Double*, q : LibC::Double*, ldq : Int32*, qstore : LibC::Double*, ldqs : Int32*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dlaed1 = dlaed1_(n : Int32*, d__ : LibC::Double*, q : LibC::Double*, ldq : Int32*, indxq : Int32*, rho : LibC::Double*, cutpnt : Int32*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dlaed2 = dlaed2_(k : Int32*, n : Int32*, n1 : Int32*, d__ : LibC::Double*, q : LibC::Double*, ldq : Int32*, indxq : Int32*, rho : LibC::Double*, z__ : LibC::Double*, dlamda : LibC::Double*, w : LibC::Double*, q2 : LibC::Double*, indx : Int32*, indxc : Int32*, indxp : Int32*, coltyp : Int32*, info : Int32*)
    fun dlaed3 = dlaed3_(k : Int32*, n : Int32*, n1 : Int32*, d__ : LibC::Double*, q : LibC::Double*, ldq : Int32*, rho : LibC::Double*, dlamda : LibC::Double*, q2 : LibC::Double*, indx : Int32*, ctot : Int32*, w : LibC::Double*, s : LibC::Double*, info : Int32*)
    fun dlaed4 = dlaed4_(n : Int32*, i__ : Int32*, d__ : LibC::Double*, z__ : LibC::Double*, delta : LibC::Double*, rho : LibC::Double*, dlam : LibC::Double*, info : Int32*)
    fun dlaed5 = dlaed5_(i__ : Int32*, d__ : LibC::Double*, z__ : LibC::Double*, delta : LibC::Double*, rho : LibC::Double*, dlam : LibC::Double*)
    fun dlaed6 = dlaed6_(kniter : Int32*, orgati : LibC::Char*, rho : LibC::Double*, d__ : LibC::Double*, z__ : LibC::Double*, finit : LibC::Double*, tau : LibC::Double*, info : Int32*)
    fun dlaed7 = dlaed7_(icompq : Int32*, n : Int32*, qsiz : Int32*, tlvls : Int32*, curlvl : Int32*, curpbm : Int32*, d__ : LibC::Double*, q : LibC::Double*, ldq : Int32*, indxq : Int32*, rho : LibC::Double*, cutpnt : Int32*, qstore : LibC::Double*, qptr : Int32*, prmptr : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, givnum : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dlaed8 = dlaed8_(icompq : Int32*, k : Int32*, n : Int32*, qsiz : Int32*, d__ : LibC::Double*, q : LibC::Double*, ldq : Int32*, indxq : Int32*, rho : LibC::Double*, cutpnt : Int32*, z__ : LibC::Double*, dlamda : LibC::Double*, q2 : LibC::Double*, ldq2 : Int32*, w : LibC::Double*, perm : Int32*, givptr : Int32*, givcol : Int32*, givnum : LibC::Double*, indxp : Int32*, indx : Int32*, info : Int32*)
    fun dlaed9 = dlaed9_(k : Int32*, kstart : Int32*, kstop : Int32*, n : Int32*, d__ : LibC::Double*, q : LibC::Double*, ldq : Int32*, rho : LibC::Double*, dlamda : LibC::Double*, w : LibC::Double*, s : LibC::Double*, lds : Int32*, info : Int32*)
    fun dlaeda = dlaeda_(n : Int32*, tlvls : Int32*, curlvl : Int32*, curpbm : Int32*, prmptr : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, givnum : LibC::Double*, q : LibC::Double*, qptr : Int32*, z__ : LibC::Double*, ztemp : LibC::Double*, info : Int32*)
    fun dlaein = dlaein_(rightv : LibC::Char*, noinit : LibC::Char*, n : Int32*, h__ : LibC::Double*, ldh : Int32*, wr : LibC::Double*, wi : LibC::Double*, vr : LibC::Double*, vi : LibC::Double*, b : LibC::Double*, ldb : Int32*, work : LibC::Double*, eps3 : LibC::Double*, smlnum : LibC::Double*, bignum : LibC::Double*, info : Int32*)
    fun dlaev2 = dlaev2_(a : LibC::Double*, b : LibC::Double*, c__ : LibC::Double*, rt1 : LibC::Double*, rt2 : LibC::Double*, cs1 : LibC::Double*, sn1 : LibC::Double*)
    fun dlaexc = dlaexc_(wantq : LibC::Char*, n : Int32*, t : LibC::Double*, ldt : Int32*, q : LibC::Double*, ldq : Int32*, j1 : Int32*, n1 : Int32*, n2 : Int32*, work : LibC::Double*, info : Int32*)
    fun dlag2 = dlag2_(a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, safmin : LibC::Double*, scale1 : LibC::Double*, scale2 : LibC::Double*, wr1 : LibC::Double*, wr2 : LibC::Double*, wi : LibC::Double*)
    fun dlag2s = dlag2s_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, sa : LibC::Float*, ldsa : Int32*, info : Int32*)
    fun dlags2 = dlags2_(upper : LibC::Char*, a1 : LibC::Double*, a2 : LibC::Double*, a3 : LibC::Double*, b1 : LibC::Double*, b2 : LibC::Double*, b3 : LibC::Double*, csu : LibC::Double*, snu : LibC::Double*, csv : LibC::Double*, snv : LibC::Double*, csq : LibC::Double*, snq : LibC::Double*)
    fun dlagtf = dlagtf_(n : Int32*, a : LibC::Double*, lambda : LibC::Double*, b : LibC::Double*, c__ : LibC::Double*, tol : LibC::Double*, d__ : LibC::Double*, in : Int32*, info : Int32*)
    fun dlagtm = dlagtm_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, alpha : LibC::Double*, dl : LibC::Double*, d__ : LibC::Double*, du : LibC::Double*, x : LibC::Double*, ldx : Int32*, beta : LibC::Double*, b : LibC::Double*, ldb : Int32*)
    fun dlagts = dlagts_(job : Int32*, n : Int32*, a : LibC::Double*, b : LibC::Double*, c__ : LibC::Double*, d__ : LibC::Double*, in : Int32*, y : LibC::Double*, tol : LibC::Double*, info : Int32*)
    fun dlagv2 = dlagv2_(a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, alphar : LibC::Double*, alphai : LibC::Double*, beta : LibC::Double*, csl : LibC::Double*, snl : LibC::Double*, csr : LibC::Double*, snr : LibC::Double*)
    fun dlahqr = dlahqr_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h__ : LibC::Double*, ldh : Int32*, wr : LibC::Double*, wi : LibC::Double*, iloz : Int32*, ihiz : Int32*, z__ : LibC::Double*, ldz : Int32*, info : Int32*)
    fun dlahr2 = dlahr2_(n : Int32*, k : Int32*, nb : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, t : LibC::Double*, ldt : Int32*, y : LibC::Double*, ldy : Int32*)
    fun dlahrd = dlahrd_(n : Int32*, k : Int32*, nb : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, t : LibC::Double*, ldt : Int32*, y : LibC::Double*, ldy : Int32*)
    fun dlaic1 = dlaic1_(job : Int32*, j : Int32*, x : LibC::Double*, sest : LibC::Double*, w : LibC::Double*, gamma : LibC::Double*, sestpr : LibC::Double*, s : LibC::Double*, c__ : LibC::Double*)
    fun dlaisnan = dlaisnan_(din1 : LibC::Double*, din2 : LibC::Double*) : LibC::Char
    fun dlaln2 = dlaln2_(ltrans : LibC::Char*, na : Int32*, nw : Int32*, smin : LibC::Double*, ca : LibC::Double*, a : LibC::Double*, lda : Int32*, d1 : LibC::Double*, d2 : LibC::Double*, b : LibC::Double*, ldb : Int32*, wr : LibC::Double*, wi : LibC::Double*, x : LibC::Double*, ldx : Int32*, scale : LibC::Double*, xnorm : LibC::Double*, info : Int32*)
    fun dlals0 = dlals0_(icompq : Int32*, nl : Int32*, nr : Int32*, sqre : Int32*, nrhs : Int32*, b : LibC::Double*, ldb : Int32*, bx : LibC::Double*, ldbx : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, givnum : LibC::Double*, ldgnum : Int32*, poles : LibC::Double*, difl : LibC::Double*, difr : LibC::Double*, z__ : LibC::Double*, k : Int32*, c__ : LibC::Double*, s : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dlalsa = dlalsa_(icompq : Int32*, smlsiz : Int32*, n : Int32*, nrhs : Int32*, b : LibC::Double*, ldb : Int32*, bx : LibC::Double*, ldbx : Int32*, u : LibC::Double*, ldu : Int32*, vt : LibC::Double*, k : Int32*, difl : LibC::Double*, difr : LibC::Double*, z__ : LibC::Double*, poles : LibC::Double*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, perm : Int32*, givnum : LibC::Double*, c__ : LibC::Double*, s : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dlalsd = dlalsd_(uplo : LibC::Char*, smlsiz : Int32*, n : Int32*, nrhs : Int32*, d__ : LibC::Double*, e : LibC::Double*, b : LibC::Double*, ldb : Int32*, rcond : LibC::Double*, rank : Int32*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dlamc1 = dlamc1_(beta : Int32*, t : Int32*, rnd : LibC::Char*, ieee1 : LibC::Char*)
    fun dlamc2 = dlamc2_(beta : Int32*, t : Int32*, rnd : LibC::Char*, eps : LibC::Double*, emin : Int32*, rmin : LibC::Double*, emax : Int32*, rmax : LibC::Double*)
    fun dlamc3 = dlamc3_(a : LibC::Double*, b : LibC::Double*) : LibC::Double
    fun dlamc4 = dlamc4_(emin : Int32*, start : LibC::Double*, base : Int32*)
    fun dlamc5 = dlamc5_(beta : Int32*, p : Int32*, emin : Int32*, ieee : LibC::Char*, emax : Int32*, rmax : LibC::Double*)
    fun dlamch = dlamch_(cmach : LibC::Char*) : LibC::Double
    fun dlamrg = dlamrg_(n1 : Int32*, n2 : Int32*, a : LibC::Double*, dtrd1 : Int32*, dtrd2 : Int32*, index : Int32*)
    fun dlaneg = dlaneg_(n : Int32*, d__ : LibC::Double*, lld : LibC::Double*, sigma : LibC::Double*, pivmin : LibC::Double*, r__ : Int32*) : Int32
    fun dlangb = dlangb_(norm : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Double*, ldab : Int32*, work : LibC::Double*) : LibC::Double
    fun dlange = dlange_(norm : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, work : LibC::Double*) : LibC::Double
    fun dlangt = dlangt_(norm : LibC::Char*, n : Int32*, dl : LibC::Double*, d : LibC::Double*, du : LibC::Double*) : LibC::Double
    fun dlanhs = dlanhs_(norm : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, work : LibC::Double*) : LibC::Double
    fun dlansb = dlansb_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, k : Int32*, ab : LibC::Double*, ldab : Int32*, work : LibC::Double*) : LibC::Double
    fun dlansf = dlansf_(norm : LibC::Char*, transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, work : LibC::Double*) : LibC::Double
    fun dlansp = dlansp_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, work : LibC::Double*) : LibC::Double
    fun dlanst = dlanst_(norm : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*) : LibC::Double
    fun dlansy = dlansy_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, work : LibC::Double*) : LibC::Double
    fun dlantb = dlantb_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, k : Int32*, ab : LibC::Double*, ldab : Int32*, work : LibC::Double*) : LibC::Double
    fun dlantp = dlantp_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, ap : LibC::Double*, work : LibC::Double*) : LibC::Double
    fun dlantr = dlantr_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, work : LibC::Double*) : LibC::Double
    fun dlanv2 = dlanv2_(a : LibC::Double*, b : LibC::Double*, c__ : LibC::Double*, d__ : LibC::Double*, rt1r : LibC::Double*, rt1i : LibC::Double*, rt2r : LibC::Double*, rt2i : LibC::Double*, cs : LibC::Double*, sn : LibC::Double*)
    fun dlapll = dlapll_(n : Int32*, x : LibC::Double*, incx : Int32*, y : LibC::Double*, incy : Int32*, ssmin : LibC::Double*)
    fun dlapmt = dlapmt_(forwrd : Int32*, m : Int32*, n : Int32*, x : LibC::Double*, ldx : Int32*, k : Int32*)
    fun dlapy2 = dlapy2_(x : LibC::Double*, y : LibC::Double*) : LibC::Double
    fun dlapy3 = dlapy3_(x : LibC::Double*, y : LibC::Double*, z : LibC::Double*) : LibC::Double
    fun dlaqgb = dlaqgb_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Double*, ldab : Int32*, r__ : LibC::Double*, c__ : LibC::Double*, rowcnd : LibC::Double*, colcnd : LibC::Double*, amax : LibC::Double*, equed : LibC::Char*)
    fun dlaqge = dlaqge_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, r__ : LibC::Double*, c__ : LibC::Double*, rowcnd : LibC::Double*, colcnd : LibC::Double*, amax : LibC::Double*, equed : LibC::Char*)
    fun dlaqp2 = dlaqp2_(m : Int32*, n : Int32*, offset : Int32*, a : LibC::Double*, lda : Int32*, jpvt : Int32*, tau : LibC::Double*, vn1 : LibC::Double*, vn2 : LibC::Double*, work : LibC::Double*)
    fun dlaqps = dlaqps_(m : Int32*, n : Int32*, offset : Int32*, nb : Int32*, kb : Int32*, a : LibC::Double*, lda : Int32*, jpvt : Int32*, tau : LibC::Double*, vn1 : LibC::Double*, vn2 : LibC::Double*, auxv : LibC::Double*, f : LibC::Double*, ldf : Int32*)
    fun dlaqr0 = dlaqr0_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h__ : LibC::Double*, ldh : Int32*, wr : LibC::Double*, wi : LibC::Double*, iloz : Int32*, ihiz : Int32*, z__ : LibC::Double*, ldz : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dlaqr1 = dlaqr1_(n : Int32*, h__ : LibC::Double*, ldh : Int32*, sr1 : LibC::Double*, si1 : LibC::Double*, sr2 : LibC::Double*, si2 : LibC::Double*, v : LibC::Double*)
    fun dlaqr2 = dlaqr2_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ktop : Int32*, kbot : Int32*, nw : Int32*, h__ : LibC::Double*, ldh : Int32*, iloz : Int32*, ihiz : Int32*, z__ : LibC::Double*, ldz : Int32*, ns : Int32*, nd : Int32*, sr : LibC::Double*, si : LibC::Double*, v : LibC::Double*, ldv : Int32*, nh : Int32*, t : LibC::Double*, ldt : Int32*, nv : Int32*, wv : LibC::Double*, ldwv : Int32*, work : LibC::Double*, lwork : Int32*)
    fun dlaqr3 = dlaqr3_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ktop : Int32*, kbot : Int32*, nw : Int32*, h__ : LibC::Double*, ldh : Int32*, iloz : Int32*, ihiz : Int32*, z__ : LibC::Double*, ldz : Int32*, ns : Int32*, nd : Int32*, sr : LibC::Double*, si : LibC::Double*, v : LibC::Double*, ldv : Int32*, nh : Int32*, t : LibC::Double*, ldt : Int32*, nv : Int32*, wv : LibC::Double*, ldwv : Int32*, work : LibC::Double*, lwork : Int32*)
    fun dlaqr4 = dlaqr4_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h__ : LibC::Double*, ldh : Int32*, wr : LibC::Double*, wi : LibC::Double*, iloz : Int32*, ihiz : Int32*, z__ : LibC::Double*, ldz : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dlaqr5 = dlaqr5_(wantt : LibC::Char*, wantz : LibC::Char*, kacc22 : Int32*, n : Int32*, ktop : Int32*, kbot : Int32*, nshfts : Int32*, sr : LibC::Double*, si : LibC::Double*, h__ : LibC::Double*, ldh : Int32*, iloz : Int32*, ihiz : Int32*, z__ : LibC::Double*, ldz : Int32*, v : LibC::Double*, ldv : Int32*, u : LibC::Double*, ldu : Int32*, nv : Int32*, wv : LibC::Double*, ldwv : Int32*, nh : Int32*, wh : LibC::Double*, ldwh : Int32*)
    fun dlaqsb = dlaqsb_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Double*, ldab : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, equed : LibC::Char*)
    fun dlaqsp = dlaqsp_(uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, equed : LibC::Char*)
    fun dlaqsy = dlaqsy_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, equed : LibC::Char*)
    fun dlaqtr = dlaqtr_(ltran : LibC::Char*, lreal : LibC::Char*, n : Int32*, t : LibC::Double*, ldt : Int32*, b : LibC::Double*, w : LibC::Double*, scale : LibC::Double*, x : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dlar1v = dlar1v_(n : Int32*, b1 : Int32*, bn : Int32*, lambda : LibC::Double*, d__ : LibC::Double*, l : LibC::Double*, ld : LibC::Double*, lld : LibC::Double*, pivmin : LibC::Double*, gaptol : LibC::Double*, z__ : LibC::Double*, wantnc : LibC::Char*, negcnt : Int32*, ztz : LibC::Double*, mingma : LibC::Double*, r__ : Int32*, isuppz : Int32*, nrminv : LibC::Double*, resid : LibC::Double*, rqcorr : LibC::Double*, work : LibC::Double*)
    fun dlar2v = dlar2v_(n : Int32*, x : LibC::Double*, y : LibC::Double*, z__ : LibC::Double*, incx : Int32*, c__ : LibC::Double*, s : LibC::Double*, incc : Int32*)
    fun dlarf = dlarf_(side : LibC::Char*, m : Int32*, n : Int32*, v : LibC::Double*, incv : Int32*, tau : LibC::Double*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*)
    fun dlarfb = dlarfb_(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, v : LibC::Double*, ldv : Int32*, t : LibC::Double*, ldt : Int32*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*, ldwork : Int32*)
    fun dlarfg = dlarfg_(n : Int32*, alpha : LibC::Double*, x : LibC::Double*, incx : Int32*, tau : LibC::Double*)
    fun dlarfp = dlarfp_(n : Int32*, alpha : LibC::Double*, x : LibC::Double*, incx : Int32*, tau : LibC::Double*)
    fun dlarft = dlarft_(direct : LibC::Char*, storev : LibC::Char*, n : Int32*, k : Int32*, v : LibC::Double*, ldv : Int32*, tau : LibC::Double*, t : LibC::Double*, ldt : Int32*)
    fun dlarfx = dlarfx_(side : LibC::Char*, m : Int32*, n : Int32*, v : LibC::Double*, tau : LibC::Double*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*)
    fun dlargv = dlargv_(n : Int32*, x : LibC::Double*, incx : Int32*, y : LibC::Double*, incy : Int32*, c__ : LibC::Double*, incc : Int32*)
    fun dlarnv = dlarnv_(idist : Int32*, iseed : Int32*, n : Int32*, x : LibC::Double*)
    fun dlarra = dlarra_(n : Int32*, d__ : LibC::Double*, e : LibC::Double*, e2 : LibC::Double*, spltol : LibC::Double*, tnrm : LibC::Double*, nsplit : Int32*, isplit : Int32*, info : Int32*)
    fun dlarrb = dlarrb_(n : Int32*, d__ : LibC::Double*, lld : LibC::Double*, ifirst : Int32*, ilast : Int32*, rtol1 : LibC::Double*, rtol2 : LibC::Double*, offset : Int32*, w : LibC::Double*, wgap : LibC::Double*, werr : LibC::Double*, work : LibC::Double*, iwork : Int32*, pivmin : LibC::Double*, spdiam : LibC::Double*, twist : Int32*, info : Int32*)
    fun dlarrc = dlarrc_(jobt : LibC::Char*, n : Int32*, vl : LibC::Double*, vu : LibC::Double*, d__ : LibC::Double*, e : LibC::Double*, pivmin : LibC::Double*, eigcnt : Int32*, lcnt : Int32*, rcnt : Int32*, info : Int32*)
    fun dlarrd = dlarrd_(range : LibC::Char*, order : LibC::Char*, n : Int32*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, gers : LibC::Double*, reltol : LibC::Double*, d__ : LibC::Double*, e : LibC::Double*, e2 : LibC::Double*, pivmin : LibC::Double*, nsplit : Int32*, isplit : Int32*, m : Int32*, w : LibC::Double*, werr : LibC::Double*, wl : LibC::Double*, wu : LibC::Double*, iblock : Int32*, indexw : Int32*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dlarre = dlarre_(range : LibC::Char*, n : Int32*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, d__ : LibC::Double*, e : LibC::Double*, e2 : LibC::Double*, rtol1 : LibC::Double*, rtol2 : LibC::Double*, spltol : LibC::Double*, nsplit : Int32*, isplit : Int32*, m : Int32*, w : LibC::Double*, werr : LibC::Double*, wgap : LibC::Double*, iblock : Int32*, indexw : Int32*, gers : LibC::Double*, pivmin : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dlarrf = dlarrf_(n : Int32*, d__ : LibC::Double*, l : LibC::Double*, ld : LibC::Double*, clstrt : Int32*, clend : Int32*, w : LibC::Double*, wgap : LibC::Double*, werr : LibC::Double*, spdiam : LibC::Double*, clgapl : LibC::Double*, clgapr : LibC::Double*, pivmin : LibC::Double*, sigma : LibC::Double*, dplus : LibC::Double*, lplus : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dlarrj = dlarrj_(n : Int32*, d__ : LibC::Double*, e2 : LibC::Double*, ifirst : Int32*, ilast : Int32*, rtol : LibC::Double*, offset : Int32*, w : LibC::Double*, werr : LibC::Double*, work : LibC::Double*, iwork : Int32*, pivmin : LibC::Double*, spdiam : LibC::Double*, info : Int32*)
    fun dlarrk = dlarrk_(n : Int32*, iw : Int32*, gl : LibC::Double*, gu : LibC::Double*, d__ : LibC::Double*, e2 : LibC::Double*, pivmin : LibC::Double*, reltol : LibC::Double*, w : LibC::Double*, werr : LibC::Double*, info : Int32*)
    fun dlarrr = dlarrr_(n : Int32*, d__ : LibC::Double*, e : LibC::Double*, info : Int32*)
    fun dlarrv = dlarrv_(n : Int32*, vl : LibC::Double*, vu : LibC::Double*, d__ : LibC::Double*, l : LibC::Double*, pivmin : LibC::Double*, isplit : Int32*, m : Int32*, dol : Int32*, dou : Int32*, minrgp : LibC::Double*, rtol1 : LibC::Double*, rtol2 : LibC::Double*, w : LibC::Double*, werr : LibC::Double*, wgap : LibC::Double*, iblock : Int32*, indexw : Int32*, gers : LibC::Double*, z__ : LibC::Double*, ldz : Int32*, isuppz : Int32*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dlarscl2 = dlarscl2_(m : Int32*, n : Int32*, d__ : LibC::Double*, x : LibC::Double*, ldx : Int32*)
    fun dlartg = dlartg_(f : LibC::Double*, g : LibC::Double*, cs : LibC::Double*, sn : LibC::Double*, r__ : LibC::Double*)
    fun dlartv = dlartv_(n : Int32*, x : LibC::Double*, incx : Int32*, y : LibC::Double*, incy : Int32*, c__ : LibC::Double*, s : LibC::Double*, incc : Int32*)
    fun dlaruv = dlaruv_(iseed : Int32*, n : Int32*, x : LibC::Double*)
    fun dlarz = dlarz_(side : LibC::Char*, m : Int32*, n : Int32*, l : Int32*, v : LibC::Double*, incv : Int32*, tau : LibC::Double*, c__ : LibC::Double*, ldc : Int32*, work : LibC::Double*)
    fun dlarzb = dlarzb_(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, l : Int32*, v : LibC::Double*, ldv : Int32*, t : LibC::Double*, ldt : Int32*, c__ : LibC::Double*, ldc : Int32*, work : LibC::Double*, ldwork : Int32*)
    fun dlarzt = dlarzt_(direct : LibC::Char*, storev : LibC::Char*, n : Int32*, k : Int32*, v : LibC::Double*, ldv : Int32*, tau : LibC::Double*, t : LibC::Double*, ldt : Int32*)
    fun dlas2 = dlas2_(f : LibC::Double*, g : LibC::Double*, h__ : LibC::Double*, ssmin : LibC::Double*, ssmax : LibC::Double*)
    fun dlascl = dlascl_(type : LibC::Char*, kl : Int32*, ku : Int32*, cfrom : LibC::Double*, cto : LibC::Double*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, info : Int32*)
    fun dlascl2 = dlascl2_(m : Int32*, n : Int32*, d__ : LibC::Double*, x : LibC::Double*, ldx : Int32*)
    fun dlasd0 = dlasd0_(n : Int32*, sqre : Int32*, d__ : LibC::Double*, e : LibC::Double*, u : LibC::Double*, ldu : Int32*, vt : LibC::Double*, ldvt : Int32*, smlsiz : Int32*, iwork : Int32*, work : LibC::Double*, info : Int32*)
    fun dlasd1 = dlasd1_(nl : Int32*, nr : Int32*, sqre : Int32*, d__ : LibC::Double*, alpha : LibC::Double*, beta : LibC::Double*, u : LibC::Double*, ldu : Int32*, vt : LibC::Double*, ldvt : Int32*, idxq : Int32*, iwork : Int32*, work : LibC::Double*, info : Int32*)
    fun dlasd2 = dlasd2_(nl : Int32*, nr : Int32*, sqre : Int32*, k : Int32*, d__ : LibC::Double*, z__ : LibC::Double*, alpha : LibC::Double*, beta : LibC::Double*, u : LibC::Double*, ldu : Int32*, vt : LibC::Double*, ldvt : Int32*, dsigma : LibC::Double*, u2 : LibC::Double*, ldu2 : Int32*, vt2 : LibC::Double*, ldvt2 : Int32*, idxp : Int32*, idx : Int32*, idxc : Int32*, idxq : Int32*, coltyp : Int32*, info : Int32*)
    fun dlasd3 = dlasd3_(nl : Int32*, nr : Int32*, sqre : Int32*, k : Int32*, d__ : LibC::Double*, q : LibC::Double*, ldq : Int32*, dsigma : LibC::Double*, u : LibC::Double*, ldu : Int32*, u2 : LibC::Double*, ldu2 : Int32*, vt : LibC::Double*, ldvt : Int32*, vt2 : LibC::Double*, ldvt2 : Int32*, idxc : Int32*, ctot : Int32*, z__ : LibC::Double*, info : Int32*)
    fun dlasd4 = dlasd4_(n : Int32*, i__ : Int32*, d__ : LibC::Double*, z__ : LibC::Double*, delta : LibC::Double*, rho : LibC::Double*, sigma : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dlasd5 = dlasd5_(i__ : Int32*, d__ : LibC::Double*, z__ : LibC::Double*, delta : LibC::Double*, rho : LibC::Double*, dsigma : LibC::Double*, work : LibC::Double*)
    fun dlasd6 = dlasd6_(icompq : Int32*, nl : Int32*, nr : Int32*, sqre : Int32*, d__ : LibC::Double*, vf : LibC::Double*, vl : LibC::Double*, alpha : LibC::Double*, beta : LibC::Double*, idxq : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, givnum : LibC::Double*, ldgnum : Int32*, poles : LibC::Double*, difl : LibC::Double*, difr : LibC::Double*, z__ : LibC::Double*, k : Int32*, c__ : LibC::Double*, s : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dlasd7 = dlasd7_(icompq : Int32*, nl : Int32*, nr : Int32*, sqre : Int32*, k : Int32*, d__ : LibC::Double*, z__ : LibC::Double*, zw : LibC::Double*, vf : LibC::Double*, vfw : LibC::Double*, vl : LibC::Double*, vlw : LibC::Double*, alpha : LibC::Double*, beta : LibC::Double*, dsigma : LibC::Double*, idx : Int32*, idxp : Int32*, idxq : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, givnum : LibC::Double*, ldgnum : Int32*, c__ : LibC::Double*, s : LibC::Double*, info : Int32*)
    fun dlasd8 = dlasd8_(icompq : Int32*, k : Int32*, d__ : LibC::Double*, z__ : LibC::Double*, vf : LibC::Double*, vl : LibC::Double*, difl : LibC::Double*, difr : LibC::Double*, lddifr : Int32*, dsigma : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dlasda = dlasda_(icompq : Int32*, smlsiz : Int32*, n : Int32*, sqre : Int32*, d__ : LibC::Double*, e : LibC::Double*, u : LibC::Double*, ldu : Int32*, vt : LibC::Double*, k : Int32*, difl : LibC::Double*, difr : LibC::Double*, z__ : LibC::Double*, poles : LibC::Double*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, perm : Int32*, givnum : LibC::Double*, c__ : LibC::Double*, s : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dlasdq = dlasdq_(uplo : LibC::Char*, sqre : Int32*, n : Int32*, ncvt : Int32*, nru : Int32*, ncc : Int32*, d__ : LibC::Double*, e : LibC::Double*, vt : LibC::Double*, ldvt : Int32*, u : LibC::Double*, ldu : Int32*, c__ : LibC::Double*, ldc : Int32*, work : LibC::Double*, info : Int32*)
    fun dlasdt = dlasdt_(n : Int32*, lvl : Int32*, nd : Int32*, inode : Int32*, ndiml : Int32*, ndimr : Int32*, msub : Int32*)
    fun dlaset = dlaset_(uplo : LibC::Char*, m : Int32*, n : Int32*, alpha : LibC::Double*, beta : LibC::Double*, a : LibC::Double*, lda : Int32*)
    fun dlasq1 = dlasq1_(n : Int32*, d__ : LibC::Double*, e : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dlasq2 = dlasq2_(n : Int32*, z__ : LibC::Double*, info : Int32*)
    fun dlasq3 = dlasq3_(i0 : Int32*, n0 : Int32*, z__ : LibC::Double*, pp : Int32*, dmin__ : LibC::Double*, sigma : LibC::Double*, desig : LibC::Double*, qmax : LibC::Double*, nfail : Int32*, iter : Int32*, ndiv : Int32*, ieee : LibC::Char*, ttype : Int32*, dmin1 : LibC::Double*, dmin2 : LibC::Double*, dn : LibC::Double*, dn1 : LibC::Double*, dn2 : LibC::Double*, g : LibC::Double*, tau : LibC::Double*)
    fun dlasq4 = dlasq4_(i0 : Int32*, n0 : Int32*, z__ : LibC::Double*, pp : Int32*, n0in : Int32*, dmin__ : LibC::Double*, dmin1 : LibC::Double*, dmin2 : LibC::Double*, dn : LibC::Double*, dn1 : LibC::Double*, dn2 : LibC::Double*, tau : LibC::Double*, ttype : Int32*, g : LibC::Double*)
    fun dlasq5 = dlasq5_(i0 : Int32*, n0 : Int32*, z__ : LibC::Double*, pp : Int32*, tau : LibC::Double*, dmin__ : LibC::Double*, dmin1 : LibC::Double*, dmin2 : LibC::Double*, dn : LibC::Double*, dnm1 : LibC::Double*, dnm2 : LibC::Double*, ieee : LibC::Char*)
    fun dlasq6 = dlasq6_(i0 : Int32*, n0 : Int32*, z__ : LibC::Double*, pp : Int32*, dmin__ : LibC::Double*, dmin1 : LibC::Double*, dmin2 : LibC::Double*, dn : LibC::Double*, dnm1 : LibC::Double*, dnm2 : LibC::Double*)
    fun dlasr = dlasr_(side : LibC::Char*, pivot : LibC::Char*, direct : LibC::Char*, m : Int32*, n : Int32*, c__ : LibC::Double*, s : LibC::Double*, a : LibC::Double*, lda : Int32*)
    fun dlasrt = dlasrt_(id : LibC::Char*, n : Int32*, d : LibC::Double*, info : Int32*)
    fun dlassq = dlassq_(n : Int32*, x : LibC::Double*, incx : Int32*, scale : LibC::Double*, sumsq : LibC::Double*)
    fun dlasv2 = dlasv2_(f : LibC::Double*, g : LibC::Double*, h__ : LibC::Double*, ssmin : LibC::Double*, ssmax : LibC::Double*, snr : LibC::Double*, csr : LibC::Double*, snl : LibC::Double*, csl : LibC::Double*)
    fun dlaswp = dlaswp_(n : Int32*, a : LibC::Double*, lda : Int32*, k1 : Int32*, k2 : Int32*, ipiv : Int32*, incx : Int32*)
    fun dlasy2 = dlasy2_(ltranl : LibC::Char*, ltranr : LibC::Char*, isgn : Int32*, n1 : Int32*, n2 : Int32*, tl : LibC::Double*, ldtl : Int32*, tr : LibC::Double*, ldtr : Int32*, b : LibC::Double*, ldb : Int32*, scale : LibC::Double*, x : LibC::Double*, ldx : Int32*, xnorm : LibC::Double*, info : Int32*)
    fun dlasyf = dlasyf_(uplo : LibC::Char*, n : Int32*, nb : Int32*, kb : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, w : LibC::Double*, ldw : Int32*, info : Int32*)
    fun dlat2s = dlat2s_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, sa : LibC::Float*, ldsa : Int32*, info : Int32*)
    fun dlatbs = dlatbs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Double*, ldab : Int32*, x : LibC::Double*, scale : LibC::Double*, cnorm : LibC::Double*, info : Int32*)
    fun dlatdf = dlatdf_(ijob : Int32*, n : Int32*, z__ : LibC::Double*, ldz : Int32*, rhs : LibC::Double*, rdsum : LibC::Double*, rdscal : LibC::Double*, ipiv : Int32*, jpiv : Int32*)
    fun dlatps = dlatps_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Int32*, ap : LibC::Double*, x : LibC::Double*, scale : LibC::Double*, cnorm : LibC::Double*, info : Int32*)
    fun dlatrd = dlatrd_(uplo : LibC::Char*, n : Int32*, nb : Int32*, a : LibC::Double*, lda : Int32*, e : LibC::Double*, tau : LibC::Double*, w : LibC::Double*, ldw : Int32*)
    fun dlatrs = dlatrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, x : LibC::Double*, scale : LibC::Double*, cnorm : LibC::Double*, info : Int32*)
    fun dlatrz = dlatrz_(m : Int32*, n : Int32*, l : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*)
    fun dlatzm = dlatzm_(side : LibC::Char*, m : Int32*, n : Int32*, v : LibC::Double*, incv : Int32*, tau : LibC::Double*, c1 : LibC::Double*, c2 : LibC::Double*, ldc : Int32*, work : LibC::Double*)
    fun dlauu2 = dlauu2_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, info : Int32*)
    fun dlauum = dlauum_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, info : Int32*)
    fun dopgtr = dopgtr_(uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, tau : LibC::Double*, q : LibC::Double*, ldq : Int32*, work : LibC::Double*, info : Int32*)
    fun dopmtr = dopmtr_(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, ap : LibC::Double*, tau : LibC::Double*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*, info : Int32*)
    fun dorg2l = dorg2l_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dorg2r = dorg2r_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dorgbr = dorgbr_(vect : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dorghr = dorghr_(n : Int32*, ilo : Int32*, ihi : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dorgl2 = dorgl2_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dorglq = dorglq_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dorgql = dorgql_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dorgqr = dorgqr_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dorgr2 = dorgr2_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dorgrq = dorgrq_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dorgtr = dorgtr_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dorm2l = dorm2l_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, c__ : LibC::Double*, ldc : Int32*, work : LibC::Double*, info : Int32*)
    fun dorm2r = dorm2r_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, c__ : LibC::Double*, ldc : Int32*, work : LibC::Double*, info : Int32*)
    fun dormbr = dormbr_(vect : LibC::Char*, side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dormhr = dormhr_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, ilo : Int32*, ihi : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dorml2 = dorml2_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, c__ : LibC::Double*, ldc : Int32*, work : LibC::Double*, info : Int32*)
    fun dormlq = dormlq_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dormql = dormql_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dormqr = dormqr_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dormr2 = dormr2_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, c__ : LibC::Double*, ldc : Int32*, work : LibC::Double*, info : Int32*)
    fun dormr3 = dormr3_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, l : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, c__ : LibC::Double*, ldc : Int32*, work : LibC::Double*, info : Int32*)
    fun dormrq = dormrq_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dormrz = dormrz_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, l : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dormtr = dormtr_(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, c : LibC::Double*, ldc : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dpbcon = dpbcon_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Double*, ldab : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dpbequ = dpbequ_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Double*, ldab : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun dpbrfs = dpbrfs_(uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : LibC::Double*, ldab : Int32*, afb : LibC::Double*, ldafb : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dpbstf = dpbstf_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Double*, ldab : Int32*, info : Int32*)
    fun dpbsv = dpbsv_(uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : LibC::Double*, ldab : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dpbsvx = dpbsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : LibC::Double*, ldab : Int32*, afb : LibC::Double*, ldafb : Int32*, equed : LibC::Char*, s : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dpbtf2 = dpbtf2_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Double*, ldab : Int32*, info : Int32*)
    fun dpbtrf = dpbtrf_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Double*, ldab : Int32*, info : Int32*)
    fun dpbtrs = dpbtrs_(uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : LibC::Double*, ldab : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dpftrf = dpftrf_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, info : Int32*)
    fun dpftri = dpftri_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, info : Int32*)
    fun dpftrs = dpftrs_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dpocon = dpocon_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dpoequ = dpoequ_(n : Int32*, a : LibC::Double*, lda : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun dpoequb = dpoequb_(n : Int32*, a : LibC::Double*, lda : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun dporfs = dporfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dporfsx = dporfsx_(uplo : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, s : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dposv = dposv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dposvx = dposvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, equed : LibC::Char*, s : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dposvxx = dposvxx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, equed : LibC::Char*, s : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, rpvgrw : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dpotf2 = dpotf2_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, info : Int32*)
    fun dpotrf = dpotrf_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, info : Int32*)
    fun dpotri = dpotri_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, info : Int32*)
    fun dpotrs = dpotrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dppcon = dppcon_(uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, anorm : LibC::Double*, rcond : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dppequ = dppequ_(uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun dpprfs = dpprfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Double*, afp : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dppsv = dppsv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Double*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dppsvx = dppsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Double*, afp : LibC::Double*, equed : LibC::Char*, s : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dpptrf = dpptrf_(uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, info : Int32*)
    fun dpptri = dpptri_(uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, info : Int32*)
    fun dpptrs = dpptrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Double*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dpstf2 = dpstf2_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, piv : Int32*, rank : Int32*, tol : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dpstrf = dpstrf_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, piv : Int32*, rank : Int32*, tol : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dptcon = dptcon_(n : Int32*, d : LibC::Double*, e : LibC::Double*, anorm : LibC::Double*, rcond : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dpteqr = dpteqr_(compz : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, info : Int32*)
    fun dptrfs = dptrfs_(n : Int32*, nrhs : Int32*, d : LibC::Double*, e : LibC::Double*, df : LibC::Double*, ef : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dptsv = dptsv_(n : Int32*, nrhs : Int32*, d : LibC::Double*, e : LibC::Double*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dptsvx = dptsvx_(fact : LibC::Char*, n : Int32*, nrhs : Int32*, d : LibC::Double*, e : LibC::Double*, df : LibC::Double*, ef : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dpttrf = dpttrf_(n : Int32*, d : LibC::Double*, e : LibC::Double*, info : Int32*)
    fun dpttrs = dpttrs_(n : Int32*, nrhs : Int32*, d : LibC::Double*, e : LibC::Double*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dptts2 = dptts2_(n : Int32*, nrhs : Int32*, d__ : LibC::Double*, e : LibC::Double*, b : LibC::Double*, ldb : Int32*)
    fun drscl = drscl_(n : Int32*, sa : LibC::Double*, sx : LibC::Double*, incx : Int32*)
    fun dsbev = dsbev_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Double*, ldab : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, info : Int32*)
    fun dsbevd = dsbevd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Double*, ldab : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dsbevx = dsbevx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Double*, ldab : Int32*, q : LibC::Double*, ldq : Int32*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun dsbgst = dsbgst_(vect : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : LibC::Double*, ldab : Int32*, bb : LibC::Double*, ldbb : Int32*, x : LibC::Double*, ldx : Int32*, work : LibC::Double*, info : Int32*)
    fun dsbgv = dsbgv_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : LibC::Double*, ldab : Int32*, bb : LibC::Double*, ldbb : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, info : Int32*)
    fun dsbgvd = dsbgvd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : LibC::Double*, ldab : Int32*, bb : LibC::Double*, ldbb : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dsbgvx = dsbgvx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : LibC::Double*, ldab : Int32*, bb : LibC::Double*, ldbb : Int32*, q : LibC::Double*, ldq : Int32*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun dsbtrd = dsbtrd_(vect : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Double*, ldab : Int32*, d : LibC::Double*, e : LibC::Double*, q : LibC::Double*, ldq : Int32*, work : LibC::Double*, info : Int32*)
    fun dsecnd = dsecnd_ : LibC::Double
    fun dsfrk = dsfrk_(transr : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, n : Int32*, k : Int32*, alpha : LibC::Double*, a : LibC::Double*, lda : Int32*, beta : LibC::Double*, c : LibC::Double*)
    fun dsgesv = dsgesv_(n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, work : LibC::Double*, swork : LibC::Float*, iter : Int32*, info : Int32*)
    fun dspcon = dspcon_(uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, ipiv : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dspev = dspev_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, info : Int32*)
    fun dspevd = dspevd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dspevx = dspevx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun dspgst = dspgst_(itype : Int32*, uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, bp : LibC::Double*, info : Int32*)
    fun dspgv = dspgv_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, bp : LibC::Double*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, info : Int32*)
    fun dspgvd = dspgvd_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, bp : LibC::Double*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dspgvx = dspgvx_(itype : Int32*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, bp : LibC::Double*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun dsposv = dsposv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, work : LibC::Double*, swork : LibC::Float*, iter : Int32*, info : Int32*)
    fun dsprfs = dsprfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Double*, afp : LibC::Double*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dspsv = dspsv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Double*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dspsvx = dspsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Double*, afp : LibC::Double*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dsptrd = dsptrd_(uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, d : LibC::Double*, e : LibC::Double*, tau : LibC::Double*, info : Int32*)
    fun dsptrf = dsptrf_(uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, ipiv : Int32*, info : Int32*)
    fun dsptri = dsptri_(uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, ipiv : Int32*, work : LibC::Double*, info : Int32*)
    fun dsptrs = dsptrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Double*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dstebz = dstebz_(range : LibC::Char*, order : LibC::Char*, n : Int32*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, d : LibC::Double*, e : LibC::Double*, m : Int32*, nsplit : Int32*, w : LibC::Double*, iblock : Int32*, isplit : Int32*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dstedc = dstedc_(compz : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dstegr = dstegr_(jobz : LibC::Char*, range : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, isuppz : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dstein = dstein_(n : Int32*, d : LibC::Double*, e : LibC::Double*, m : Int32*, w : LibC::Double*, iblock : Int32*, isplit : Int32*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun dstemr = dstemr_(jobz : LibC::Char*, range : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, m : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, nzc : Int32*, isuppz : Int32*, tryrac : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dsteqr = dsteqr_(compz : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, info : Int32*)
    fun dsterf = dsterf_(n : Int32*, d : LibC::Double*, e : LibC::Double*, info : Int32*)
    fun dstev = dstev_(jobz : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, info : Int32*)
    fun dstevd = dstevd_(jobz : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dstevr = dstevr_(jobz : LibC::Char*, range : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, isuppz : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dstevx = dstevx_(jobz : LibC::Char*, range : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun dsycon = dsycon_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dsyequb = dsyequb_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun dsyev = dsyev_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, w : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dsyevd = dsyevd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, w : LibC::Double*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dsyevr = dsyevr_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, isuppz : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dsyevx = dsyevx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun dsygs2 = dsygs2_(itype : Int32*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dsygst = dsygst_(itype : Int32*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dsygv = dsygv_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, w : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dsygvd = dsygvd_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, w : LibC::Double*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dsygvx = dsygvx_(itype : Int32*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : LibC::Double*, ldz : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun dsyrfs = dsyrfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dsyrfsx = dsyrfsx_(uplo : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, ipiv : Int32*, s : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dsysv = dsysv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dsysvx = dsysvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun dsysvxx = dsysvxx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, af : LibC::Double*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, s : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, rcond : LibC::Double*, rpvgrw : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dsytd2 = dsytd2_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, d__ : LibC::Double*, e : LibC::Double*, tau : LibC::Double*, info : Int32*)
    fun dsytf2 = dsytf2_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun dsytrd = dsytrd_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, d : LibC::Double*, e : LibC::Double*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dsytrf = dsytrf_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dsytri = dsytri_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, work : LibC::Double*, info : Int32*)
    fun dsytrs = dsytrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, ipiv : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dtbcon = dtbcon_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Double*, ldab : Int32*, rcond : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dtbrfs = dtbrfs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : LibC::Double*, ldab : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dtbtrs = dtbtrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : LibC::Double*, ldab : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dtfsm = dtfsm_(transr : LibC::Char*, side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, m : Int32*, n : Int32*, alpha : LibC::Double*, a : LibC::Double*, b : LibC::Double*, ldb : Int32*)
    fun dtftri = dtftri_(transr : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : LibC::Double*, info : Int32*)
    fun dtfttp = dtfttp_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, arf : LibC::Double*, ap : LibC::Double*, info : Int32*)
    fun dtfttr = dtfttr_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, arf : LibC::Double*, a : LibC::Double*, lda : Int32*, info : Int32*)
    fun dtgevc = dtgevc_(side : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, s : LibC::Double*, lds : Int32*, p : LibC::Double*, ldp : Int32*, vl : LibC::Double*, ldvl : Int32*, vr : LibC::Double*, ldvr : Int32*, mm : Int32*, m : Int32*, work : LibC::Double*, info : Int32*)
    fun dtgex2 = dtgex2_(wantq : LibC::Char*, wantz : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, q : LibC::Double*, ldq : Int32*, z__ : LibC::Double*, ldz : Int32*, j1 : Int32*, n1 : Int32*, n2 : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dtgexc = dtgexc_(wantq : Int32*, wantz : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, q : LibC::Double*, ldq : Int32*, z : LibC::Double*, ldz : Int32*, ifst : Int32*, ilst : Int32*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dtgsen = dtgsen_(ijob : Int32*, wantq : Int32*, wantz : Int32*, select : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, alphar : LibC::Double*, alphai : LibC::Double*, beta : LibC::Double*, q : LibC::Double*, ldq : Int32*, z : LibC::Double*, ldz : Int32*, m : Int32*, pl : LibC::Double*, pr : LibC::Double*, dif : LibC::Double*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dtgsja = dtgsja_(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Int32*, p : Int32*, n : Int32*, k : Int32*, l : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, tola : LibC::Double*, tolb : LibC::Double*, alpha : LibC::Double*, beta : LibC::Double*, u : LibC::Double*, ldu : Int32*, v : LibC::Double*, ldv : Int32*, q : LibC::Double*, ldq : Int32*, work : LibC::Double*, ncycle : Int32*, info : Int32*)
    fun dtgsna = dtgsna_(job : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, vl : LibC::Double*, ldvl : Int32*, vr : LibC::Double*, ldvr : Int32*, s : LibC::Double*, dif : LibC::Double*, mm : Int32*, m : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun dtgsy2 = dtgsy2_(trans : LibC::Char*, ijob : Int32*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, c__ : LibC::Double*, ldc : Int32*, d__ : LibC::Double*, ldd : Int32*, e : LibC::Double*, lde : Int32*, f : LibC::Double*, ldf : Int32*, scale : LibC::Double*, rdsum : LibC::Double*, rdscal : LibC::Double*, iwork : Int32*, pq : Int32*, info : Int32*)
    fun dtgsyl = dtgsyl_(trans : LibC::Char*, ijob : Int32*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, c : LibC::Double*, ldc : Int32*, d : LibC::Double*, ldd : Int32*, e : LibC::Double*, lde : Int32*, f : LibC::Double*, ldf : Int32*, dif : LibC::Double*, scale : LibC::Double*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun dtpcon = dtpcon_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, ap : LibC::Double*, rcond : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dtprfs = dtprfs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Double*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dtptri = dtptri_(uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, ap : LibC::Double*, info : Int32*)
    fun dtptrs = dtptrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Double*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dtpttf = dtpttf_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, arf : LibC::Double*, info : Int32*)
    fun dtpttr = dtpttr_(uplo : LibC::Char*, n : Int32*, ap : LibC::Double*, a : LibC::Double*, lda : Int32*, info : Int32*)
    fun dtrcon = dtrcon_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, rcond : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dtrevc = dtrevc_(side : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, t : LibC::Double*, ldt : Int32*, vl : LibC::Double*, ldvl : Int32*, vr : LibC::Double*, ldvr : Int32*, mm : Int32*, m : Int32*, work : LibC::Double*, info : Int32*)
    fun dtrexc = dtrexc_(compq : LibC::Char*, n : Int32*, t : LibC::Double*, ldt : Int32*, q : LibC::Double*, ldq : Int32*, ifst : Int32*, ilst : Int32*, work : LibC::Double*, info : Int32*)
    fun dtrrfs = dtrrfs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, x : LibC::Double*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun dtrsen = dtrsen_(job : LibC::Char*, compq : LibC::Char*, select : Int32*, n : Int32*, t : LibC::Double*, ldt : Int32*, q : LibC::Double*, ldq : Int32*, wr : LibC::Double*, wi : LibC::Double*, m : Int32*, s : LibC::Double*, sep : LibC::Double*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun dtrsna = dtrsna_(job : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, t : LibC::Double*, ldt : Int32*, vl : LibC::Double*, ldvl : Int32*, vr : LibC::Double*, ldvr : Int32*, s : LibC::Double*, sep : LibC::Double*, mm : Int32*, m : Int32*, work : LibC::Double*, ldwork : Int32*, iwork : Int32*, info : Int32*)
    fun dtrsyl = dtrsyl_(trana : LibC::Char*, tranb : LibC::Char*, isgn : Int32*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, c : LibC::Double*, ldc : Int32*, scale : LibC::Double*, info : Int32*)
    fun dtrti2 = dtrti2_(uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, info : Int32*)
    fun dtrtri = dtrtri_(uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, info : Int32*)
    fun dtrtrs = dtrtrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Double*, lda : Int32*, b : LibC::Double*, ldb : Int32*, info : Int32*)
    fun dtrttf = dtrttf_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, arf : LibC::Double*, info : Int32*)
    fun dtrttp = dtrttp_(uplo : LibC::Char*, n : Int32*, a : LibC::Double*, lda : Int32*, ap : LibC::Double*, info : Int32*)
    fun dtzrqf = dtzrqf_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, info : Int32*)
    fun dtzrzf = dtzrzf_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, tau : LibC::Double*, work : LibC::Double*, lwork : Int32*, info : Int32*)
    fun dzsum1 = dzsum1_(n : Int32*, cx : ComplexDouble*, incx : Int32*) : LibC::Double
    fun icmax1 = icmax1_(n : Int32*, cx : ComplexFloat*, incx : Int32*) : Int32
    fun ieeeck = ieeeck_(ispec : Int32*, zero : LibC::Float*, one : LibC::Float*) : Int32
    fun ilaclc = ilaclc_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*) : Int32
    fun ilaclr = ilaclr_(m : Int32*, n : Int32*, a : ComplexFloat*, lda : Int32*) : Int32
    fun iladiag = iladiag_(diag : LibC::Char*) : Int32
    fun iladlc = iladlc_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*) : Int32
    fun iladlr = iladlr_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*) : Int32
    fun ilaenv = ilaenv_(ispec : Int32*, name__ : LibC::Char*, opts : LibC::Char*, n1 : Int32*, n2 : Int32*, n3 : Int32*, n4 : Int32*) : Int32
    fun ilaprec = ilaprec_(prec : LibC::Char*) : Int32
    fun ilaslc = ilaslc_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*) : Int32
    fun ilaslr = ilaslr_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*) : Int32
    fun ilatrans = ilatrans_(trans : LibC::Char*) : Int32
    fun ilauplo = ilauplo_(uplo : LibC::Char*) : Int32
    fun ilaver = ilaver_(vers_major : Int32*, vers_minor : Int32*, vers_patch : Int32*)
    fun ilazlc = ilazlc_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*) : Int32
    fun ilazlr = ilazlr_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*) : Int32
    fun iparmq = iparmq_(ispec : Int32*, name__ : LibC::Char*, opts : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, lwork : Int32*) : Int32
    fun izmax1 = izmax1_(n : Int32*, cx : ComplexDouble*, incx : Int32*) : Int32
    fun lsame = lsame_(ca : LibC::Char*, cb : LibC::Char*) : LibC::Char
    fun lsamen = lsamen_(n : Int32*, ca : LibC::Char*, cb : LibC::Char*) : LibC::Char
    fun sbdsdc = sbdsdc_(uplo : LibC::Char*, compq : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, u : LibC::Float*, ldu : Int32*, vt : LibC::Float*, ldvt : Int32*, q : LibC::Float*, iq : Int32*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sbdsqr = sbdsqr_(uplo : LibC::Char*, n : Int32*, ncvt : Int32*, nru : Int32*, ncc : Int32*, d : LibC::Float*, e : LibC::Float*, vt : LibC::Float*, ldvt : Int32*, u : LibC::Float*, ldu : Int32*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*, info : Int32*)
    fun scsum1 = scsum1_(n : Int32*, cx : ComplexFloat*, incx : Int32*) : LibC::Double
    fun sdisna = sdisna_(job : LibC::Char*, m : Int32*, n : Int32*, d : LibC::Float*, sep : LibC::Float*, info : Int32*)
    fun second = second_ : LibC::Double
    fun sgbbrd = sgbbrd_(vect : LibC::Char*, m : Int32*, n : Int32*, ncc : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Float*, ldab : Int32*, d : LibC::Float*, e : LibC::Float*, q : LibC::Float*, ldq : Int32*, pt : LibC::Float*, ldpt : Int32*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*, info : Int32*)
    fun sgbcon = sgbcon_(norm : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Float*, ldab : Int32*, ipiv : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sgbequ = sgbequ_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Float*, ldab : Int32*, r : LibC::Float*, c : LibC::Float*, rowcnd : LibC::Float*, colcnd : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun sgbequb = sgbequb_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Float*, ldab : Int32*, r : LibC::Float*, c : LibC::Float*, rowcnd : LibC::Float*, colcnd : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun sgbrfs = sgbrfs_(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Float*, ldab : Int32*, afb : LibC::Float*, ldafb : Int32*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sgbrfsx = sgbrfsx_(trans : LibC::Char*, equed : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Float*, ldab : Int32*, afb : LibC::Float*, ldafb : Int32*, ipiv : Int32*, r : LibC::Float*, c : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sgbsv = sgbsv_(n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Float*, ldab : Int32*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun sgbsvx = sgbsvx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Float*, ldab : Int32*, afb : LibC::Float*, ldafb : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Float*, c : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sgbsvxx = sgbsvxx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Float*, ldab : Int32*, afb : LibC::Float*, ldafb : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Float*, c : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, rpvgrw : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sgbtf2 = sgbtf2_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Float*, ldab : Int32*, ipiv : Int32*, info : Int32*)
    fun sgbtrf = sgbtrf_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Float*, ldab : Int32*, ipiv : Int32*, info : Int32*)
    fun sgbtrs = sgbtrs_(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Float*, ldab : Int32*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun sgebak = sgebak_(job : LibC::Char*, side : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, scale : LibC::Float*, m : Int32*, v : LibC::Float*, ldv : Int32*, info : Int32*)
    fun sgebal = sgebal_(job : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, ilo : Int32*, ihi : Int32*, scale : LibC::Float*, info : Int32*)
    fun sgebd2 = sgebd2_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, d__ : LibC::Float*, e : LibC::Float*, tauq : LibC::Float*, taup : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sgebrd = sgebrd_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, d : LibC::Float*, e : LibC::Float*, tauq : LibC::Float*, taup : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgecon = sgecon_(norm : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sgeequ = sgeequ_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, r : LibC::Float*, c : LibC::Float*, rowcnd : LibC::Float*, colcnd : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun sgeequb = sgeequb_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, r : LibC::Float*, c : LibC::Float*, rowcnd : LibC::Float*, colcnd : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun sgees = sgees_(jobvs : LibC::Char*, sort : LibC::Char*, select : LapackSSelect2, n : Int32*, a : LibC::Float*, lda : Int32*, sdim : Int32*, wr : LibC::Float*, wi : LibC::Float*, vs : LibC::Float*, ldvs : Int32*, work : LibC::Float*, lwork : Int32*, bwork : Int32*, info : Int32*)
    fun sgeesx = sgeesx_(jobvs : LibC::Char*, sort : LibC::Char*, select : LapackSSelect2, sense : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, sdim : Int32*, wr : LibC::Float*, wi : LibC::Float*, vs : LibC::Float*, ldvs : Int32*, rconde : LibC::Float*, rcondv : LibC::Float*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, bwork : Int32*, info : Int32*)
    fun sgeev = sgeev_(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, wr : LibC::Float*, wi : LibC::Float*, vl : LibC::Float*, ldvl : Int32*, vr : LibC::Float*, ldvr : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgeevx = sgeevx_(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, wr : LibC::Float*, wi : LibC::Float*, vl : LibC::Float*, ldvl : Int32*, vr : LibC::Float*, ldvr : Int32*, ilo : Int32*, ihi : Int32*, scale : LibC::Float*, abnrm : LibC::Float*, rconde : LibC::Float*, rcondv : LibC::Float*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun sgegs = sgegs_(jobvsl : LibC::Char*, jobvsr : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, alphar : LibC::Float*, alphai : LibC::Float*, beta : LibC::Float*, vsl : LibC::Float*, ldvsl : Int32*, vsr : LibC::Float*, ldvsr : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgegv = sgegv_(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, alphar : LibC::Float*, alphai : LibC::Float*, beta : LibC::Float*, vl : LibC::Float*, ldvl : Int32*, vr : LibC::Float*, ldvr : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgehd2 = sgehd2_(n : Int32*, ilo : Int32*, ihi : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sgehrd = sgehrd_(n : Int32*, ilo : Int32*, ihi : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgejsv = sgejsv_(joba : LibC::Char*, jobu : LibC::Char*, jobv : LibC::Char*, jobr : LibC::Char*, jobt : LibC::Char*, jobp : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, sva : LibC::Float*, u : LibC::Float*, ldu : Int32*, v : LibC::Float*, ldv : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun sgelq2 = sgelq2_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sgelqf = sgelqf_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgels = sgels_(trans : LibC::Char*, m : Int32*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgelsd = sgelsd_(m : Int32*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, s : LibC::Float*, rcond : LibC::Float*, rank : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun sgelss = sgelss_(m : Int32*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, s : LibC::Float*, rcond : LibC::Float*, rank : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgelsx = sgelsx_(m : Int32*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, jpvt : Int32*, rcond : LibC::Float*, rank : Int32*, work : LibC::Float*, info : Int32*)
    fun sgelsy = sgelsy_(m : Int32*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, jpvt : Int32*, rcond : LibC::Float*, rank : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgeql2 = sgeql2_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sgeqlf = sgeqlf_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgeqp3 = sgeqp3_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, jpvt : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgeqpf = sgeqpf_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, jpvt : Int32*, tau : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sgeqr2 = sgeqr2_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sgeqrf = sgeqrf_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgerfs = sgerfs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sgerfsx = sgerfsx_(trans : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, ipiv : Int32*, r : LibC::Float*, c : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sgerq2 = sgerq2_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sgerqf = sgerqf_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgesc2 = sgesc2_(n : Int32*, a : LibC::Float*, lda : Int32*, rhs : LibC::Float*, ipiv : Int32*, jpiv : Int32*, scale : LibC::Float*)
    fun sgesdd = sgesdd_(jobz : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, s : LibC::Float*, u : LibC::Float*, ldu : Int32*, vt : LibC::Float*, ldvt : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun sgesv = sgesv_(n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun sgesvd = sgesvd_(jobu : LibC::Char*, jobvt : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, s : LibC::Float*, u : LibC::Float*, ldu : Int32*, vt : LibC::Float*, ldvt : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgesvj = sgesvj_(joba : LibC::Char*, jobu : LibC::Char*, jobv : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, sva : LibC::Float*, mv : Int32*, v : LibC::Float*, ldv : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgesvx = sgesvx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Float*, c : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sgesvxx = sgesvxx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Float*, c : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, rpvgrw : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sgetc2 = sgetc2_(n : Int32*, a : LibC::Float*, lda : Int32*, ipiv : Int32*, jpiv : Int32*, info : Int32*)
    fun sgetf2 = sgetf2_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun sgetrf = sgetrf_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun sgetri = sgetri_(n : Int32*, a : LibC::Float*, lda : Int32*, ipiv : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgetrs = sgetrs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun sggbak = sggbak_(job : LibC::Char*, side : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, lscale : LibC::Float*, rscale : LibC::Float*, m : Int32*, v : LibC::Float*, ldv : Int32*, info : Int32*)
    fun sggbal = sggbal_(job : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, ilo : Int32*, ihi : Int32*, lscale : LibC::Float*, rscale : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sgges = sgges_(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LapackSSelect3, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, sdim : Int32*, alphar : LibC::Float*, alphai : LibC::Float*, beta : LibC::Float*, vsl : LibC::Float*, ldvsl : Int32*, vsr : LibC::Float*, ldvsr : Int32*, work : LibC::Float*, lwork : Int32*, bwork : Int32*, info : Int32*)
    fun sggesx = sggesx_(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LapackSSelect3, sense : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, sdim : Int32*, alphar : LibC::Float*, alphai : LibC::Float*, beta : LibC::Float*, vsl : LibC::Float*, ldvsl : Int32*, vsr : LibC::Float*, ldvsr : Int32*, rconde : LibC::Float*, rcondv : LibC::Float*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, bwork : Int32*, info : Int32*)
    fun sggev = sggev_(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, alphar : LibC::Float*, alphai : LibC::Float*, beta : LibC::Float*, vl : LibC::Float*, ldvl : Int32*, vr : LibC::Float*, ldvr : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sggevx = sggevx_(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, alphar : LibC::Float*, alphai : LibC::Float*, beta : LibC::Float*, vl : LibC::Float*, ldvl : Int32*, vr : LibC::Float*, ldvr : Int32*, ilo : Int32*, ihi : Int32*, lscale : LibC::Float*, rscale : LibC::Float*, abnrm : LibC::Float*, bbnrm : LibC::Float*, rconde : LibC::Float*, rcondv : LibC::Float*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, bwork : Int32*, info : Int32*)
    fun sggglm = sggglm_(n : Int32*, m : Int32*, p : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, d : LibC::Float*, x : LibC::Float*, y : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgghrd = sgghrd_(compq : LibC::Char*, compz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, q : LibC::Float*, ldq : Int32*, z : LibC::Float*, ldz : Int32*, info : Int32*)
    fun sgglse = sgglse_(m : Int32*, n : Int32*, p : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, c : LibC::Float*, d : LibC::Float*, x : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sggqrf = sggqrf_(n : Int32*, m : Int32*, p : Int32*, a : LibC::Float*, lda : Int32*, taua : LibC::Float*, b : LibC::Float*, ldb : Int32*, taub : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sggrqf = sggrqf_(m : Int32*, p : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, taua : LibC::Float*, b : LibC::Float*, ldb : Int32*, taub : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sggsvd = sggsvd_(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Int32*, n : Int32*, p : Int32*, k : Int32*, l : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, alpha : LibC::Float*, beta : LibC::Float*, u : LibC::Float*, ldu : Int32*, v : LibC::Float*, ldv : Int32*, q : LibC::Float*, ldq : Int32*, work : LibC::Float*, iwork : Int32*, info : Int32*) : Int32
    fun sggsvp = sggsvp_(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Int32*, p : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, tola : LibC::Float*, tolb : LibC::Float*, k : Int32*, l : Int32*, u : LibC::Float*, ldu : Int32*, v : LibC::Float*, ldv : Int32*, q : LibC::Float*, ldq : Int32*, iwork : Int32*, tau : LibC::Float*, work : LibC::Float*, info : Int32*) : Int32
    fun sgsvj0 = sgsvj0_(jobv : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, d__ : LibC::Float*, sva : LibC::Float*, mv : Int32*, v : LibC::Float*, ldv : Int32*, eps : LibC::Float*, sfmin : LibC::Float*, tol : LibC::Float*, nsweep : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgsvj1 = sgsvj1_(jobv : LibC::Char*, m : Int32*, n : Int32*, n1 : Int32*, a : LibC::Float*, lda : Int32*, d__ : LibC::Float*, sva : LibC::Float*, mv : Int32*, v : LibC::Float*, ldv : Int32*, eps : LibC::Float*, sfmin : LibC::Float*, tol : LibC::Float*, nsweep : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sgtcon = sgtcon_(norm : LibC::Char*, n : Int32*, dl : LibC::Float*, d : LibC::Float*, du : LibC::Float*, du2 : LibC::Float*, ipiv : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sgtrfs = sgtrfs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, dl : LibC::Float*, d : LibC::Float*, du : LibC::Float*, dlf : LibC::Float*, df : LibC::Float*, duf : LibC::Float*, du2 : LibC::Float*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sgtsv = sgtsv_(n : Int32*, nrhs : Int32*, dl : LibC::Float*, d : LibC::Float*, du : LibC::Float*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun sgtsvx = sgtsvx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, nrhs : Int32*, dl : LibC::Float*, d : LibC::Float*, du : LibC::Float*, dlf : LibC::Float*, df : LibC::Float*, duf : LibC::Float*, du2 : LibC::Float*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sgttrf = sgttrf_(n : Int32*, dl : LibC::Float*, d : LibC::Float*, du : LibC::Float*, du2 : LibC::Float*, ipiv : Int32*, info : Int32*)
    fun sgttrs = sgttrs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, dl : LibC::Float*, d : LibC::Float*, du : LibC::Float*, du2 : LibC::Float*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun sgtts2 = sgtts2_(itrans : Int32*, n : Int32*, nrhs : Int32*, dl : LibC::Float*, d__ : LibC::Float*, du : LibC::Float*, du2 : LibC::Float*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*)
    fun shgeqz = shgeqz_(job : LibC::Char*, compq : LibC::Char*, compz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h : LibC::Float*, ldh : Int32*, t : LibC::Float*, ldt : Int32*, alphar : LibC::Float*, alphai : LibC::Float*, beta : LibC::Float*, q : LibC::Float*, ldq : Int32*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun shsein = shsein_(side : LibC::Char*, eigsrc : LibC::Char*, initv : LibC::Char*, select : Int32*, n : Int32*, h : LibC::Float*, ldh : Int32*, wr : LibC::Float*, wi : LibC::Float*, vl : LibC::Float*, ldvl : Int32*, vr : LibC::Float*, ldvr : Int32*, mm : Int32*, m : Int32*, work : LibC::Float*, ifaill : Int32*, ifailr : Int32*, info : Int32*)
    fun shseqr = shseqr_(job : LibC::Char*, compz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h : LibC::Float*, ldh : Int32*, wr : LibC::Float*, wi : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sisnan = sisnan_(sin__ : LibC::Float*) : LibC::Char
    fun sla_gbamv_ = sla_gbamv__(trans : Int32*, m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, alpha : LibC::Float*, ab : LibC::Float*, ldab : Int32*, x : LibC::Float*, incx : Int32*, beta : LibC::Float*, y : LibC::Float*, incy : Int32*)
    fun sla_gbrcond_ = sla_gbrcond__(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Float*, ldab : Int32*, afb : LibC::Float*, ldafb : Int32*, ipiv : Int32*, cmode : Int32*, c__ : LibC::Float*, info : Int32*, work : LibC::Float*, iwork : Int32*, trans_len : LibC::Int) : LibC::Double
    fun sla_gbrfsx_extended_ = sla_gbrfsx_extended__(prec_type__ : Int32*, trans_type__ : Int32*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : LibC::Float*, ldab : Int32*, afb : LibC::Float*, ldafb : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Float*, b : LibC::Float*, ldb : Int32*, y : LibC::Float*, ldy : Int32*, berr_out__ : LibC::Float*, n_norms__ : Int32*, errs_n__ : LibC::Float*, errs_c__ : LibC::Float*, res : LibC::Float*, ayb : LibC::Float*, dy : LibC::Float*, y_tail__ : LibC::Float*, rcond : LibC::Float*, ithresh : Int32*, rthresh : LibC::Float*, dz_ub__ : LibC::Float*, ignore_cwise__ : LibC::Char*, info : Int32*)
    fun sla_gbrpvgrw_ = sla_gbrpvgrw__(n : Int32*, kl : Int32*, ku : Int32*, ncols : Int32*, ab : LibC::Float*, ldab : Int32*, afb : LibC::Float*, ldafb : Int32*) : LibC::Double
    fun sla_geamv_ = sla_geamv__(trans : Int32*, m : Int32*, n : Int32*, alpha : LibC::Float*, a : LibC::Float*, lda : Int32*, x : LibC::Float*, incx : Int32*, beta : LibC::Float*, y : LibC::Float*, incy : Int32*)
    fun sla_gercond_ = sla_gercond__(trans : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, ipiv : Int32*, cmode : Int32*, c__ : LibC::Float*, info : Int32*, work : LibC::Float*, iwork : Int32*, trans_len : LibC::Int) : LibC::Double
    fun sla_gerfsx_extended_ = sla_gerfsx_extended__(prec_type__ : Int32*, trans_type__ : Int32*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Float*, b : LibC::Float*, ldb : Int32*, y : LibC::Float*, ldy : Int32*, berr_out__ : LibC::Float*, n_norms__ : Int32*, errs_n__ : LibC::Float*, errs_c__ : LibC::Float*, res : LibC::Float*, ayb : LibC::Float*, dy : LibC::Float*, y_tail__ : LibC::Float*, rcond : LibC::Float*, ithresh : Int32*, rthresh : LibC::Float*, dz_ub__ : LibC::Float*, ignore_cwise__ : LibC::Char*, info : Int32*)
    fun sla_lin_berr_ = sla_lin_berr__(n : Int32*, nz : Int32*, nrhs : Int32*, res : LibC::Float*, ayb : LibC::Float*, berr : LibC::Float*)
    fun sla_porcond_ = sla_porcond__(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, cmode : Int32*, c__ : LibC::Float*, info : Int32*, work : LibC::Float*, iwork : Int32*, uplo_len : LibC::Int) : LibC::Double
    fun sla_porfsx_extended_ = sla_porfsx_extended__(prec_type__ : Int32*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, colequ : LibC::Char*, c__ : LibC::Float*, b : LibC::Float*, ldb : Int32*, y : LibC::Float*, ldy : Int32*, berr_out__ : LibC::Float*, n_norms__ : Int32*, errs_n__ : LibC::Float*, errs_c__ : LibC::Float*, res : LibC::Float*, ayb : LibC::Float*, dy : LibC::Float*, y_tail__ : LibC::Float*, rcond : LibC::Float*, ithresh : Int32*, rthresh : LibC::Float*, dz_ub__ : LibC::Float*, ignore_cwise__ : LibC::Char*, info : Int32*, uplo_len : LibC::Int)
    fun sla_porpvgrw_ = sla_porpvgrw__(uplo : LibC::Char*, ncols : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, work : LibC::Float*, uplo_len : LibC::Int) : LibC::Double
    fun sla_rpvgrw_ = sla_rpvgrw__(n : Int32*, ncols : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*) : LibC::Double
    fun sla_syamv_ = sla_syamv__(uplo : Int32*, n : Int32*, alpha : LibC::Float*, a : LibC::Float*, lda : Int32*, x : LibC::Float*, incx : Int32*, beta : LibC::Float*, y : LibC::Float*, incy : Int32*)
    fun sla_syrcond_ = sla_syrcond__(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, ipiv : Int32*, cmode : Int32*, c__ : LibC::Float*, info : Int32*, work : LibC::Float*, iwork : Int32*, uplo_len : LibC::Int) : LibC::Double
    fun sla_syrfsx_extended_ = sla_syrfsx_extended__(prec_type__ : Int32*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Float*, b : LibC::Float*, ldb : Int32*, y : LibC::Float*, ldy : Int32*, berr_out__ : LibC::Float*, n_norms__ : Int32*, errs_n__ : LibC::Float*, errs_c__ : LibC::Float*, res : LibC::Float*, ayb : LibC::Float*, dy : LibC::Float*, y_tail__ : LibC::Float*, rcond : LibC::Float*, ithresh : Int32*, rthresh : LibC::Float*, dz_ub__ : LibC::Float*, ignore_cwise__ : LibC::Char*, info : Int32*, uplo_len : LibC::Int)
    fun sla_syrpvgrw_ = sla_syrpvgrw__(uplo : LibC::Char*, n : Int32*, info : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, ipiv : Int32*, work : LibC::Float*, uplo_len : LibC::Int) : LibC::Double
    fun sla_wwaddw_ = sla_wwaddw__(n : Int32*, x : LibC::Float*, y : LibC::Float*, w : LibC::Float*)
    fun slabad = slabad_(small : LibC::Float*, large : LibC::Float*)
    fun slabrd = slabrd_(m : Int32*, n : Int32*, nb : Int32*, a : LibC::Float*, lda : Int32*, d__ : LibC::Float*, e : LibC::Float*, tauq : LibC::Float*, taup : LibC::Float*, x : LibC::Float*, ldx : Int32*, y : LibC::Float*, ldy : Int32*)
    fun slacn2 = slacn2_(n : Int32*, v : LibC::Float*, x : LibC::Float*, isgn : Int32*, est : LibC::Float*, kase : Int32*, isave : Int32*)
    fun slacon = slacon_(n : Int32*, v : LibC::Float*, x : LibC::Float*, isgn : Int32*, est : LibC::Float*, kase : Int32*)
    fun slacpy = slacpy_(uplo : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*)
    fun sladiv = sladiv_(a : LibC::Float*, b : LibC::Float*, c__ : LibC::Float*, d__ : LibC::Float*, p : LibC::Float*, q : LibC::Float*)
    fun slae2 = slae2_(a : LibC::Float*, b : LibC::Float*, c__ : LibC::Float*, rt1 : LibC::Float*, rt2 : LibC::Float*)
    fun slaebz = slaebz_(ijob : Int32*, nitmax : Int32*, n : Int32*, mmax : Int32*, minp : Int32*, nbmin : Int32*, abstol : LibC::Float*, reltol : LibC::Float*, pivmin : LibC::Float*, d__ : LibC::Float*, e : LibC::Float*, e2 : LibC::Float*, nval : Int32*, ab : LibC::Float*, c__ : LibC::Float*, mout : Int32*, nab : Int32*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun slaed0 = slaed0_(icompq : Int32*, qsiz : Int32*, n : Int32*, d__ : LibC::Float*, e : LibC::Float*, q : LibC::Float*, ldq : Int32*, qstore : LibC::Float*, ldqs : Int32*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun slaed1 = slaed1_(n : Int32*, d__ : LibC::Float*, q : LibC::Float*, ldq : Int32*, indxq : Int32*, rho : LibC::Float*, cutpnt : Int32*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun slaed2 = slaed2_(k : Int32*, n : Int32*, n1 : Int32*, d__ : LibC::Float*, q : LibC::Float*, ldq : Int32*, indxq : Int32*, rho : LibC::Float*, z__ : LibC::Float*, dlamda : LibC::Float*, w : LibC::Float*, q2 : LibC::Float*, indx : Int32*, indxc : Int32*, indxp : Int32*, coltyp : Int32*, info : Int32*)
    fun slaed3 = slaed3_(k : Int32*, n : Int32*, n1 : Int32*, d__ : LibC::Float*, q : LibC::Float*, ldq : Int32*, rho : LibC::Float*, dlamda : LibC::Float*, q2 : LibC::Float*, indx : Int32*, ctot : Int32*, w : LibC::Float*, s : LibC::Float*, info : Int32*)
    fun slaed4 = slaed4_(n : Int32*, i__ : Int32*, d__ : LibC::Float*, z__ : LibC::Float*, delta : LibC::Float*, rho : LibC::Float*, dlam : LibC::Float*, info : Int32*)
    fun slaed5 = slaed5_(i__ : Int32*, d__ : LibC::Float*, z__ : LibC::Float*, delta : LibC::Float*, rho : LibC::Float*, dlam : LibC::Float*)
    fun slaed6 = slaed6_(kniter : Int32*, orgati : LibC::Char*, rho : LibC::Float*, d__ : LibC::Float*, z__ : LibC::Float*, finit : LibC::Float*, tau : LibC::Float*, info : Int32*)
    fun slaed7 = slaed7_(icompq : Int32*, n : Int32*, qsiz : Int32*, tlvls : Int32*, curlvl : Int32*, curpbm : Int32*, d__ : LibC::Float*, q : LibC::Float*, ldq : Int32*, indxq : Int32*, rho : LibC::Float*, cutpnt : Int32*, qstore : LibC::Float*, qptr : Int32*, prmptr : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, givnum : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun slaed8 = slaed8_(icompq : Int32*, k : Int32*, n : Int32*, qsiz : Int32*, d__ : LibC::Float*, q : LibC::Float*, ldq : Int32*, indxq : Int32*, rho : LibC::Float*, cutpnt : Int32*, z__ : LibC::Float*, dlamda : LibC::Float*, q2 : LibC::Float*, ldq2 : Int32*, w : LibC::Float*, perm : Int32*, givptr : Int32*, givcol : Int32*, givnum : LibC::Float*, indxp : Int32*, indx : Int32*, info : Int32*)
    fun slaed9 = slaed9_(k : Int32*, kstart : Int32*, kstop : Int32*, n : Int32*, d__ : LibC::Float*, q : LibC::Float*, ldq : Int32*, rho : LibC::Float*, dlamda : LibC::Float*, w : LibC::Float*, s : LibC::Float*, lds : Int32*, info : Int32*)
    fun slaeda = slaeda_(n : Int32*, tlvls : Int32*, curlvl : Int32*, curpbm : Int32*, prmptr : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, givnum : LibC::Float*, q : LibC::Float*, qptr : Int32*, z__ : LibC::Float*, ztemp : LibC::Float*, info : Int32*)
    fun slaein = slaein_(rightv : LibC::Char*, noinit : LibC::Char*, n : Int32*, h__ : LibC::Float*, ldh : Int32*, wr : LibC::Float*, wi : LibC::Float*, vr : LibC::Float*, vi : LibC::Float*, b : LibC::Float*, ldb : Int32*, work : LibC::Float*, eps3 : LibC::Float*, smlnum : LibC::Float*, bignum : LibC::Float*, info : Int32*)
    fun slaev2 = slaev2_(a : LibC::Float*, b : LibC::Float*, c__ : LibC::Float*, rt1 : LibC::Float*, rt2 : LibC::Float*, cs1 : LibC::Float*, sn1 : LibC::Float*)
    fun slaexc = slaexc_(wantq : LibC::Char*, n : Int32*, t : LibC::Float*, ldt : Int32*, q : LibC::Float*, ldq : Int32*, j1 : Int32*, n1 : Int32*, n2 : Int32*, work : LibC::Float*, info : Int32*)
    fun slag2 = slag2_(a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, safmin : LibC::Float*, scale1 : LibC::Float*, scale2 : LibC::Float*, wr1 : LibC::Float*, wr2 : LibC::Float*, wi : LibC::Float*)
    fun slag2d = slag2d_(m : Int32*, n : Int32*, sa : LibC::Float*, ldsa : Int32*, a : LibC::Double*, lda : Int32*, info : Int32*)
    fun slags2 = slags2_(upper : LibC::Char*, a1 : LibC::Float*, a2 : LibC::Float*, a3 : LibC::Float*, b1 : LibC::Float*, b2 : LibC::Float*, b3 : LibC::Float*, csu : LibC::Float*, snu : LibC::Float*, csv : LibC::Float*, snv : LibC::Float*, csq : LibC::Float*, snq : LibC::Float*)
    fun slagtf = slagtf_(n : Int32*, a : LibC::Float*, lambda : LibC::Float*, b : LibC::Float*, c__ : LibC::Float*, tol : LibC::Float*, d__ : LibC::Float*, in : Int32*, info : Int32*)
    fun slagtm = slagtm_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, alpha : LibC::Float*, dl : LibC::Float*, d__ : LibC::Float*, du : LibC::Float*, x : LibC::Float*, ldx : Int32*, beta : LibC::Float*, b : LibC::Float*, ldb : Int32*)
    fun slagts = slagts_(job : Int32*, n : Int32*, a : LibC::Float*, b : LibC::Float*, c__ : LibC::Float*, d__ : LibC::Float*, in : Int32*, y : LibC::Float*, tol : LibC::Float*, info : Int32*)
    fun slagv2 = slagv2_(a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, alphar : LibC::Float*, alphai : LibC::Float*, beta : LibC::Float*, csl : LibC::Float*, snl : LibC::Float*, csr : LibC::Float*, snr : LibC::Float*)
    fun slahqr = slahqr_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h__ : LibC::Float*, ldh : Int32*, wr : LibC::Float*, wi : LibC::Float*, iloz : Int32*, ihiz : Int32*, z__ : LibC::Float*, ldz : Int32*, info : Int32*)
    fun slahr2 = slahr2_(n : Int32*, k : Int32*, nb : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, t : LibC::Float*, ldt : Int32*, y : LibC::Float*, ldy : Int32*)
    fun slahrd = slahrd_(n : Int32*, k : Int32*, nb : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, t : LibC::Float*, ldt : Int32*, y : LibC::Float*, ldy : Int32*)
    fun slaic1 = slaic1_(job : Int32*, j : Int32*, x : LibC::Float*, sest : LibC::Float*, w : LibC::Float*, gamma : LibC::Float*, sestpr : LibC::Float*, s : LibC::Float*, c__ : LibC::Float*)
    fun slaisnan = slaisnan_(sin1 : LibC::Float*, sin2 : LibC::Float*) : LibC::Char
    fun slaln2 = slaln2_(ltrans : LibC::Char*, na : Int32*, nw : Int32*, smin : LibC::Float*, ca : LibC::Float*, a : LibC::Float*, lda : Int32*, d1 : LibC::Float*, d2 : LibC::Float*, b : LibC::Float*, ldb : Int32*, wr : LibC::Float*, wi : LibC::Float*, x : LibC::Float*, ldx : Int32*, scale : LibC::Float*, xnorm : LibC::Float*, info : Int32*)
    fun slals0 = slals0_(icompq : Int32*, nl : Int32*, nr : Int32*, sqre : Int32*, nrhs : Int32*, b : LibC::Float*, ldb : Int32*, bx : LibC::Float*, ldbx : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, givnum : LibC::Float*, ldgnum : Int32*, poles : LibC::Float*, difl : LibC::Float*, difr : LibC::Float*, z__ : LibC::Float*, k : Int32*, c__ : LibC::Float*, s : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun slalsa = slalsa_(icompq : Int32*, smlsiz : Int32*, n : Int32*, nrhs : Int32*, b : LibC::Float*, ldb : Int32*, bx : LibC::Float*, ldbx : Int32*, u : LibC::Float*, ldu : Int32*, vt : LibC::Float*, k : Int32*, difl : LibC::Float*, difr : LibC::Float*, z__ : LibC::Float*, poles : LibC::Float*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, perm : Int32*, givnum : LibC::Float*, c__ : LibC::Float*, s : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun slalsd = slalsd_(uplo : LibC::Char*, smlsiz : Int32*, n : Int32*, nrhs : Int32*, d__ : LibC::Float*, e : LibC::Float*, b : LibC::Float*, ldb : Int32*, rcond : LibC::Float*, rank : Int32*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun slamc1 = slamc1_(beta : Int32*, t : Int32*, rnd : LibC::Char*, ieee1 : LibC::Char*)
    fun slamc2 = slamc2_(beta : Int32*, t : Int32*, rnd : LibC::Char*, eps : LibC::Float*, emin : Int32*, rmin : LibC::Float*, emax : Int32*, rmax : LibC::Float*)
    fun slamc3 = slamc3_(a : LibC::Float*, b : LibC::Float*) : LibC::Double
    fun slamc4 = slamc4_(emin : Int32*, start : LibC::Float*, base : Int32*)
    fun slamc5 = slamc5_(beta : Int32*, p : Int32*, emin : Int32*, ieee : LibC::Char*, emax : Int32*, rmax : LibC::Float*)
    fun slamch = slamch_(cmach : LibC::Char*) : LapackFloatReturn
    fun slamrg = slamrg_(n1 : Int32*, n2 : Int32*, a : LibC::Float*, strd1 : Int32*, strd2 : Int32*, index : Int32*)
    fun slaneg = slaneg_(n : Int32*, d__ : LibC::Float*, lld : LibC::Float*, sigma : LibC::Float*, pivmin : LibC::Float*, r__ : Int32*) : Int32
    fun slangb = slangb_(norm : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Float*, ldab : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun slange = slange_(norm : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun slangt = slangt_(norm : LibC::Char*, n : Int32*, dl : LibC::Float*, d : LibC::Float*, du : LibC::Float*) : LapackFloatReturn
    fun slanhs = slanhs_(norm : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun slansb = slansb_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, k : Int32*, ab : LibC::Float*, ldab : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun slansf = slansf_(norm : LibC::Char*, transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, work : LibC::Float*) : LapackFloatReturn
    fun slansp = slansp_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, work : LibC::Float*) : LapackFloatReturn
    fun slanst = slanst_(norm : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*) : LapackFloatReturn
    fun slansy = slansy_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun slantb = slantb_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, k : Int32*, ab : LibC::Float*, ldab : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun slantp = slantp_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, ap : LibC::Float*, work : LibC::Float*) : LapackFloatReturn
    fun slantr = slantr_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, work : LibC::Float*) : LapackFloatReturn
    fun slanv2 = slanv2_(a : LibC::Float*, b : LibC::Float*, c__ : LibC::Float*, d__ : LibC::Float*, rt1r : LibC::Float*, rt1i : LibC::Float*, rt2r : LibC::Float*, rt2i : LibC::Float*, cs : LibC::Float*, sn : LibC::Float*)
    fun slapll = slapll_(n : Int32*, x : LibC::Float*, incx : Int32*, y : LibC::Float*, incy : Int32*, ssmin : LibC::Float*)
    fun slapmt = slapmt_(forwrd : Int32*, m : Int32*, n : Int32*, x : LibC::Float*, ldx : Int32*, k : Int32*)
    fun slapy2 = slapy2_(x : LibC::Float*, y : LibC::Float*) : LapackFloatReturn
    fun slapy3 = slapy3_(x : LibC::Float*, y : LibC::Float*, z : LibC::Float*) : LapackFloatReturn
    fun slaqgb = slaqgb_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : LibC::Float*, ldab : Int32*, r__ : LibC::Float*, c__ : LibC::Float*, rowcnd : LibC::Float*, colcnd : LibC::Float*, amax : LibC::Float*, equed : LibC::Char*)
    fun slaqge = slaqge_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, r__ : LibC::Float*, c__ : LibC::Float*, rowcnd : LibC::Float*, colcnd : LibC::Float*, amax : LibC::Float*, equed : LibC::Char*)
    fun slaqp2 = slaqp2_(m : Int32*, n : Int32*, offset : Int32*, a : LibC::Float*, lda : Int32*, jpvt : Int32*, tau : LibC::Float*, vn1 : LibC::Float*, vn2 : LibC::Float*, work : LibC::Float*)
    fun slaqps = slaqps_(m : Int32*, n : Int32*, offset : Int32*, nb : Int32*, kb : Int32*, a : LibC::Float*, lda : Int32*, jpvt : Int32*, tau : LibC::Float*, vn1 : LibC::Float*, vn2 : LibC::Float*, auxv : LibC::Float*, f : LibC::Float*, ldf : Int32*)
    fun slaqr0 = slaqr0_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h__ : LibC::Float*, ldh : Int32*, wr : LibC::Float*, wi : LibC::Float*, iloz : Int32*, ihiz : Int32*, z__ : LibC::Float*, ldz : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun slaqr1 = slaqr1_(n : Int32*, h__ : LibC::Float*, ldh : Int32*, sr1 : LibC::Float*, si1 : LibC::Float*, sr2 : LibC::Float*, si2 : LibC::Float*, v : LibC::Float*)
    fun slaqr2 = slaqr2_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ktop : Int32*, kbot : Int32*, nw : Int32*, h__ : LibC::Float*, ldh : Int32*, iloz : Int32*, ihiz : Int32*, z__ : LibC::Float*, ldz : Int32*, ns : Int32*, nd : Int32*, sr : LibC::Float*, si : LibC::Float*, v : LibC::Float*, ldv : Int32*, nh : Int32*, t : LibC::Float*, ldt : Int32*, nv : Int32*, wv : LibC::Float*, ldwv : Int32*, work : LibC::Float*, lwork : Int32*)
    fun slaqr3 = slaqr3_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ktop : Int32*, kbot : Int32*, nw : Int32*, h__ : LibC::Float*, ldh : Int32*, iloz : Int32*, ihiz : Int32*, z__ : LibC::Float*, ldz : Int32*, ns : Int32*, nd : Int32*, sr : LibC::Float*, si : LibC::Float*, v : LibC::Float*, ldv : Int32*, nh : Int32*, t : LibC::Float*, ldt : Int32*, nv : Int32*, wv : LibC::Float*, ldwv : Int32*, work : LibC::Float*, lwork : Int32*)
    fun slaqr4 = slaqr4_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h__ : LibC::Float*, ldh : Int32*, wr : LibC::Float*, wi : LibC::Float*, iloz : Int32*, ihiz : Int32*, z__ : LibC::Float*, ldz : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun slaqr5 = slaqr5_(wantt : LibC::Char*, wantz : LibC::Char*, kacc22 : Int32*, n : Int32*, ktop : Int32*, kbot : Int32*, nshfts : Int32*, sr : LibC::Float*, si : LibC::Float*, h__ : LibC::Float*, ldh : Int32*, iloz : Int32*, ihiz : Int32*, z__ : LibC::Float*, ldz : Int32*, v : LibC::Float*, ldv : Int32*, u : LibC::Float*, ldu : Int32*, nv : Int32*, wv : LibC::Float*, ldwv : Int32*, nh : Int32*, wh : LibC::Float*, ldwh : Int32*)
    fun slaqsb = slaqsb_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Float*, ldab : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, equed : LibC::Char*)
    fun slaqsp = slaqsp_(uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, equed : LibC::Char*)
    fun slaqsy = slaqsy_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, equed : LibC::Char*)
    fun slaqtr = slaqtr_(ltran : LibC::Char*, lreal : LibC::Char*, n : Int32*, t : LibC::Float*, ldt : Int32*, b : LibC::Float*, w : LibC::Float*, scale : LibC::Float*, x : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun slar1v = slar1v_(n : Int32*, b1 : Int32*, bn : Int32*, lambda : LibC::Float*, d__ : LibC::Float*, l : LibC::Float*, ld : LibC::Float*, lld : LibC::Float*, pivmin : LibC::Float*, gaptol : LibC::Float*, z__ : LibC::Float*, wantnc : LibC::Char*, negcnt : Int32*, ztz : LibC::Float*, mingma : LibC::Float*, r__ : Int32*, isuppz : Int32*, nrminv : LibC::Float*, resid : LibC::Float*, rqcorr : LibC::Float*, work : LibC::Float*)
    fun slar2v = slar2v_(n : Int32*, x : LibC::Float*, y : LibC::Float*, z__ : LibC::Float*, incx : Int32*, c__ : LibC::Float*, s : LibC::Float*, incc : Int32*)
    fun slarf = slarf_(side : LibC::Char*, m : Int32*, n : Int32*, v : LibC::Float*, incv : Int32*, tau : LibC::Float*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*)
    fun slarfb = slarfb_(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, v : LibC::Float*, ldv : Int32*, t : LibC::Float*, ldt : Int32*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*, ldwork : Int32*)
    fun slarfg = slarfg_(n : Int32*, alpha : LibC::Float*, x : LibC::Float*, incx : Int32*, tau : LibC::Float*)
    fun slarfp = slarfp_(n : Int32*, alpha : LibC::Float*, x : LibC::Float*, incx : Int32*, tau : LibC::Float*)
    fun slarft = slarft_(direct : LibC::Char*, storev : LibC::Char*, n : Int32*, k : Int32*, v : LibC::Float*, ldv : Int32*, tau : LibC::Float*, t : LibC::Float*, ldt : Int32*)
    fun slarfx = slarfx_(side : LibC::Char*, m : Int32*, n : Int32*, v : LibC::Float*, tau : LibC::Float*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*)
    fun slargv = slargv_(n : Int32*, x : LibC::Float*, incx : Int32*, y : LibC::Float*, incy : Int32*, c__ : LibC::Float*, incc : Int32*)
    fun slarnv = slarnv_(idist : Int32*, iseed : Int32*, n : Int32*, x : LibC::Float*)
    fun slarra = slarra_(n : Int32*, d__ : LibC::Float*, e : LibC::Float*, e2 : LibC::Float*, spltol : LibC::Float*, tnrm : LibC::Float*, nsplit : Int32*, isplit : Int32*, info : Int32*)
    fun slarrb = slarrb_(n : Int32*, d__ : LibC::Float*, lld : LibC::Float*, ifirst : Int32*, ilast : Int32*, rtol1 : LibC::Float*, rtol2 : LibC::Float*, offset : Int32*, w : LibC::Float*, wgap : LibC::Float*, werr : LibC::Float*, work : LibC::Float*, iwork : Int32*, pivmin : LibC::Float*, spdiam : LibC::Float*, twist : Int32*, info : Int32*)
    fun slarrc = slarrc_(jobt : LibC::Char*, n : Int32*, vl : LibC::Float*, vu : LibC::Float*, d__ : LibC::Float*, e : LibC::Float*, pivmin : LibC::Float*, eigcnt : Int32*, lcnt : Int32*, rcnt : Int32*, info : Int32*)
    fun slarrd = slarrd_(range : LibC::Char*, order : LibC::Char*, n : Int32*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, gers : LibC::Float*, reltol : LibC::Float*, d__ : LibC::Float*, e : LibC::Float*, e2 : LibC::Float*, pivmin : LibC::Float*, nsplit : Int32*, isplit : Int32*, m : Int32*, w : LibC::Float*, werr : LibC::Float*, wl : LibC::Float*, wu : LibC::Float*, iblock : Int32*, indexw : Int32*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun slarre = slarre_(range : LibC::Char*, n : Int32*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, d__ : LibC::Float*, e : LibC::Float*, e2 : LibC::Float*, rtol1 : LibC::Float*, rtol2 : LibC::Float*, spltol : LibC::Float*, nsplit : Int32*, isplit : Int32*, m : Int32*, w : LibC::Float*, werr : LibC::Float*, wgap : LibC::Float*, iblock : Int32*, indexw : Int32*, gers : LibC::Float*, pivmin : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun slarrf = slarrf_(n : Int32*, d__ : LibC::Float*, l : LibC::Float*, ld : LibC::Float*, clstrt : Int32*, clend : Int32*, w : LibC::Float*, wgap : LibC::Float*, werr : LibC::Float*, spdiam : LibC::Float*, clgapl : LibC::Float*, clgapr : LibC::Float*, pivmin : LibC::Float*, sigma : LibC::Float*, dplus : LibC::Float*, lplus : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun slarrj = slarrj_(n : Int32*, d__ : LibC::Float*, e2 : LibC::Float*, ifirst : Int32*, ilast : Int32*, rtol : LibC::Float*, offset : Int32*, w : LibC::Float*, werr : LibC::Float*, work : LibC::Float*, iwork : Int32*, pivmin : LibC::Float*, spdiam : LibC::Float*, info : Int32*)
    fun slarrk = slarrk_(n : Int32*, iw : Int32*, gl : LibC::Float*, gu : LibC::Float*, d__ : LibC::Float*, e2 : LibC::Float*, pivmin : LibC::Float*, reltol : LibC::Float*, w : LibC::Float*, werr : LibC::Float*, info : Int32*)
    fun slarrr = slarrr_(n : Int32*, d__ : LibC::Float*, e : LibC::Float*, info : Int32*)
    fun slarrv = slarrv_(n : Int32*, vl : LibC::Float*, vu : LibC::Float*, d__ : LibC::Float*, l : LibC::Float*, pivmin : LibC::Float*, isplit : Int32*, m : Int32*, dol : Int32*, dou : Int32*, minrgp : LibC::Float*, rtol1 : LibC::Float*, rtol2 : LibC::Float*, w : LibC::Float*, werr : LibC::Float*, wgap : LibC::Float*, iblock : Int32*, indexw : Int32*, gers : LibC::Float*, z__ : LibC::Float*, ldz : Int32*, isuppz : Int32*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun slarscl2 = slarscl2_(m : Int32*, n : Int32*, d__ : LibC::Float*, x : LibC::Float*, ldx : Int32*)
    fun slartg = slartg_(f : LibC::Float*, g : LibC::Float*, cs : LibC::Float*, sn : LibC::Float*, r__ : LibC::Float*)
    fun slartv = slartv_(n : Int32*, x : LibC::Float*, incx : Int32*, y : LibC::Float*, incy : Int32*, c__ : LibC::Float*, s : LibC::Float*, incc : Int32*)
    fun slaruv = slaruv_(iseed : Int32*, n : Int32*, x : LibC::Float*)
    fun slarz = slarz_(side : LibC::Char*, m : Int32*, n : Int32*, l : Int32*, v : LibC::Float*, incv : Int32*, tau : LibC::Float*, c__ : LibC::Float*, ldc : Int32*, work : LibC::Float*)
    fun slarzb = slarzb_(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, l : Int32*, v : LibC::Float*, ldv : Int32*, t : LibC::Float*, ldt : Int32*, c__ : LibC::Float*, ldc : Int32*, work : LibC::Float*, ldwork : Int32*)
    fun slarzt = slarzt_(direct : LibC::Char*, storev : LibC::Char*, n : Int32*, k : Int32*, v : LibC::Float*, ldv : Int32*, tau : LibC::Float*, t : LibC::Float*, ldt : Int32*)
    fun slas2 = slas2_(f : LibC::Float*, g : LibC::Float*, h__ : LibC::Float*, ssmin : LibC::Float*, ssmax : LibC::Float*)
    fun slascl = slascl_(type : LibC::Char*, kl : Int32*, ku : Int32*, cfrom : LibC::Float*, cto : LibC::Float*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, info : Int32*)
    fun slascl2 = slascl2_(m : Int32*, n : Int32*, d__ : LibC::Float*, x : LibC::Float*, ldx : Int32*)
    fun slasd0 = slasd0_(n : Int32*, sqre : Int32*, d__ : LibC::Float*, e : LibC::Float*, u : LibC::Float*, ldu : Int32*, vt : LibC::Float*, ldvt : Int32*, smlsiz : Int32*, iwork : Int32*, work : LibC::Float*, info : Int32*)
    fun slasd1 = slasd1_(nl : Int32*, nr : Int32*, sqre : Int32*, d__ : LibC::Float*, alpha : LibC::Float*, beta : LibC::Float*, u : LibC::Float*, ldu : Int32*, vt : LibC::Float*, ldvt : Int32*, idxq : Int32*, iwork : Int32*, work : LibC::Float*, info : Int32*)
    fun slasd2 = slasd2_(nl : Int32*, nr : Int32*, sqre : Int32*, k : Int32*, d__ : LibC::Float*, z__ : LibC::Float*, alpha : LibC::Float*, beta : LibC::Float*, u : LibC::Float*, ldu : Int32*, vt : LibC::Float*, ldvt : Int32*, dsigma : LibC::Float*, u2 : LibC::Float*, ldu2 : Int32*, vt2 : LibC::Float*, ldvt2 : Int32*, idxp : Int32*, idx : Int32*, idxc : Int32*, idxq : Int32*, coltyp : Int32*, info : Int32*)
    fun slasd3 = slasd3_(nl : Int32*, nr : Int32*, sqre : Int32*, k : Int32*, d__ : LibC::Float*, q : LibC::Float*, ldq : Int32*, dsigma : LibC::Float*, u : LibC::Float*, ldu : Int32*, u2 : LibC::Float*, ldu2 : Int32*, vt : LibC::Float*, ldvt : Int32*, vt2 : LibC::Float*, ldvt2 : Int32*, idxc : Int32*, ctot : Int32*, z__ : LibC::Float*, info : Int32*)
    fun slasd4 = slasd4_(n : Int32*, i__ : Int32*, d__ : LibC::Float*, z__ : LibC::Float*, delta : LibC::Float*, rho : LibC::Float*, sigma : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun slasd5 = slasd5_(i__ : Int32*, d__ : LibC::Float*, z__ : LibC::Float*, delta : LibC::Float*, rho : LibC::Float*, dsigma : LibC::Float*, work : LibC::Float*)
    fun slasd6 = slasd6_(icompq : Int32*, nl : Int32*, nr : Int32*, sqre : Int32*, d__ : LibC::Float*, vf : LibC::Float*, vl : LibC::Float*, alpha : LibC::Float*, beta : LibC::Float*, idxq : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, givnum : LibC::Float*, ldgnum : Int32*, poles : LibC::Float*, difl : LibC::Float*, difr : LibC::Float*, z__ : LibC::Float*, k : Int32*, c__ : LibC::Float*, s : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun slasd7 = slasd7_(icompq : Int32*, nl : Int32*, nr : Int32*, sqre : Int32*, k : Int32*, d__ : LibC::Float*, z__ : LibC::Float*, zw : LibC::Float*, vf : LibC::Float*, vfw : LibC::Float*, vl : LibC::Float*, vlw : LibC::Float*, alpha : LibC::Float*, beta : LibC::Float*, dsigma : LibC::Float*, idx : Int32*, idxp : Int32*, idxq : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, givnum : LibC::Float*, ldgnum : Int32*, c__ : LibC::Float*, s : LibC::Float*, info : Int32*)
    fun slasd8 = slasd8_(icompq : Int32*, k : Int32*, d__ : LibC::Float*, z__ : LibC::Float*, vf : LibC::Float*, vl : LibC::Float*, difl : LibC::Float*, difr : LibC::Float*, lddifr : Int32*, dsigma : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun slasda = slasda_(icompq : Int32*, smlsiz : Int32*, n : Int32*, sqre : Int32*, d__ : LibC::Float*, e : LibC::Float*, u : LibC::Float*, ldu : Int32*, vt : LibC::Float*, k : Int32*, difl : LibC::Float*, difr : LibC::Float*, z__ : LibC::Float*, poles : LibC::Float*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, perm : Int32*, givnum : LibC::Float*, c__ : LibC::Float*, s : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun slasdq = slasdq_(uplo : LibC::Char*, sqre : Int32*, n : Int32*, ncvt : Int32*, nru : Int32*, ncc : Int32*, d__ : LibC::Float*, e : LibC::Float*, vt : LibC::Float*, ldvt : Int32*, u : LibC::Float*, ldu : Int32*, c__ : LibC::Float*, ldc : Int32*, work : LibC::Float*, info : Int32*)
    fun slasdt = slasdt_(n : Int32*, lvl : Int32*, nd : Int32*, inode : Int32*, ndiml : Int32*, ndimr : Int32*, msub : Int32*)
    fun slaset = slaset_(uplo : LibC::Char*, m : Int32*, n : Int32*, alpha : LibC::Float*, beta : LibC::Float*, a : LibC::Float*, lda : Int32*)
    fun slasq1 = slasq1_(n : Int32*, d__ : LibC::Float*, e : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun slasq2 = slasq2_(n : Int32*, z__ : LibC::Float*, info : Int32*)
    fun slasq3 = slasq3_(i0 : Int32*, n0 : Int32*, z__ : LibC::Float*, pp : Int32*, dmin__ : LibC::Float*, sigma : LibC::Float*, desig : LibC::Float*, qmax : LibC::Float*, nfail : Int32*, iter : Int32*, ndiv : Int32*, ieee : LibC::Char*, ttype : Int32*, dmin1 : LibC::Float*, dmin2 : LibC::Float*, dn : LibC::Float*, dn1 : LibC::Float*, dn2 : LibC::Float*, g : LibC::Float*, tau : LibC::Float*)
    fun slasq4 = slasq4_(i0 : Int32*, n0 : Int32*, z__ : LibC::Float*, pp : Int32*, n0in : Int32*, dmin__ : LibC::Float*, dmin1 : LibC::Float*, dmin2 : LibC::Float*, dn : LibC::Float*, dn1 : LibC::Float*, dn2 : LibC::Float*, tau : LibC::Float*, ttype : Int32*, g : LibC::Float*)
    fun slasq5 = slasq5_(i0 : Int32*, n0 : Int32*, z__ : LibC::Float*, pp : Int32*, tau : LibC::Float*, dmin__ : LibC::Float*, dmin1 : LibC::Float*, dmin2 : LibC::Float*, dn : LibC::Float*, dnm1 : LibC::Float*, dnm2 : LibC::Float*, ieee : LibC::Char*)
    fun slasq6 = slasq6_(i0 : Int32*, n0 : Int32*, z__ : LibC::Float*, pp : Int32*, dmin__ : LibC::Float*, dmin1 : LibC::Float*, dmin2 : LibC::Float*, dn : LibC::Float*, dnm1 : LibC::Float*, dnm2 : LibC::Float*)
    fun slasr = slasr_(side : LibC::Char*, pivot : LibC::Char*, direct : LibC::Char*, m : Int32*, n : Int32*, c__ : LibC::Float*, s : LibC::Float*, a : LibC::Float*, lda : Int32*)
    fun slasrt = slasrt_(id : LibC::Char*, n : Int32*, d : LibC::Float*, info : Int32*)
    fun slassq = slassq_(n : Int32*, x : LibC::Float*, incx : Int32*, scale : LibC::Float*, sumsq : LibC::Float*)
    fun slasv2 = slasv2_(f : LibC::Float*, g : LibC::Float*, h__ : LibC::Float*, ssmin : LibC::Float*, ssmax : LibC::Float*, snr : LibC::Float*, csr : LibC::Float*, snl : LibC::Float*, csl : LibC::Float*)
    fun slaswp = slaswp_(n : Int32*, a : LibC::Float*, lda : Int32*, k1 : Int32*, k2 : Int32*, ipiv : Int32*, incx : Int32*)
    fun slasy2 = slasy2_(ltranl : LibC::Char*, ltranr : LibC::Char*, isgn : Int32*, n1 : Int32*, n2 : Int32*, tl : LibC::Float*, ldtl : Int32*, tr : LibC::Float*, ldtr : Int32*, b : LibC::Float*, ldb : Int32*, scale : LibC::Float*, x : LibC::Float*, ldx : Int32*, xnorm : LibC::Float*, info : Int32*)
    fun slasyf = slasyf_(uplo : LibC::Char*, n : Int32*, nb : Int32*, kb : Int32*, a : LibC::Float*, lda : Int32*, ipiv : Int32*, w : LibC::Float*, ldw : Int32*, info : Int32*)
    fun slatbs = slatbs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Float*, ldab : Int32*, x : LibC::Float*, scale : LibC::Float*, cnorm : LibC::Float*, info : Int32*)
    fun slatdf = slatdf_(ijob : Int32*, n : Int32*, z__ : LibC::Float*, ldz : Int32*, rhs : LibC::Float*, rdsum : LibC::Float*, rdscal : LibC::Float*, ipiv : Int32*, jpiv : Int32*)
    fun slatps = slatps_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Int32*, ap : LibC::Float*, x : LibC::Float*, scale : LibC::Float*, cnorm : LibC::Float*, info : Int32*)
    fun slatrd = slatrd_(uplo : LibC::Char*, n : Int32*, nb : Int32*, a : LibC::Float*, lda : Int32*, e : LibC::Float*, tau : LibC::Float*, w : LibC::Float*, ldw : Int32*)
    fun slatrs = slatrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, x : LibC::Float*, scale : LibC::Float*, cnorm : LibC::Float*, info : Int32*)
    fun slatrz = slatrz_(m : Int32*, n : Int32*, l : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*)
    fun slatzm = slatzm_(side : LibC::Char*, m : Int32*, n : Int32*, v : LibC::Float*, incv : Int32*, tau : LibC::Float*, c1 : LibC::Float*, c2 : LibC::Float*, ldc : Int32*, work : LibC::Float*)
    fun slauu2 = slauu2_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, info : Int32*)
    fun slauum = slauum_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, info : Int32*)
    fun smaxloc = smaxloc_(a : LibC::Float*, dimm : Int32*) : Int32
    fun sopgtr = sopgtr_(uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, tau : LibC::Float*, q : LibC::Float*, ldq : Int32*, work : LibC::Float*, info : Int32*)
    fun sopmtr = sopmtr_(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, ap : LibC::Float*, tau : LibC::Float*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*, info : Int32*)
    fun sorg2l = sorg2l_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sorg2r = sorg2r_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sorgbr = sorgbr_(vect : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sorghr = sorghr_(n : Int32*, ilo : Int32*, ihi : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sorgl2 = sorgl2_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sorglq = sorglq_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sorgql = sorgql_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sorgqr = sorgqr_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sorgr2 = sorgr2_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sorgrq = sorgrq_(m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sorgtr = sorgtr_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sorm2l = sorm2l_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, c__ : LibC::Float*, ldc : Int32*, work : LibC::Float*, info : Int32*)
    fun sorm2r = sorm2r_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, c__ : LibC::Float*, ldc : Int32*, work : LibC::Float*, info : Int32*)
    fun sormbr = sormbr_(vect : LibC::Char*, side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sormhr = sormhr_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, ilo : Int32*, ihi : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sorml2 = sorml2_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, c__ : LibC::Float*, ldc : Int32*, work : LibC::Float*, info : Int32*)
    fun sormlq = sormlq_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sormql = sormql_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sormqr = sormqr_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sormr2 = sormr2_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, c__ : LibC::Float*, ldc : Int32*, work : LibC::Float*, info : Int32*)
    fun sormr3 = sormr3_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, l : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, c__ : LibC::Float*, ldc : Int32*, work : LibC::Float*, info : Int32*)
    fun sormrq = sormrq_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sormrz = sormrz_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, l : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun sormtr = sormtr_(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, c : LibC::Float*, ldc : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun spbcon = spbcon_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Float*, ldab : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun spbequ = spbequ_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Float*, ldab : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun spbrfs = spbrfs_(uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : LibC::Float*, ldab : Int32*, afb : LibC::Float*, ldafb : Int32*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun spbstf = spbstf_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Float*, ldab : Int32*, info : Int32*)
    fun spbsv = spbsv_(uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : LibC::Float*, ldab : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun spbsvx = spbsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : LibC::Float*, ldab : Int32*, afb : LibC::Float*, ldafb : Int32*, equed : LibC::Char*, s : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun spbtf2 = spbtf2_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Float*, ldab : Int32*, info : Int32*)
    fun spbtrf = spbtrf_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Float*, ldab : Int32*, info : Int32*)
    fun spbtrs = spbtrs_(uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : LibC::Float*, ldab : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun spftrf = spftrf_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, info : Int32*)
    fun spftri = spftri_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, info : Int32*)
    fun spftrs = spftrs_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun spocon = spocon_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun spoequ = spoequ_(n : Int32*, a : LibC::Float*, lda : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun spoequb = spoequb_(n : Int32*, a : LibC::Float*, lda : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun sporfs = sporfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sporfsx = sporfsx_(uplo : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, s : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sposv = sposv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun sposvx = sposvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, equed : LibC::Char*, s : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sposvxx = sposvxx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, equed : LibC::Char*, s : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, rpvgrw : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun spotf2 = spotf2_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, info : Int32*)
    fun spotrf = spotrf_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, info : Int32*)
    fun spotri = spotri_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, info : Int32*)
    fun spotrs = spotrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun sppcon = sppcon_(uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, anorm : LibC::Float*, rcond : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sppequ = sppequ_(uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, info : Int32*)
    fun spprfs = spprfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Float*, afp : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sppsv = sppsv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Float*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun sppsvx = sppsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Float*, afp : LibC::Float*, equed : LibC::Char*, s : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun spptrf = spptrf_(uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, info : Int32*)
    fun spptri = spptri_(uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, info : Int32*)
    fun spptrs = spptrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Float*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun spstf2 = spstf2_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, piv : Int32*, rank : Int32*, tol : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun spstrf = spstrf_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, piv : Int32*, rank : Int32*, tol : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sptcon = sptcon_(n : Int32*, d : LibC::Float*, e : LibC::Float*, anorm : LibC::Float*, rcond : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun spteqr = spteqr_(compz : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, info : Int32*)
    fun sptrfs = sptrfs_(n : Int32*, nrhs : Int32*, d : LibC::Float*, e : LibC::Float*, df : LibC::Float*, ef : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun sptsv = sptsv_(n : Int32*, nrhs : Int32*, d : LibC::Float*, e : LibC::Float*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun sptsvx = sptsvx_(fact : LibC::Char*, n : Int32*, nrhs : Int32*, d : LibC::Float*, e : LibC::Float*, df : LibC::Float*, ef : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun spttrf = spttrf_(n : Int32*, d : LibC::Float*, e : LibC::Float*, info : Int32*)
    fun spttrs = spttrs_(n : Int32*, nrhs : Int32*, d : LibC::Float*, e : LibC::Float*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun sptts2 = sptts2_(n : Int32*, nrhs : Int32*, d__ : LibC::Float*, e : LibC::Float*, b : LibC::Float*, ldb : Int32*)
    fun srscl = srscl_(n : Int32*, sa : LibC::Float*, sx : LibC::Float*, incx : Int32*)
    fun ssbev = ssbev_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Float*, ldab : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, info : Int32*)
    fun ssbevd = ssbevd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Float*, ldab : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun ssbevx = ssbevx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Float*, ldab : Int32*, q : LibC::Float*, ldq : Int32*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun ssbgst = ssbgst_(vect : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : LibC::Float*, ldab : Int32*, bb : LibC::Float*, ldbb : Int32*, x : LibC::Float*, ldx : Int32*, work : LibC::Float*, info : Int32*)
    fun ssbgv = ssbgv_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : LibC::Float*, ldab : Int32*, bb : LibC::Float*, ldbb : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, info : Int32*)
    fun ssbgvd = ssbgvd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : LibC::Float*, ldab : Int32*, bb : LibC::Float*, ldbb : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun ssbgvx = ssbgvx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : LibC::Float*, ldab : Int32*, bb : LibC::Float*, ldbb : Int32*, q : LibC::Float*, ldq : Int32*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun ssbtrd = ssbtrd_(vect : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Float*, ldab : Int32*, d : LibC::Float*, e : LibC::Float*, q : LibC::Float*, ldq : Int32*, work : LibC::Float*, info : Int32*)
    fun ssfrk = ssfrk_(transr : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, n : Int32*, k : Int32*, alpha : LibC::Float*, a : LibC::Float*, lda : Int32*, beta : LibC::Float*, c : LibC::Float*)
    fun sspcon = sspcon_(uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, ipiv : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sspev = sspev_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, info : Int32*)
    fun sspevd = sspevd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun sspevx = sspevx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun sspgst = sspgst_(itype : Int32*, uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, bp : LibC::Float*, info : Int32*)
    fun sspgv = sspgv_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, bp : LibC::Float*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, info : Int32*)
    fun sspgvd = sspgvd_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, bp : LibC::Float*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun sspgvx = sspgvx_(itype : Int32*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, bp : LibC::Float*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun ssprfs = ssprfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Float*, afp : LibC::Float*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sspsv = sspsv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Float*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun sspsvx = sspsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Float*, afp : LibC::Float*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun ssptrd = ssptrd_(uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, d : LibC::Float*, e : LibC::Float*, tau : LibC::Float*, info : Int32*)
    fun ssptrf = ssptrf_(uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, ipiv : Int32*, info : Int32*)
    fun ssptri = ssptri_(uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, ipiv : Int32*, work : LibC::Float*, info : Int32*)
    fun ssptrs = ssptrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Float*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun sstebz = sstebz_(range : LibC::Char*, order : LibC::Char*, n : Int32*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, d : LibC::Float*, e : LibC::Float*, m : Int32*, nsplit : Int32*, w : LibC::Float*, iblock : Int32*, isplit : Int32*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun sstedc = sstedc_(compz : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun sstegr = sstegr_(jobz : LibC::Char*, range : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, isuppz : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun sstein = sstein_(n : Int32*, d : LibC::Float*, e : LibC::Float*, m : Int32*, w : LibC::Float*, iblock : Int32*, isplit : Int32*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun sstemr = sstemr_(jobz : LibC::Char*, range : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, m : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, nzc : Int32*, isuppz : Int32*, tryrac : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun ssteqr = ssteqr_(compz : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, info : Int32*)
    fun ssterf = ssterf_(n : Int32*, d : LibC::Float*, e : LibC::Float*, info : Int32*)
    fun sstev = sstev_(jobz : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, info : Int32*)
    fun sstevd = sstevd_(jobz : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun sstevr = sstevr_(jobz : LibC::Char*, range : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, isuppz : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun sstevx = sstevx_(jobz : LibC::Char*, range : LibC::Char*, n : Int32*, d : LibC::Float*, e : LibC::Float*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun ssycon = ssycon_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, ipiv : Int32*, anorm : LibC::Float*, rcond : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun ssyequb = ssyequb_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, s : LibC::Float*, scond : LibC::Float*, amax : LibC::Float*, work : LibC::Float*, info : Int32*)
    fun ssyev = ssyev_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, w : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun ssyevd = ssyevd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, w : LibC::Float*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun ssyevr = ssyevr_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, isuppz : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun ssyevx = ssyevx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun ssygs2 = ssygs2_(itype : Int32*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun ssygst = ssygst_(itype : Int32*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun ssygv = ssygv_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, w : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun ssygvd = ssygvd_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, w : LibC::Float*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun ssygvx = ssygvx_(itype : Int32*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, vl : LibC::Float*, vu : LibC::Float*, il : Int32*, iu : Int32*, abstol : LibC::Float*, m : Int32*, w : LibC::Float*, z : LibC::Float*, ldz : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun ssyrfs = ssyrfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun ssyrfsx = ssyrfsx_(uplo : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, ipiv : Int32*, s : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun ssysv = ssysv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun ssysvx = ssysvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun ssysvxx = ssysvxx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, af : LibC::Float*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, s : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, rcond : LibC::Float*, rpvgrw : LibC::Float*, berr : LibC::Float*, n_err_bnds : Int32*, err_bnds_norm : LibC::Float*, err_bnds_comp : LibC::Float*, nparams : Int32*, params : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun ssytd2 = ssytd2_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, d__ : LibC::Float*, e : LibC::Float*, tau : LibC::Float*, info : Int32*)
    fun ssytf2 = ssytf2_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun ssytrd = ssytrd_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, d : LibC::Float*, e : LibC::Float*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun ssytrf = ssytrf_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, ipiv : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun ssytri = ssytri_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, ipiv : Int32*, work : LibC::Float*, info : Int32*)
    fun ssytrs = ssytrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, ipiv : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun stbcon = stbcon_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, kd : Int32*, ab : LibC::Float*, ldab : Int32*, rcond : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun stbrfs = stbrfs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : LibC::Float*, ldab : Int32*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun stbtrs = stbtrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : LibC::Float*, ldab : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun stfsm = stfsm_(transr : LibC::Char*, side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, m : Int32*, n : Int32*, alpha : LibC::Float*, a : LibC::Float*, b : LibC::Float*, ldb : Int32*)
    fun stftri = stftri_(transr : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : LibC::Float*, info : Int32*)
    fun stfttp = stfttp_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, arf : LibC::Float*, ap : LibC::Float*, info : Int32*)
    fun stfttr = stfttr_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, arf : LibC::Float*, a : LibC::Float*, lda : Int32*, info : Int32*)
    fun stgevc = stgevc_(side : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, s : LibC::Float*, lds : Int32*, p : LibC::Float*, ldp : Int32*, vl : LibC::Float*, ldvl : Int32*, vr : LibC::Float*, ldvr : Int32*, mm : Int32*, m : Int32*, work : LibC::Float*, info : Int32*)
    fun stgex2 = stgex2_(wantq : LibC::Char*, wantz : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, q : LibC::Float*, ldq : Int32*, z__ : LibC::Float*, ldz : Int32*, j1 : Int32*, n1 : Int32*, n2 : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun stgexc = stgexc_(wantq : Int32*, wantz : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, q : LibC::Float*, ldq : Int32*, z : LibC::Float*, ldz : Int32*, ifst : Int32*, ilst : Int32*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun stgsen = stgsen_(ijob : Int32*, wantq : Int32*, wantz : Int32*, select : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, alphar : LibC::Float*, alphai : LibC::Float*, beta : LibC::Float*, q : LibC::Float*, ldq : Int32*, z : LibC::Float*, ldz : Int32*, m : Int32*, pl : LibC::Float*, pr : LibC::Float*, dif : LibC::Float*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun stgsja = stgsja_(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Int32*, p : Int32*, n : Int32*, k : Int32*, l : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, tola : LibC::Float*, tolb : LibC::Float*, alpha : LibC::Float*, beta : LibC::Float*, u : LibC::Float*, ldu : Int32*, v : LibC::Float*, ldv : Int32*, q : LibC::Float*, ldq : Int32*, work : LibC::Float*, ncycle : Int32*, info : Int32*)
    fun stgsna = stgsna_(job : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, vl : LibC::Float*, ldvl : Int32*, vr : LibC::Float*, ldvr : Int32*, s : LibC::Float*, dif : LibC::Float*, mm : Int32*, m : Int32*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun stgsy2 = stgsy2_(trans : LibC::Char*, ijob : Int32*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, c__ : LibC::Float*, ldc : Int32*, d__ : LibC::Float*, ldd : Int32*, e : LibC::Float*, lde : Int32*, f : LibC::Float*, ldf : Int32*, scale : LibC::Float*, rdsum : LibC::Float*, rdscal : LibC::Float*, iwork : Int32*, pq : Int32*, info : Int32*)
    fun stgsyl = stgsyl_(trans : LibC::Char*, ijob : Int32*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, c : LibC::Float*, ldc : Int32*, d : LibC::Float*, ldd : Int32*, e : LibC::Float*, lde : Int32*, f : LibC::Float*, ldf : Int32*, dif : LibC::Float*, scale : LibC::Float*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun stpcon = stpcon_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, ap : LibC::Float*, rcond : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun stprfs = stprfs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Float*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun stptri = stptri_(uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, ap : LibC::Float*, info : Int32*)
    fun stptrs = stptrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, ap : LibC::Float*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun stpttf = stpttf_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, arf : LibC::Float*, info : Int32*)
    fun stpttr = stpttr_(uplo : LibC::Char*, n : Int32*, ap : LibC::Float*, a : LibC::Float*, lda : Int32*, info : Int32*)
    fun strcon = strcon_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, rcond : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun strevc = strevc_(side : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, t : LibC::Float*, ldt : Int32*, vl : LibC::Float*, ldvl : Int32*, vr : LibC::Float*, ldvr : Int32*, mm : Int32*, m : Int32*, work : LibC::Float*, info : Int32*)
    fun strexc = strexc_(compq : LibC::Char*, n : Int32*, t : LibC::Float*, ldt : Int32*, q : LibC::Float*, ldq : Int32*, ifst : Int32*, ilst : Int32*, work : LibC::Float*, info : Int32*)
    fun strrfs = strrfs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, x : LibC::Float*, ldx : Int32*, ferr : LibC::Float*, berr : LibC::Float*, work : LibC::Float*, iwork : Int32*, info : Int32*)
    fun strsen = strsen_(job : LibC::Char*, compq : LibC::Char*, select : Int32*, n : Int32*, t : LibC::Float*, ldt : Int32*, q : LibC::Float*, ldq : Int32*, wr : LibC::Float*, wi : LibC::Float*, m : Int32*, s : LibC::Float*, sep : LibC::Float*, work : LibC::Float*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun strsna = strsna_(job : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, t : LibC::Float*, ldt : Int32*, vl : LibC::Float*, ldvl : Int32*, vr : LibC::Float*, ldvr : Int32*, s : LibC::Float*, sep : LibC::Float*, mm : Int32*, m : Int32*, work : LibC::Float*, ldwork : Int32*, iwork : Int32*, info : Int32*)
    fun strsyl = strsyl_(trana : LibC::Char*, tranb : LibC::Char*, isgn : Int32*, m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, c : LibC::Float*, ldc : Int32*, scale : LibC::Float*, info : Int32*)
    fun strti2 = strti2_(uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, info : Int32*)
    fun strtri = strtri_(uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, info : Int32*)
    fun strtrs = strtrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, a : LibC::Float*, lda : Int32*, b : LibC::Float*, ldb : Int32*, info : Int32*)
    fun strttf = strttf_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, arf : LibC::Float*, info : Int32*)
    fun strttp = strttp_(uplo : LibC::Char*, n : Int32*, a : LibC::Float*, lda : Int32*, ap : LibC::Float*, info : Int32*)
    fun stzrqf = stzrqf_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, info : Int32*)
    fun stzrzf = stzrzf_(m : Int32*, n : Int32*, a : LibC::Float*, lda : Int32*, tau : LibC::Float*, work : LibC::Float*, lwork : Int32*, info : Int32*)
    fun xerbla = xerbla_(srname : LibC::Char*, info : Int32*)
    fun xerbla_array_ = xerbla_array__(srname_array__ : LibC::Char*, srname_len__ : Int32*, info : Int32*, srname_array_len : LibC::Int)
    fun zbdsqr = zbdsqr_(uplo : LibC::Char*, n : Int32*, ncvt : Int32*, nru : Int32*, ncc : Int32*, d : LibC::Double*, e : LibC::Double*, vt : ComplexDouble*, ldvt : Int32*, u : ComplexDouble*, ldu : Int32*, c : ComplexDouble*, ldc : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zcgesv = zcgesv_(n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, work : ComplexDouble*, swork : ComplexFloat*, rwork : LibC::Double*, iter : Int32*, info : Int32*)
    fun zcposv = zcposv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, work : ComplexDouble*, swork : ComplexFloat*, rwork : LibC::Double*, iter : Int32*, info : Int32*)
    fun zdrscl = zdrscl_(n : Int32*, sa : LibC::Double*, sx : ComplexDouble*, incx : Int32*)
    fun zgbbrd = zgbbrd_(vect : LibC::Char*, m : Int32*, n : Int32*, ncc : Int32*, kl : Int32*, ku : Int32*, ab : ComplexDouble*, ldab : Int32*, d : LibC::Double*, e : LibC::Double*, q : ComplexDouble*, ldq : Int32*, pt : ComplexDouble*, ldpt : Int32*, c : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgbcon = zgbcon_(norm : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexDouble*, ldab : Int32*, ipiv : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgbequ = zgbequ_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexDouble*, ldab : Int32*, r : LibC::Double*, c : LibC::Double*, rowcnd : LibC::Double*, colcnd : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun zgbequb = zgbequb_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexDouble*, ldab : Int32*, r : LibC::Double*, c : LibC::Double*, rowcnd : LibC::Double*, colcnd : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun zgbrfs = zgbrfs_(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexDouble*, ldab : Int32*, afb : ComplexDouble*, ldafb : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgbrfsx = zgbrfsx_(trans : LibC::Char*, equed : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexDouble*, ldab : Int32*, afb : ComplexDouble*, ldafb : Int32*, ipiv : Int32*, r : LibC::Double*, c : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgbsv = zgbsv_(n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexDouble*, ldab : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zgbsvx = zgbsvx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexDouble*, ldab : Int32*, afb : ComplexDouble*, ldafb : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Double*, c : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgbsvxx = zgbsvxx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexDouble*, ldab : Int32*, afb : ComplexDouble*, ldafb : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Double*, c : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, rpvgrw : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgbtf2 = zgbtf2_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexDouble*, ldab : Int32*, ipiv : Int32*, info : Int32*)
    fun zgbtrf = zgbtrf_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexDouble*, ldab : Int32*, ipiv : Int32*, info : Int32*)
    fun zgbtrs = zgbtrs_(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexDouble*, ldab : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zgebak = zgebak_(job : LibC::Char*, side : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, scale : LibC::Double*, m : Int32*, v : ComplexDouble*, ldv : Int32*, info : Int32*)
    fun zgebal = zgebal_(job : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, ilo : Int32*, ihi : Int32*, scale : LibC::Double*, info : Int32*)
    fun zgebd2 = zgebd2_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, d__ : LibC::Double*, e : LibC::Double*, tauq : ComplexDouble*, taup : ComplexDouble*, work : ComplexDouble*, info : Int32*)
    fun zgebrd = zgebrd_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, d : LibC::Double*, e : LibC::Double*, tauq : ComplexDouble*, taup : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zgecon = zgecon_(norm : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgeequ = zgeequ_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, r : LibC::Double*, c : LibC::Double*, rowcnd : LibC::Double*, colcnd : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun zgeequb = zgeequb_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, r : LibC::Double*, c : LibC::Double*, rowcnd : LibC::Double*, colcnd : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun zgees = zgees_(jobvs : LibC::Char*, sort : LibC::Char*, select : LapackZSelect1, n : Int32*, a : ComplexDouble*, lda : Int32*, sdim : Int32*, w : ComplexDouble*, vs : ComplexDouble*, ldvs : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, bwork : Int32*, info : Int32*)
    fun zgeesx = zgeesx_(jobvs : LibC::Char*, sort : LibC::Char*, select : LapackZSelect1, sense : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, sdim : Int32*, w : ComplexDouble*, vs : ComplexDouble*, ldvs : Int32*, rconde : LibC::Double*, rcondv : LibC::Double*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, bwork : Int32*, info : Int32*)
    fun zgeev = zgeev_(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, w : ComplexDouble*, vl : ComplexDouble*, ldvl : Int32*, vr : ComplexDouble*, ldvr : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zgeevx = zgeevx_(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, w : ComplexDouble*, vl : ComplexDouble*, ldvl : Int32*, vr : ComplexDouble*, ldvr : Int32*, ilo : Int32*, ihi : Int32*, scale : LibC::Double*, abnrm : LibC::Double*, rconde : LibC::Double*, rcondv : LibC::Double*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zgegs = zgegs_(jobvsl : LibC::Char*, jobvsr : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, alpha : ComplexDouble*, beta : ComplexDouble*, vsl : ComplexDouble*, ldvsl : Int32*, vsr : ComplexDouble*, ldvsr : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zgegv = zgegv_(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, alpha : ComplexDouble*, beta : ComplexDouble*, vl : ComplexDouble*, ldvl : Int32*, vr : ComplexDouble*, ldvr : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zgehd2 = zgehd2_(n : Int32*, ilo : Int32*, ihi : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, info : Int32*)
    fun zgehrd = zgehrd_(n : Int32*, ilo : Int32*, ihi : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zgelq2 = zgelq2_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, info : Int32*)
    fun zgelqf = zgelqf_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zgels = zgels_(trans : LibC::Char*, m : Int32*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zgelsd = zgelsd_(m : Int32*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, s : LibC::Double*, rcond : LibC::Double*, rank : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, iwork : Int32*, info : Int32*)
    fun zgelss = zgelss_(m : Int32*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, s : LibC::Double*, rcond : LibC::Double*, rank : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zgelsx = zgelsx_(m : Int32*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, jpvt : Int32*, rcond : LibC::Double*, rank : Int32*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgelsy = zgelsy_(m : Int32*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, jpvt : Int32*, rcond : LibC::Double*, rank : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zgeql2 = zgeql2_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, info : Int32*)
    fun zgeqlf = zgeqlf_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zgeqp3 = zgeqp3_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, jpvt : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zgeqpf = zgeqpf_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, jpvt : Int32*, tau : ComplexDouble*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgeqr2 = zgeqr2_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, info : Int32*)
    fun zgeqrf = zgeqrf_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zgerfs = zgerfs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgerfsx = zgerfsx_(trans : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, r : LibC::Double*, c : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgerq2 = zgerq2_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, info : Int32*)
    fun zgerqf = zgerqf_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zgesc2 = zgesc2_(n : Int32*, a : ComplexDouble*, lda : Int32*, rhs : ComplexDouble*, ipiv : Int32*, jpiv : Int32*, scale : LibC::Double*)
    fun zgesdd = zgesdd_(jobz : LibC::Char*, m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, s : LibC::Double*, u : ComplexDouble*, ldu : Int32*, vt : ComplexDouble*, ldvt : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, iwork : Int32*, info : Int32*)
    fun zgesv = zgesv_(n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zgesvd = zgesvd_(jobu : LibC::Char*, jobvt : LibC::Char*, m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, s : LibC::Double*, u : ComplexDouble*, ldu : Int32*, vt : ComplexDouble*, ldvt : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zgesvx = zgesvx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Double*, c : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgesvxx = zgesvxx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, r : LibC::Double*, c : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, rpvgrw : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgetc2 = zgetc2_(n : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, jpiv : Int32*, info : Int32*)
    fun zgetf2 = zgetf2_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun zgetrf = zgetrf_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun zgetri = zgetri_(n : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zgetrs = zgetrs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zggbak = zggbak_(job : LibC::Char*, side : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, lscale : LibC::Double*, rscale : LibC::Double*, m : Int32*, v : ComplexDouble*, ldv : Int32*, info : Int32*)
    fun zggbal = zggbal_(job : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, ilo : Int32*, ihi : Int32*, lscale : LibC::Double*, rscale : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun zgges = zgges_(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LapackZSelect2, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, sdim : Int32*, alpha : ComplexDouble*, beta : ComplexDouble*, vsl : ComplexDouble*, ldvsl : Int32*, vsr : ComplexDouble*, ldvsr : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, bwork : Int32*, info : Int32*)
    fun zggesx = zggesx_(jobvsl : LibC::Char*, jobvsr : LibC::Char*, sort : LibC::Char*, selctg : LapackZSelect2, sense : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, sdim : Int32*, alpha : ComplexDouble*, beta : ComplexDouble*, vsl : ComplexDouble*, ldvsl : Int32*, vsr : ComplexDouble*, ldvsr : Int32*, rconde : LibC::Double*, rcondv : LibC::Double*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, iwork : Int32*, liwork : Int32*, bwork : Int32*, info : Int32*)
    fun zggev = zggev_(jobvl : LibC::Char*, jobvr : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, alpha : ComplexDouble*, beta : ComplexDouble*, vl : ComplexDouble*, ldvl : Int32*, vr : ComplexDouble*, ldvr : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zggevx = zggevx_(balanc : LibC::Char*, jobvl : LibC::Char*, jobvr : LibC::Char*, sense : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, alpha : ComplexDouble*, beta : ComplexDouble*, vl : ComplexDouble*, ldvl : Int32*, vr : ComplexDouble*, ldvr : Int32*, ilo : Int32*, ihi : Int32*, lscale : LibC::Double*, rscale : LibC::Double*, abnrm : LibC::Double*, bbnrm : LibC::Double*, rconde : LibC::Double*, rcondv : LibC::Double*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, iwork : Int32*, bwork : Int32*, info : Int32*)
    fun zggglm = zggglm_(n : Int32*, m : Int32*, p : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, d : ComplexDouble*, x : ComplexDouble*, y : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zgghrd = zgghrd_(compq : LibC::Char*, compz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, q : ComplexDouble*, ldq : Int32*, z : ComplexDouble*, ldz : Int32*, info : Int32*)
    fun zgglse = zgglse_(m : Int32*, n : Int32*, p : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, c : ComplexDouble*, d : ComplexDouble*, x : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zggqrf = zggqrf_(n : Int32*, m : Int32*, p : Int32*, a : ComplexDouble*, lda : Int32*, taua : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, taub : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zggrqf = zggrqf_(m : Int32*, p : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, taua : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, taub : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zggsvd = zggsvd_(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Int32*, n : Int32*, p : Int32*, k : Int32*, l : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, alpha : LibC::Double*, beta : LibC::Double*, u : ComplexDouble*, ldu : Int32*, v : ComplexDouble*, ldv : Int32*, q : ComplexDouble*, ldq : Int32*, work : ComplexDouble*, rwork : LibC::Double*, iwork : Int32*, info : Int32*) : Int32
    fun zggsvp = zggsvp_(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Int32*, p : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, tola : LibC::Double*, tolb : LibC::Double*, k : Int32*, l : Int32*, u : ComplexDouble*, ldu : Int32*, v : ComplexDouble*, ldv : Int32*, q : ComplexDouble*, ldq : Int32*, iwork : Int32*, rwork : LibC::Double*, tau : ComplexDouble*, work : ComplexDouble*, info : Int32*) : Int32
    fun zgtcon = zgtcon_(norm : LibC::Char*, n : Int32*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*, du2 : ComplexDouble*, ipiv : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : ComplexDouble*, info : Int32*)
    fun zgtrfs = zgtrfs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*, dlf : ComplexDouble*, df : ComplexDouble*, duf : ComplexDouble*, du2 : ComplexDouble*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgtsv = zgtsv_(n : Int32*, nrhs : Int32*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zgtsvx = zgtsvx_(fact : LibC::Char*, trans : LibC::Char*, n : Int32*, nrhs : Int32*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*, dlf : ComplexDouble*, df : ComplexDouble*, duf : ComplexDouble*, du2 : ComplexDouble*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zgttrf = zgttrf_(n : Int32*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*, du2 : ComplexDouble*, ipiv : Int32*, info : Int32*)
    fun zgttrs = zgttrs_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*, du2 : ComplexDouble*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zgtts2 = zgtts2_(itrans : Int32*, n : Int32*, nrhs : Int32*, dl : ComplexDouble*, d__ : ComplexDouble*, du : ComplexDouble*, du2 : ComplexDouble*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*)
    fun zhbev = zhbev_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexDouble*, ldab : Int32*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zhbevd = zhbevd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexDouble*, ldab : Int32*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun zhbevx = zhbevx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexDouble*, ldab : Int32*, q : ComplexDouble*, ldq : Int32*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, rwork : LibC::Double*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun zhbgst = zhbgst_(vect : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : ComplexDouble*, ldab : Int32*, bb : ComplexDouble*, ldbb : Int32*, x : ComplexDouble*, ldx : Int32*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zhbgv = zhbgv_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : ComplexDouble*, ldab : Int32*, bb : ComplexDouble*, ldbb : Int32*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zhbgvd = zhbgvd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : ComplexDouble*, ldab : Int32*, bb : ComplexDouble*, ldbb : Int32*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun zhbgvx = zhbgvx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, ka : Int32*, kb : Int32*, ab : ComplexDouble*, ldab : Int32*, bb : ComplexDouble*, ldbb : Int32*, q : ComplexDouble*, ldq : Int32*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, rwork : LibC::Double*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun zhbtrd = zhbtrd_(vect : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexDouble*, ldab : Int32*, d : LibC::Double*, e : LibC::Double*, q : ComplexDouble*, ldq : Int32*, work : ComplexDouble*, info : Int32*)
    fun zhecon = zhecon_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : ComplexDouble*, info : Int32*)
    fun zheequb = zheequb_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, work : ComplexDouble*, info : Int32*)
    fun zheev = zheev_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, w : LibC::Double*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zheevd = zheevd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, w : LibC::Double*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun zheevr = zheevr_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, isuppz : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun zheevx = zheevx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun zhegs2 = zhegs2_(itype : Int32*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zhegst = zhegst_(itype : Int32*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zhegv = zhegv_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, w : LibC::Double*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zhegvd = zhegvd_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, w : LibC::Double*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun zhegvx = zhegvx_(itype : Int32*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun zherfs = zherfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zherfsx = zherfsx_(uplo : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, s : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zhesv = zhesv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zhesvx = zhesvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zhesvxx = zhesvxx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, s : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, rpvgrw : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zhetd2 = zhetd2_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, d__ : LibC::Double*, e : LibC::Double*, tau : ComplexDouble*, info : Int32*)
    fun zhetf2 = zhetf2_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun zhetrd = zhetrd_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, d : LibC::Double*, e : LibC::Double*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zhetrf = zhetrf_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zhetri = zhetri_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, work : ComplexDouble*, info : Int32*)
    fun zhetrs = zhetrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zhfrk = zhfrk_(transr : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, n : Int32*, k : Int32*, alpha : LibC::Double*, a : ComplexDouble*, lda : Int32*, beta : LibC::Double*, c : ComplexDouble*)
    fun zhgeqz = zhgeqz_(job : LibC::Char*, compq : LibC::Char*, compz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h : ComplexDouble*, ldh : Int32*, t : ComplexDouble*, ldt : Int32*, alpha : ComplexDouble*, beta : ComplexDouble*, q : ComplexDouble*, ldq : Int32*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zhpcon = zhpcon_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, ipiv : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : ComplexDouble*, info : Int32*)
    fun zhpev = zhpev_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zhpevd = zhpevd_(jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun zhpevx = zhpevx_(jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, rwork : LibC::Double*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun zhpgst = zhpgst_(itype : Int32*, uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, bp : ComplexDouble*, info : Int32*)
    fun zhpgv = zhpgv_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, bp : ComplexDouble*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zhpgvd = zhpgvd_(itype : Int32*, jobz : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, bp : ComplexDouble*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun zhpgvx = zhpgvx_(itype : Int32*, jobz : LibC::Char*, range : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, bp : ComplexDouble*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, rwork : LibC::Double*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun zhprfs = zhprfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, afp : ComplexDouble*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zhpsv = zhpsv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zhpsvx = zhpsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, afp : ComplexDouble*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zhptrd = zhptrd_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, d : LibC::Double*, e : LibC::Double*, tau : ComplexDouble*, info : Int32*)
    fun zhptrf = zhptrf_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, ipiv : Int32*, info : Int32*)
    fun zhptri = zhptri_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, ipiv : Int32*, work : ComplexDouble*, info : Int32*)
    fun zhptrs = zhptrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zhsein = zhsein_(side : LibC::Char*, eigsrc : LibC::Char*, initv : LibC::Char*, select : Int32*, n : Int32*, h : ComplexDouble*, ldh : Int32*, w : ComplexDouble*, vl : ComplexDouble*, ldvl : Int32*, vr : ComplexDouble*, ldvr : Int32*, mm : Int32*, m : Int32*, work : ComplexDouble*, rwork : LibC::Double*, ifaill : Int32*, ifailr : Int32*, info : Int32*)
    fun zhseqr = zhseqr_(job : LibC::Char*, compz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h : ComplexDouble*, ldh : Int32*, w : ComplexDouble*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zla_gbamv_ = zla_gbamv__(trans : Int32*, m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, alpha : LibC::Double*, ab : ComplexDouble*, ldab : Int32*, x : ComplexDouble*, incx : Int32*, beta : LibC::Double*, y : LibC::Double*, incy : Int32*)
    fun zla_gbrcond_c_ = zla_gbrcond_c__(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexDouble*, ldab : Int32*, afb : ComplexDouble*, ldafb : Int32*, ipiv : Int32*, c__ : LibC::Double*, capply : LibC::Char*, info : Int32*, work : ComplexDouble*, rwork : LibC::Double*, trans_len : LibC::Int) : LibC::Double
    fun zla_gbrcond_x_ = zla_gbrcond_x__(trans : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexDouble*, ldab : Int32*, afb : ComplexDouble*, ldafb : Int32*, ipiv : Int32*, x : ComplexDouble*, info : Int32*, work : ComplexDouble*, rwork : LibC::Double*, trans_len : LibC::Int) : LibC::Double
    fun zla_gbrfsx_extended_ = zla_gbrfsx_extended__(prec_type__ : Int32*, trans_type__ : Int32*, n : Int32*, kl : Int32*, ku : Int32*, nrhs : Int32*, ab : ComplexDouble*, ldab : Int32*, afb : ComplexDouble*, ldafb : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Double*, b : ComplexDouble*, ldb : Int32*, y : ComplexDouble*, ldy : Int32*, berr_out__ : LibC::Double*, n_norms__ : Int32*, errs_n__ : LibC::Double*, errs_c__ : LibC::Double*, res : ComplexDouble*, ayb : LibC::Double*, dy : ComplexDouble*, y_tail__ : ComplexDouble*, rcond : LibC::Double*, ithresh : Int32*, rthresh : LibC::Double*, dz_ub__ : LibC::Double*, ignore_cwise__ : LibC::Char*, info : Int32*)
    fun zla_gbrpvgrw_ = zla_gbrpvgrw__(n : Int32*, kl : Int32*, ku : Int32*, ncols : Int32*, ab : ComplexDouble*, ldab : Int32*, afb : ComplexDouble*, ldafb : Int32*) : LibC::Double
    fun zla_geamv_ = zla_geamv__(trans : Int32*, m : Int32*, n : Int32*, alpha : LibC::Double*, a : ComplexDouble*, lda : Int32*, x : ComplexDouble*, incx : Int32*, beta : LibC::Double*, y : LibC::Double*, incy : Int32*)
    fun zla_gercond_c_ = zla_gercond_c__(trans : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, c__ : LibC::Double*, capply : LibC::Char*, info : Int32*, work : ComplexDouble*, rwork : LibC::Double*, trans_len : LibC::Int) : LibC::Double
    fun zla_gercond_x_ = zla_gercond_x__(trans : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, x : ComplexDouble*, info : Int32*, work : ComplexDouble*, rwork : LibC::Double*, trans_len : LibC::Int) : LibC::Double
    fun zla_gerfsx_extended_ = zla_gerfsx_extended__(prec_type__ : Int32*, trans_type__ : Int32*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Double*, b : ComplexDouble*, ldb : Int32*, y : ComplexDouble*, ldy : Int32*, berr_out__ : LibC::Double*, n_norms__ : Int32*, errs_n__ : LibC::Double*, errs_c__ : LibC::Double*, res : ComplexDouble*, ayb : LibC::Double*, dy : ComplexDouble*, y_tail__ : ComplexDouble*, rcond : LibC::Double*, ithresh : Int32*, rthresh : LibC::Double*, dz_ub__ : LibC::Double*, ignore_cwise__ : LibC::Char*, info : Int32*)
    fun zla_heamv_ = zla_heamv__(uplo : Int32*, n : Int32*, alpha : LibC::Double*, a : ComplexDouble*, lda : Int32*, x : ComplexDouble*, incx : Int32*, beta : LibC::Double*, y : LibC::Double*, incy : Int32*)
    fun zla_hercond_c_ = zla_hercond_c__(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, c__ : LibC::Double*, capply : LibC::Char*, info : Int32*, work : ComplexDouble*, rwork : LibC::Double*, uplo_len : LibC::Int) : LibC::Double
    fun zla_hercond_x_ = zla_hercond_x__(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, x : ComplexDouble*, info : Int32*, work : ComplexDouble*, rwork : LibC::Double*, uplo_len : LibC::Int) : LibC::Double
    fun zla_herfsx_extended_ = zla_herfsx_extended__(prec_type__ : Int32*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Double*, b : ComplexDouble*, ldb : Int32*, y : ComplexDouble*, ldy : Int32*, berr_out__ : LibC::Double*, n_norms__ : Int32*, errs_n__ : LibC::Double*, errs_c__ : LibC::Double*, res : ComplexDouble*, ayb : LibC::Double*, dy : ComplexDouble*, y_tail__ : ComplexDouble*, rcond : LibC::Double*, ithresh : Int32*, rthresh : LibC::Double*, dz_ub__ : LibC::Double*, ignore_cwise__ : LibC::Char*, info : Int32*, uplo_len : LibC::Int)
    fun zla_herpvgrw_ = zla_herpvgrw__(uplo : LibC::Char*, n : Int32*, info : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, work : LibC::Double*, uplo_len : LibC::Int) : LibC::Double
    fun zla_lin_berr_ = zla_lin_berr__(n : Int32*, nz : Int32*, nrhs : Int32*, res : ComplexDouble*, ayb : LibC::Double*, berr : LibC::Double*)
    fun zla_porcond_c_ = zla_porcond_c__(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, c__ : LibC::Double*, capply : LibC::Char*, info : Int32*, work : ComplexDouble*, rwork : LibC::Double*, uplo_len : LibC::Int) : LibC::Double
    fun zla_porcond_x_ = zla_porcond_x__(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, x : ComplexDouble*, info : Int32*, work : ComplexDouble*, rwork : LibC::Double*, uplo_len : LibC::Int) : LibC::Double
    fun zla_porfsx_extended_ = zla_porfsx_extended__(prec_type__ : Int32*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, colequ : LibC::Char*, c__ : LibC::Double*, b : ComplexDouble*, ldb : Int32*, y : ComplexDouble*, ldy : Int32*, berr_out__ : LibC::Double*, n_norms__ : Int32*, errs_n__ : LibC::Double*, errs_c__ : LibC::Double*, res : ComplexDouble*, ayb : LibC::Double*, dy : ComplexDouble*, y_tail__ : ComplexDouble*, rcond : LibC::Double*, ithresh : Int32*, rthresh : LibC::Double*, dz_ub__ : LibC::Double*, ignore_cwise__ : LibC::Char*, info : Int32*, uplo_len : LibC::Int)
    fun zla_porpvgrw_ = zla_porpvgrw__(uplo : LibC::Char*, ncols : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, work : LibC::Double*, uplo_len : LibC::Int) : LibC::Double
    fun zla_rpvgrw_ = zla_rpvgrw__(n : Int32*, ncols : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*) : LibC::Double
    fun zla_syamv_ = zla_syamv__(uplo : Int32*, n : Int32*, alpha : LibC::Double*, a : ComplexDouble*, lda : Int32*, x : ComplexDouble*, incx : Int32*, beta : LibC::Double*, y : LibC::Double*, incy : Int32*)
    fun zla_syrcond_c_ = zla_syrcond_c__(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, c__ : LibC::Double*, capply : LibC::Char*, info : Int32*, work : ComplexDouble*, rwork : LibC::Double*, uplo_len : LibC::Int) : LibC::Double
    fun zla_syrcond_x_ = zla_syrcond_x__(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, x : ComplexDouble*, info : Int32*, work : ComplexDouble*, rwork : LibC::Double*, uplo_len : LibC::Int) : LibC::Double
    fun zla_syrfsx_extended_ = zla_syrfsx_extended__(prec_type__ : Int32*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, colequ : LibC::Char*, c__ : LibC::Double*, b : ComplexDouble*, ldb : Int32*, y : ComplexDouble*, ldy : Int32*, berr_out__ : LibC::Double*, n_norms__ : Int32*, errs_n__ : LibC::Double*, errs_c__ : LibC::Double*, res : ComplexDouble*, ayb : LibC::Double*, dy : ComplexDouble*, y_tail__ : ComplexDouble*, rcond : LibC::Double*, ithresh : Int32*, rthresh : LibC::Double*, dz_ub__ : LibC::Double*, ignore_cwise__ : LibC::Char*, info : Int32*, uplo_len : LibC::Int)
    fun zla_syrpvgrw_ = zla_syrpvgrw__(uplo : LibC::Char*, n : Int32*, info : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, work : LibC::Double*, uplo_len : LibC::Int) : LibC::Double
    fun zla_wwaddw_ = zla_wwaddw__(n : Int32*, x : ComplexDouble*, y : ComplexDouble*, w : ComplexDouble*)
    fun zlabrd = zlabrd_(m : Int32*, n : Int32*, nb : Int32*, a : ComplexDouble*, lda : Int32*, d__ : LibC::Double*, e : LibC::Double*, tauq : ComplexDouble*, taup : ComplexDouble*, x : ComplexDouble*, ldx : Int32*, y : ComplexDouble*, ldy : Int32*)
    fun zlacgv = zlacgv_(n : Int32*, x : ComplexDouble*, incx : Int32*)
    fun zlacn2 = zlacn2_(n : Int32*, v : ComplexDouble*, x : ComplexDouble*, est : LibC::Double*, kase : Int32*, isave : Int32*)
    fun zlacon = zlacon_(n : Int32*, v : ComplexDouble*, x : ComplexDouble*, est : LibC::Double*, kase : Int32*)
    fun zlacp2 = zlacp2_(uplo : LibC::Char*, m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, b : ComplexDouble*, ldb : Int32*)
    fun zlacpy = zlacpy_(uplo : LibC::Char*, m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*)
    fun zlacrm = zlacrm_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : LibC::Double*, ldb : Int32*, c : ComplexDouble*, ldc : Int32*, rwork : LibC::Double*)
    fun zlacrt = zlacrt_(n : Int32*, cx : ComplexDouble*, incx : Int32*, cy : ComplexDouble*, incy : Int32*, c__ : ComplexDouble*, s : ComplexDouble*)
    fun zladiv = zladiv_(ret_val : ComplexDouble*, x : ComplexDouble*, y : ComplexDouble*)
    fun zlaed0 = zlaed0_(qsiz : Int32*, n : Int32*, d__ : LibC::Double*, e : LibC::Double*, q : ComplexDouble*, ldq : Int32*, qstore : ComplexDouble*, ldqs : Int32*, rwork : LibC::Double*, iwork : Int32*, info : Int32*)
    fun zlaed7 = zlaed7_(n : Int32*, cutpnt : Int32*, qsiz : Int32*, tlvls : Int32*, curlvl : Int32*, curpbm : Int32*, d__ : LibC::Double*, q : ComplexDouble*, ldq : Int32*, rho : LibC::Double*, indxq : Int32*, qstore : LibC::Double*, qptr : Int32*, prmptr : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, givnum : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, iwork : Int32*, info : Int32*)
    fun zlaed8 = zlaed8_(k : Int32*, n : Int32*, qsiz : Int32*, q : ComplexDouble*, ldq : Int32*, d__ : LibC::Double*, rho : LibC::Double*, cutpnt : Int32*, z__ : LibC::Double*, dlamda : LibC::Double*, q2 : ComplexDouble*, ldq2 : Int32*, w : LibC::Double*, indxp : Int32*, indx : Int32*, indxq : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, givnum : LibC::Double*, info : Int32*)
    fun zlaein = zlaein_(rightv : LibC::Char*, noinit : LibC::Char*, n : Int32*, h__ : ComplexDouble*, ldh : Int32*, w : ComplexDouble*, v : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, rwork : LibC::Double*, eps3 : LibC::Double*, smlnum : LibC::Double*, info : Int32*)
    fun zlaesy = zlaesy_(a : ComplexDouble*, b : ComplexDouble*, c__ : ComplexDouble*, rt1 : ComplexDouble*, rt2 : ComplexDouble*, evscal : ComplexDouble*, cs1 : ComplexDouble*, sn1 : ComplexDouble*)
    fun zlaev2 = zlaev2_(a : ComplexDouble*, b : ComplexDouble*, c__ : ComplexDouble*, rt1 : LibC::Double*, rt2 : LibC::Double*, cs1 : LibC::Double*, sn1 : ComplexDouble*)
    fun zlag2c = zlag2c_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, sa : ComplexFloat*, ldsa : Int32*, info : Int32*)
    fun zlags2 = zlags2_(upper : LibC::Char*, a1 : LibC::Double*, a2 : ComplexDouble*, a3 : LibC::Double*, b1 : LibC::Double*, b2 : ComplexDouble*, b3 : LibC::Double*, csu : LibC::Double*, snu : ComplexDouble*, csv : LibC::Double*, snv : ComplexDouble*, csq : LibC::Double*, snq : ComplexDouble*)
    fun zlagtm = zlagtm_(trans : LibC::Char*, n : Int32*, nrhs : Int32*, alpha : LibC::Double*, dl : ComplexDouble*, d__ : ComplexDouble*, du : ComplexDouble*, x : ComplexDouble*, ldx : Int32*, beta : LibC::Double*, b : ComplexDouble*, ldb : Int32*)
    fun zlahef = zlahef_(uplo : LibC::Char*, n : Int32*, nb : Int32*, kb : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, w : ComplexDouble*, ldw : Int32*, info : Int32*)
    fun zlahqr = zlahqr_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h__ : ComplexDouble*, ldh : Int32*, w : ComplexDouble*, iloz : Int32*, ihiz : Int32*, z__ : ComplexDouble*, ldz : Int32*, info : Int32*)
    fun zlahr2 = zlahr2_(n : Int32*, k : Int32*, nb : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, t : ComplexDouble*, ldt : Int32*, y : ComplexDouble*, ldy : Int32*)
    fun zlahrd = zlahrd_(n : Int32*, k : Int32*, nb : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, t : ComplexDouble*, ldt : Int32*, y : ComplexDouble*, ldy : Int32*)
    fun zlaic1 = zlaic1_(job : Int32*, j : Int32*, x : ComplexDouble*, sest : LibC::Double*, w : ComplexDouble*, gamma : ComplexDouble*, sestpr : LibC::Double*, s : ComplexDouble*, c__ : ComplexDouble*)
    fun zlals0 = zlals0_(icompq : Int32*, nl : Int32*, nr : Int32*, sqre : Int32*, nrhs : Int32*, b : ComplexDouble*, ldb : Int32*, bx : ComplexDouble*, ldbx : Int32*, perm : Int32*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, givnum : LibC::Double*, ldgnum : Int32*, poles : LibC::Double*, difl : LibC::Double*, difr : LibC::Double*, z__ : LibC::Double*, k : Int32*, c__ : LibC::Double*, s : LibC::Double*, rwork : LibC::Double*, info : Int32*)
    fun zlalsa = zlalsa_(icompq : Int32*, smlsiz : Int32*, n : Int32*, nrhs : Int32*, b : ComplexDouble*, ldb : Int32*, bx : ComplexDouble*, ldbx : Int32*, u : LibC::Double*, ldu : Int32*, vt : LibC::Double*, k : Int32*, difl : LibC::Double*, difr : LibC::Double*, z__ : LibC::Double*, poles : LibC::Double*, givptr : Int32*, givcol : Int32*, ldgcol : Int32*, perm : Int32*, givnum : LibC::Double*, c__ : LibC::Double*, s : LibC::Double*, rwork : LibC::Double*, iwork : Int32*, info : Int32*)
    fun zlalsd = zlalsd_(uplo : LibC::Char*, smlsiz : Int32*, n : Int32*, nrhs : Int32*, d__ : LibC::Double*, e : LibC::Double*, b : ComplexDouble*, ldb : Int32*, rcond : LibC::Double*, rank : Int32*, work : ComplexDouble*, rwork : LibC::Double*, iwork : Int32*, info : Int32*)
    fun zlangb = zlangb_(norm : LibC::Char*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexDouble*, ldab : Int32*, work : LibC::Double*) : LibC::Double
    fun zlange = zlange_(norm : LibC::Char*, m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, work : LibC::Double*) : LibC::Double
    fun zlangt = zlangt_(norm : LibC::Char*, n : Int32*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*) : LibC::Double
    fun zlanhb = zlanhb_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, k : Int32*, ab : ComplexDouble*, ldab : Int32*, work : LibC::Double*) : LibC::Double
    fun zlanhe = zlanhe_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, work : LibC::Double*) : LibC::Double
    fun zlanhf = zlanhf_(norm : LibC::Char*, transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, work : LibC::Double*) : LibC::Double
    fun zlanhp = zlanhp_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, work : LibC::Double*) : LibC::Double
    fun zlanhs = zlanhs_(norm : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, work : LibC::Double*) : LibC::Double
    fun zlanht = zlanht_(norm : LibC::Char*, n : Int32*, d : LibC::Double*, e : ComplexDouble*) : LibC::Double
    fun zlansb = zlansb_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, k : Int32*, ab : ComplexDouble*, ldab : Int32*, work : LibC::Double*) : LibC::Double
    fun zlansp = zlansp_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, work : LibC::Double*) : LibC::Double
    fun zlansy = zlansy_(norm : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, work : LibC::Double*) : LibC::Double
    fun zlantb = zlantb_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, k : Int32*, ab : ComplexDouble*, ldab : Int32*, work : LibC::Double*) : LibC::Double
    fun zlantp = zlantp_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, ap : ComplexDouble*, work : LibC::Double*) : LibC::Double
    fun zlantr = zlantr_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, work : LibC::Double*) : LibC::Double
    fun zlapll = zlapll_(n : Int32*, x : ComplexDouble*, incx : Int32*, y : ComplexDouble*, incy : Int32*, ssmin : LibC::Double*)
    fun zlapmt = zlapmt_(forwrd : Int32*, m : Int32*, n : Int32*, x : ComplexDouble*, ldx : Int32*, k : Int32*)
    fun zlaqgb = zlaqgb_(m : Int32*, n : Int32*, kl : Int32*, ku : Int32*, ab : ComplexDouble*, ldab : Int32*, r__ : LibC::Double*, c__ : LibC::Double*, rowcnd : LibC::Double*, colcnd : LibC::Double*, amax : LibC::Double*, equed : LibC::Char*)
    fun zlaqge = zlaqge_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, r__ : LibC::Double*, c__ : LibC::Double*, rowcnd : LibC::Double*, colcnd : LibC::Double*, amax : LibC::Double*, equed : LibC::Char*)
    fun zlaqhb = zlaqhb_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexDouble*, ldab : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, equed : LibC::Char*)
    fun zlaqhe = zlaqhe_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, equed : LibC::Char*)
    fun zlaqhp = zlaqhp_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, equed : LibC::Char*)
    fun zlaqp2 = zlaqp2_(m : Int32*, n : Int32*, offset : Int32*, a : ComplexDouble*, lda : Int32*, jpvt : Int32*, tau : ComplexDouble*, vn1 : LibC::Double*, vn2 : LibC::Double*, work : ComplexDouble*)
    fun zlaqps = zlaqps_(m : Int32*, n : Int32*, offset : Int32*, nb : Int32*, kb : Int32*, a : ComplexDouble*, lda : Int32*, jpvt : Int32*, tau : ComplexDouble*, vn1 : LibC::Double*, vn2 : LibC::Double*, auxv : ComplexDouble*, f : ComplexDouble*, ldf : Int32*)
    fun zlaqr0 = zlaqr0_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h__ : ComplexDouble*, ldh : Int32*, w : ComplexDouble*, iloz : Int32*, ihiz : Int32*, z__ : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zlaqr1 = zlaqr1_(n : Int32*, h__ : ComplexDouble*, ldh : Int32*, s1 : ComplexDouble*, s2 : ComplexDouble*, v : ComplexDouble*)
    fun zlaqr2 = zlaqr2_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ktop : Int32*, kbot : Int32*, nw : Int32*, h__ : ComplexDouble*, ldh : Int32*, iloz : Int32*, ihiz : Int32*, z__ : ComplexDouble*, ldz : Int32*, ns : Int32*, nd : Int32*, sh : ComplexDouble*, v : ComplexDouble*, ldv : Int32*, nh : Int32*, t : ComplexDouble*, ldt : Int32*, nv : Int32*, wv : ComplexDouble*, ldwv : Int32*, work : ComplexDouble*, lwork : Int32*)
    fun zlaqr3 = zlaqr3_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ktop : Int32*, kbot : Int32*, nw : Int32*, h__ : ComplexDouble*, ldh : Int32*, iloz : Int32*, ihiz : Int32*, z__ : ComplexDouble*, ldz : Int32*, ns : Int32*, nd : Int32*, sh : ComplexDouble*, v : ComplexDouble*, ldv : Int32*, nh : Int32*, t : ComplexDouble*, ldt : Int32*, nv : Int32*, wv : ComplexDouble*, ldwv : Int32*, work : ComplexDouble*, lwork : Int32*)
    fun zlaqr4 = zlaqr4_(wantt : LibC::Char*, wantz : LibC::Char*, n : Int32*, ilo : Int32*, ihi : Int32*, h__ : ComplexDouble*, ldh : Int32*, w : ComplexDouble*, iloz : Int32*, ihiz : Int32*, z__ : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zlaqr5 = zlaqr5_(wantt : LibC::Char*, wantz : LibC::Char*, kacc22 : Int32*, n : Int32*, ktop : Int32*, kbot : Int32*, nshfts : Int32*, s : ComplexDouble*, h__ : ComplexDouble*, ldh : Int32*, iloz : Int32*, ihiz : Int32*, z__ : ComplexDouble*, ldz : Int32*, v : ComplexDouble*, ldv : Int32*, u : ComplexDouble*, ldu : Int32*, nv : Int32*, wv : ComplexDouble*, ldwv : Int32*, nh : Int32*, wh : ComplexDouble*, ldwh : Int32*)
    fun zlaqsb = zlaqsb_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexDouble*, ldab : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, equed : LibC::Char*)
    fun zlaqsp = zlaqsp_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, equed : LibC::Char*)
    fun zlaqsy = zlaqsy_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, equed : LibC::Char*)
    fun zlar1v = zlar1v_(n : Int32*, b1 : Int32*, bn : Int32*, lambda : LibC::Double*, d__ : LibC::Double*, l : LibC::Double*, ld : LibC::Double*, lld : LibC::Double*, pivmin : LibC::Double*, gaptol : LibC::Double*, z__ : ComplexDouble*, wantnc : LibC::Char*, negcnt : Int32*, ztz : LibC::Double*, mingma : LibC::Double*, r__ : Int32*, isuppz : Int32*, nrminv : LibC::Double*, resid : LibC::Double*, rqcorr : LibC::Double*, work : LibC::Double*)
    fun zlar2v = zlar2v_(n : Int32*, x : ComplexDouble*, y : ComplexDouble*, z__ : ComplexDouble*, incx : Int32*, c__ : LibC::Double*, s : ComplexDouble*, incc : Int32*)
    fun zlarcm = zlarcm_(m : Int32*, n : Int32*, a : LibC::Double*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, c : ComplexDouble*, ldc : Int32*, rwork : LibC::Double*)
    fun zlarf = zlarf_(side : LibC::Char*, m : Int32*, n : Int32*, v : ComplexDouble*, incv : Int32*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int32*, work : ComplexDouble*)
    fun zlarfb = zlarfb_(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, v : ComplexDouble*, ldv : Int32*, t : ComplexDouble*, ldt : Int32*, c : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, ldwork : Int32*)
    fun zlarfg = zlarfg_(n : Int32*, alpha : ComplexDouble*, x : ComplexDouble*, incx : Int32*, tau : ComplexDouble*)
    fun zlarfp = zlarfp_(n : Int32*, alpha : ComplexDouble*, x : ComplexDouble*, incx : Int32*, tau : ComplexDouble*)
    fun zlarft = zlarft_(direct : LibC::Char*, storev : LibC::Char*, n : Int32*, k : Int32*, v : ComplexDouble*, ldv : Int32*, tau : ComplexDouble*, t : ComplexDouble*, ldt : Int32*)
    fun zlarfx = zlarfx_(side : LibC::Char*, m : Int32*, n : Int32*, v : ComplexDouble*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int32*, work : ComplexDouble*)
    fun zlargv = zlargv_(n : Int32*, x : ComplexDouble*, incx : Int32*, y : ComplexDouble*, incy : Int32*, c__ : LibC::Double*, incc : Int32*)
    fun zlarnv = zlarnv_(idist : Int32*, iseed : Int32*, n : Int32*, x : ComplexDouble*)
    fun zlarrv = zlarrv_(n : Int32*, vl : LibC::Double*, vu : LibC::Double*, d__ : LibC::Double*, l : LibC::Double*, pivmin : LibC::Double*, isplit : Int32*, m : Int32*, dol : Int32*, dou : Int32*, minrgp : LibC::Double*, rtol1 : LibC::Double*, rtol2 : LibC::Double*, w : LibC::Double*, werr : LibC::Double*, wgap : LibC::Double*, iblock : Int32*, indexw : Int32*, gers : LibC::Double*, z__ : ComplexDouble*, ldz : Int32*, isuppz : Int32*, work : LibC::Double*, iwork : Int32*, info : Int32*)
    fun zlarscl2 = zlarscl2_(m : Int32*, n : Int32*, d__ : LibC::Double*, x : ComplexDouble*, ldx : Int32*)
    fun zlartg = zlartg_(f : ComplexDouble*, g : ComplexDouble*, cs : LibC::Double*, sn : ComplexDouble*, r__ : ComplexDouble*)
    fun zlartv = zlartv_(n : Int32*, x : ComplexDouble*, incx : Int32*, y : ComplexDouble*, incy : Int32*, c__ : LibC::Double*, s : ComplexDouble*, incc : Int32*)
    fun zlarz = zlarz_(side : LibC::Char*, m : Int32*, n : Int32*, l : Int32*, v : ComplexDouble*, incv : Int32*, tau : ComplexDouble*, c__ : ComplexDouble*, ldc : Int32*, work : ComplexDouble*)
    fun zlarzb = zlarzb_(side : LibC::Char*, trans : LibC::Char*, direct : LibC::Char*, storev : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, l : Int32*, v : ComplexDouble*, ldv : Int32*, t : ComplexDouble*, ldt : Int32*, c__ : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, ldwork : Int32*)
    fun zlarzt = zlarzt_(direct : LibC::Char*, storev : LibC::Char*, n : Int32*, k : Int32*, v : ComplexDouble*, ldv : Int32*, tau : ComplexDouble*, t : ComplexDouble*, ldt : Int32*)
    fun zlascl = zlascl_(type : LibC::Char*, kl : Int32*, ku : Int32*, cfrom : LibC::Double*, cto : LibC::Double*, m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, info : Int32*)
    fun zlascl2 = zlascl2_(m : Int32*, n : Int32*, d__ : LibC::Double*, x : ComplexDouble*, ldx : Int32*)
    fun zlaset = zlaset_(uplo : LibC::Char*, m : Int32*, n : Int32*, alpha : ComplexDouble*, beta : ComplexDouble*, a : ComplexDouble*, lda : Int32*)
    fun zlasr = zlasr_(side : LibC::Char*, pivot : LibC::Char*, direct : LibC::Char*, m : Int32*, n : Int32*, c__ : LibC::Double*, s : LibC::Double*, a : ComplexDouble*, lda : Int32*)
    fun zlassq = zlassq_(n : Int32*, x : ComplexDouble*, incx : Int32*, scale : LibC::Double*, sumsq : LibC::Double*)
    fun zlaswp = zlaswp_(n : Int32*, a : ComplexDouble*, lda : Int32*, k1 : Int32*, k2 : Int32*, ipiv : Int32*, incx : Int32*)
    fun zlasyf = zlasyf_(uplo : LibC::Char*, n : Int32*, nb : Int32*, kb : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, w : ComplexDouble*, ldw : Int32*, info : Int32*)
    fun zlat2c = zlat2c_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, sa : ComplexFloat*, ldsa : Int32*, info : Int32*)
    fun zlatbs = zlatbs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexDouble*, ldab : Int32*, x : ComplexDouble*, scale : LibC::Double*, cnorm : LibC::Double*, info : Int32*)
    fun zlatdf = zlatdf_(ijob : Int32*, n : Int32*, z__ : ComplexDouble*, ldz : Int32*, rhs : ComplexDouble*, rdsum : LibC::Double*, rdscal : LibC::Double*, ipiv : Int32*, jpiv : Int32*)
    fun zlatps = zlatps_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Int32*, ap : ComplexDouble*, x : ComplexDouble*, scale : LibC::Double*, cnorm : LibC::Double*, info : Int32*)
    fun zlatrd = zlatrd_(uplo : LibC::Char*, n : Int32*, nb : Int32*, a : ComplexDouble*, lda : Int32*, e : LibC::Double*, tau : ComplexDouble*, w : ComplexDouble*, ldw : Int32*)
    fun zlatrs = zlatrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, normin : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, x : ComplexDouble*, scale : LibC::Double*, cnorm : LibC::Double*, info : Int32*)
    fun zlatrz = zlatrz_(m : Int32*, n : Int32*, l : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*)
    fun zlatzm = zlatzm_(side : LibC::Char*, m : Int32*, n : Int32*, v : ComplexDouble*, incv : Int32*, tau : ComplexDouble*, c1 : ComplexDouble*, c2 : ComplexDouble*, ldc : Int32*, work : ComplexDouble*)
    fun zlauu2 = zlauu2_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, info : Int32*)
    fun zlauum = zlauum_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, info : Int32*)
    fun zpbcon = zpbcon_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexDouble*, ldab : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zpbequ = zpbequ_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexDouble*, ldab : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun zpbrfs = zpbrfs_(uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : ComplexDouble*, ldab : Int32*, afb : ComplexDouble*, ldafb : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zpbstf = zpbstf_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexDouble*, ldab : Int32*, info : Int32*)
    fun zpbsv = zpbsv_(uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : ComplexDouble*, ldab : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zpbsvx = zpbsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : ComplexDouble*, ldab : Int32*, afb : ComplexDouble*, ldafb : Int32*, equed : LibC::Char*, s : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zpbtf2 = zpbtf2_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexDouble*, ldab : Int32*, info : Int32*)
    fun zpbtrf = zpbtrf_(uplo : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexDouble*, ldab : Int32*, info : Int32*)
    fun zpbtrs = zpbtrs_(uplo : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : ComplexDouble*, ldab : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zpftrf = zpftrf_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, info : Int32*)
    fun zpftri = zpftri_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, info : Int32*)
    fun zpftrs = zpftrs_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zpocon = zpocon_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zpoequ = zpoequ_(n : Int32*, a : ComplexDouble*, lda : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun zpoequb = zpoequb_(n : Int32*, a : ComplexDouble*, lda : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun zporfs = zporfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zporfsx = zporfsx_(uplo : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, s : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zposv = zposv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zposvx = zposvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, equed : LibC::Char*, s : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zposvxx = zposvxx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, equed : LibC::Char*, s : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, rpvgrw : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zpotf2 = zpotf2_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, info : Int32*)
    fun zpotrf = zpotrf_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, info : Int32*)
    fun zpotri = zpotri_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, info : Int32*)
    fun zpotrs = zpotrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zppcon = zppcon_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, anorm : LibC::Double*, rcond : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zppequ = zppequ_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, info : Int32*)
    fun zpprfs = zpprfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, afp : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zppsv = zppsv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zppsvx = zppsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, afp : ComplexDouble*, equed : LibC::Char*, s : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zpptrf = zpptrf_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, info : Int32*)
    fun zpptri = zpptri_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, info : Int32*)
    fun zpptrs = zpptrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zpstf2 = zpstf2_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, piv : Int32*, rank : Int32*, tol : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun zpstrf = zpstrf_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, piv : Int32*, rank : Int32*, tol : LibC::Double*, work : LibC::Double*, info : Int32*)
    fun zptcon = zptcon_(n : Int32*, d : LibC::Double*, e : ComplexDouble*, anorm : LibC::Double*, rcond : LibC::Double*, rwork : LibC::Double*, info : Int32*)
    fun zpteqr = zpteqr_(compz : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : LibC::Double*, info : Int32*)
    fun zptrfs = zptrfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, d : LibC::Double*, e : ComplexDouble*, df : LibC::Double*, ef : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zptsv = zptsv_(n : Int32*, nrhs : Int32*, d : LibC::Double*, e : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zptsvx = zptsvx_(fact : LibC::Char*, n : Int32*, nrhs : Int32*, d : LibC::Double*, e : ComplexDouble*, df : LibC::Double*, ef : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zpttrf = zpttrf_(n : Int32*, d : LibC::Double*, e : ComplexDouble*, info : Int32*)
    fun zpttrs = zpttrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, d : LibC::Double*, e : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zptts2 = zptts2_(iuplo : Int32*, n : Int32*, nrhs : Int32*, d__ : LibC::Double*, e : ComplexDouble*, b : ComplexDouble*, ldb : Int32*)
    fun zrot = zrot_(n : Int32*, cx : ComplexDouble*, incx : Int32*, cy : ComplexDouble*, incy : Int32*, c__ : LibC::Double*, s : ComplexDouble*)
    fun zspcon = zspcon_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, ipiv : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : ComplexDouble*, info : Int32*)
    fun zspmv = zspmv_(uplo : LibC::Char*, n : Int32*, alpha : ComplexDouble*, ap : ComplexDouble*, x : ComplexDouble*, incx : Int32*, beta : ComplexDouble*, y : ComplexDouble*, incy : Int32*)
    fun zspr = zspr_(uplo : LibC::Char*, n : Int32*, alpha : ComplexDouble*, x : ComplexDouble*, incx : Int32*, ap : ComplexDouble*)
    fun zsprfs = zsprfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, afp : ComplexDouble*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zspsv = zspsv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zspsvx = zspsvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, afp : ComplexDouble*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zsptrf = zsptrf_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, ipiv : Int32*, info : Int32*)
    fun zsptri = zsptri_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, ipiv : Int32*, work : ComplexDouble*, info : Int32*)
    fun zsptrs = zsptrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun zstedc = zstedc_(compz : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, lrwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun zstegr = zstegr_(jobz : LibC::Char*, range : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, abstol : LibC::Double*, m : Int32*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, isuppz : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun zstein = zstein_(n : Int32*, d : LibC::Double*, e : LibC::Double*, m : Int32*, w : LibC::Double*, iblock : Int32*, isplit : Int32*, z : ComplexDouble*, ldz : Int32*, work : LibC::Double*, iwork : Int32*, ifail : Int32*, info : Int32*)
    fun zstemr = zstemr_(jobz : LibC::Char*, range : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, vl : LibC::Double*, vu : LibC::Double*, il : Int32*, iu : Int32*, m : Int32*, w : LibC::Double*, z : ComplexDouble*, ldz : Int32*, nzc : Int32*, isuppz : Int32*, tryrac : Int32*, work : LibC::Double*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun zsteqr = zsteqr_(compz : LibC::Char*, n : Int32*, d : LibC::Double*, e : LibC::Double*, z : ComplexDouble*, ldz : Int32*, work : LibC::Double*, info : Int32*)
    fun zsycon = zsycon_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, anorm : LibC::Double*, rcond : LibC::Double*, work : ComplexDouble*, info : Int32*)
    fun zsyequb = zsyequb_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, s : LibC::Double*, scond : LibC::Double*, amax : LibC::Double*, work : ComplexDouble*, info : Int32*)
    fun zsymv = zsymv_(uplo : LibC::Char*, n : Int32*, alpha : ComplexDouble*, a : ComplexDouble*, lda : Int32*, x : ComplexDouble*, incx : Int32*, beta : ComplexDouble*, y : ComplexDouble*, incy : Int32*)
    fun zsyr = zsyr_(uplo : LibC::Char*, n : Int32*, alpha : ComplexDouble*, x : ComplexDouble*, incx : Int32*, a : ComplexDouble*, lda : Int32*)
    fun zsyrfs = zsyrfs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zsyrfsx = zsyrfsx_(uplo : LibC::Char*, equed : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, s : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zsysv = zsysv_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zsysvx = zsysvx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, lwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun zsysvxx = zsysvxx_(fact : LibC::Char*, uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, af : ComplexDouble*, ldaf : Int32*, ipiv : Int32*, equed : LibC::Char*, s : LibC::Double*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, rcond : LibC::Double*, rpvgrw : LibC::Double*, berr : LibC::Double*, n_err_bnds : Int32*, err_bnds_norm : LibC::Double*, err_bnds_comp : LibC::Double*, nparams : Int32*, params : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun zsytf2 = zsytf2_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, info : Int32*)
    fun zsytrf = zsytrf_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zsytri = zsytri_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, work : ComplexDouble*, info : Int32*)
    fun zsytrs = zsytrs_(uplo : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, ipiv : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun ztbcon = ztbcon_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, kd : Int32*, ab : ComplexDouble*, ldab : Int32*, rcond : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun ztbrfs = ztbrfs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : ComplexDouble*, ldab : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun ztbtrs = ztbtrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, kd : Int32*, nrhs : Int32*, ab : ComplexDouble*, ldab : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun ztfsm = ztfsm_(transr : LibC::Char*, side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, m : Int32*, n : Int32*, alpha : ComplexDouble*, a : ComplexDouble*, b : ComplexDouble*, ldb : Int32*)
    fun ztftri = ztftri_(transr : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : ComplexDouble*, info : Int32*)
    fun ztfttp = ztfttp_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, arf : ComplexDouble*, ap : ComplexDouble*, info : Int32*)
    fun ztfttr = ztfttr_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, arf : ComplexDouble*, a : ComplexDouble*, lda : Int32*, info : Int32*)
    fun ztgevc = ztgevc_(side : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, s : ComplexDouble*, lds : Int32*, p : ComplexDouble*, ldp : Int32*, vl : ComplexDouble*, ldvl : Int32*, vr : ComplexDouble*, ldvr : Int32*, mm : Int32*, m : Int32*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun ztgex2 = ztgex2_(wantq : LibC::Char*, wantz : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, q : ComplexDouble*, ldq : Int32*, z__ : ComplexDouble*, ldz : Int32*, j1 : Int32*, info : Int32*)
    fun ztgexc = ztgexc_(wantq : Int32*, wantz : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, q : ComplexDouble*, ldq : Int32*, z : ComplexDouble*, ldz : Int32*, ifst : Int32*, ilst : Int32*, info : Int32*)
    fun ztgsen = ztgsen_(ijob : Int32*, wantq : Int32*, wantz : Int32*, select : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, alpha : ComplexDouble*, beta : ComplexDouble*, q : ComplexDouble*, ldq : Int32*, z : ComplexDouble*, ldz : Int32*, m : Int32*, pl : LibC::Double*, pr : LibC::Double*, dif : LibC::Double*, work : ComplexDouble*, lwork : Int32*, iwork : Int32*, liwork : Int32*, info : Int32*)
    fun ztgsja = ztgsja_(jobu : LibC::Char*, jobv : LibC::Char*, jobq : LibC::Char*, m : Int32*, p : Int32*, n : Int32*, k : Int32*, l : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, tola : LibC::Double*, tolb : LibC::Double*, alpha : LibC::Double*, beta : LibC::Double*, u : ComplexDouble*, ldu : Int32*, v : ComplexDouble*, ldv : Int32*, q : ComplexDouble*, ldq : Int32*, work : ComplexDouble*, ncycle : Int32*, info : Int32*)
    fun ztgsna = ztgsna_(job : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, vl : ComplexDouble*, ldvl : Int32*, vr : ComplexDouble*, ldvr : Int32*, s : LibC::Double*, dif : LibC::Double*, mm : Int32*, m : Int32*, work : ComplexDouble*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun ztgsy2 = ztgsy2_(trans : LibC::Char*, ijob : Int32*, m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, c__ : ComplexDouble*, ldc : Int32*, d__ : ComplexDouble*, ldd : Int32*, e : ComplexDouble*, lde : Int32*, f : ComplexDouble*, ldf : Int32*, scale : LibC::Double*, rdsum : LibC::Double*, rdscal : LibC::Double*, info : Int32*)
    fun ztgsyl = ztgsyl_(trans : LibC::Char*, ijob : Int32*, m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, c : ComplexDouble*, ldc : Int32*, d : ComplexDouble*, ldd : Int32*, e : ComplexDouble*, lde : Int32*, f : ComplexDouble*, ldf : Int32*, dif : LibC::Double*, scale : LibC::Double*, work : ComplexDouble*, lwork : Int32*, iwork : Int32*, info : Int32*)
    fun ztpcon = ztpcon_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, ap : ComplexDouble*, rcond : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun ztprfs = ztprfs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun ztptri = ztptri_(uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, ap : ComplexDouble*, info : Int32*)
    fun ztptrs = ztptrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, ap : ComplexDouble*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun ztpttf = ztpttf_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, arf : ComplexDouble*, info : Int32*)
    fun ztpttr = ztpttr_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, a : ComplexDouble*, lda : Int32*, info : Int32*)
    fun ztrcon = ztrcon_(norm : LibC::Char*, uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, rcond : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun ztrevc = ztrevc_(side : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, t : ComplexDouble*, ldt : Int32*, vl : ComplexDouble*, ldvl : Int32*, vr : ComplexDouble*, ldvr : Int32*, mm : Int32*, m : Int32*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun ztrexc = ztrexc_(compq : LibC::Char*, n : Int32*, t : ComplexDouble*, ldt : Int32*, q : ComplexDouble*, ldq : Int32*, ifst : Int32*, ilst : Int32*, info : Int32*)
    fun ztrrfs = ztrrfs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, x : ComplexDouble*, ldx : Int32*, ferr : LibC::Double*, berr : LibC::Double*, work : ComplexDouble*, rwork : LibC::Double*, info : Int32*)
    fun ztrsen = ztrsen_(job : LibC::Char*, compq : LibC::Char*, select : Int32*, n : Int32*, t : ComplexDouble*, ldt : Int32*, q : ComplexDouble*, ldq : Int32*, w : ComplexDouble*, m : Int32*, s : LibC::Double*, sep : LibC::Double*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun ztrsna = ztrsna_(job : LibC::Char*, howmny : LibC::Char*, select : Int32*, n : Int32*, t : ComplexDouble*, ldt : Int32*, vl : ComplexDouble*, ldvl : Int32*, vr : ComplexDouble*, ldvr : Int32*, s : LibC::Double*, sep : LibC::Double*, mm : Int32*, m : Int32*, work : ComplexDouble*, ldwork : Int32*, rwork : LibC::Double*, info : Int32*)
    fun ztrsyl = ztrsyl_(trana : LibC::Char*, tranb : LibC::Char*, isgn : Int32*, m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, c : ComplexDouble*, ldc : Int32*, scale : LibC::Double*, info : Int32*)
    fun ztrti2 = ztrti2_(uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, info : Int32*)
    fun ztrtri = ztrtri_(uplo : LibC::Char*, diag : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, info : Int32*)
    fun ztrtrs = ztrtrs_(uplo : LibC::Char*, trans : LibC::Char*, diag : LibC::Char*, n : Int32*, nrhs : Int32*, a : ComplexDouble*, lda : Int32*, b : ComplexDouble*, ldb : Int32*, info : Int32*)
    fun ztrttf = ztrttf_(transr : LibC::Char*, uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, arf : ComplexDouble*, info : Int32*)
    fun ztrttp = ztrttp_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, ap : ComplexDouble*, info : Int32*)
    fun ztzrqf = ztzrqf_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, info : Int32*)
    fun ztzrzf = ztzrzf_(m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zung2l = zung2l_(m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, info : Int32*)
    fun zung2r = zung2r_(m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, info : Int32*)
    fun zungbr = zungbr_(vect : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zunghr = zunghr_(n : Int32*, ilo : Int32*, ihi : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zungl2 = zungl2_(m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, info : Int32*)
    fun zunglq = zunglq_(m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zungql = zungql_(m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zungqr = zungqr_(m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zungr2 = zungr2_(m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, info : Int32*)
    fun zungrq = zungrq_(m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zungtr = zungtr_(uplo : LibC::Char*, n : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zunm2l = zunm2l_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, c__ : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, info : Int32*)
    fun zunm2r = zunm2r_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, c__ : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, info : Int32*)
    fun zunmbr = zunmbr_(vect : LibC::Char*, side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zunmhr = zunmhr_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, ilo : Int32*, ihi : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zunml2 = zunml2_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, c__ : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, info : Int32*)
    fun zunmlq = zunmlq_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zunmql = zunmql_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zunmqr = zunmqr_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zunmr2 = zunmr2_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, c__ : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, info : Int32*)
    fun zunmr3 = zunmr3_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, l : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, c__ : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, info : Int32*)
    fun zunmrq = zunmrq_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zunmrz = zunmrz_(side : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, k : Int32*, l : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zunmtr = zunmtr_(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, a : ComplexDouble*, lda : Int32*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, lwork : Int32*, info : Int32*)
    fun zupgtr = zupgtr_(uplo : LibC::Char*, n : Int32*, ap : ComplexDouble*, tau : ComplexDouble*, q : ComplexDouble*, ldq : Int32*, work : ComplexDouble*, info : Int32*)
    fun zupmtr = zupmtr_(side : LibC::Char*, uplo : LibC::Char*, trans : LibC::Char*, m : Int32*, n : Int32*, ap : ComplexDouble*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int32*, work : ComplexDouble*, info : Int32*)
  end
{% end %}
