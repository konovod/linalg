require "./libCBLAS"

{% if flag?(:darwin) %}
  @[Link(framework: "Accelerate")]
  lib LibLAPACK
    alias Char = LibC::Char
    alias Int = LibC::Int
    alias Float = LibC::Float
    alias Double = LibC::Double
    alias ComplexFloat = LibCBLAS::ComplexFloat
    alias FloatReturn = Double
    alias ComplexDouble = LibCBLAS::ComplexDouble
    alias CSelect1 = (ComplexFloat* -> Int)
    alias CSelect2 = (ComplexFloat*, ComplexFloat* -> Int)
    alias DSelect2 = (Double*, Double* -> Int)
    alias DSelect3 = (Double*, Double*, Double* -> Int)
    alias SSelect2 = (Float*, Float* -> Int)
    alias SSelect3 = (Float*, Float*, Float* -> Int)
    alias ZSelect1 = (ComplexDouble* -> Int)
    alias ZSelect2 = (ComplexDouble*, ComplexDouble* -> Int)

    fun cbbcsd(jobu1 : Char*, jobu2 : Char*, jobv1t : Char*, jobv2t : Char*, trans : Char*, m : Int*, p : Int*, q : Int*, theta : Float*, phi : Float*, u1 : ComplexFloat*, ldu1 : Int*, u2 : ComplexFloat*, ldu2 : Int*, v1_t : ComplexFloat*, ldv1t : Int*, v2_t : ComplexFloat*, ldv2t : Int*, b11_d : Float*, b11_e : Float*, b12_d : Float*, b12_e : Float*, b21_d : Float*, b21_e : Float*, b22_d : Float*, b22_e : Float*, rwork : Float*, lrwork : Int*, info : Int*)
    fun cbdsqr(uplo : Char*, n : Int*, ncvt : Int*, nru : Int*, ncc : Int*, d : Float*, e : Float*, vt : ComplexFloat*, ldvt : Int*, u : ComplexFloat*, ldu : Int*, c : ComplexFloat*, ldc : Int*, rwork : Float*, info : Int*)
    fun cgbbrd(vect : Char*, m : Int*, n : Int*, ncc : Int*, kl : Int*, ku : Int*, ab : ComplexFloat*, ldab : Int*, d : Float*, e : Float*, q : ComplexFloat*, ldq : Int*, pt : ComplexFloat*, ldpt : Int*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgbcon(norm : Char*, n : Int*, kl : Int*, ku : Int*, ab : ComplexFloat*, ldab : Int*, ipiv : Int*, anorm : Float*, rcond : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgbequ(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : ComplexFloat*, ldab : Int*, r : Float*, c : Float*, rowcnd : Float*, colcnd : Float*, amax : Float*, info : Int*)
    fun cgbequb(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : ComplexFloat*, ldab : Int*, r : Float*, c : Float*, rowcnd : Float*, colcnd : Float*, amax : Float*, info : Int*)
    fun cgbrfs(trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexFloat*, ldab : Int*, afb : ComplexFloat*, ldafb : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgbrfsx(trans : Char*, equed : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexFloat*, ldab : Int*, afb : ComplexFloat*, ldafb : Int*, ipiv : Int*, r : Float*, c : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgbsv(n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexFloat*, ldab : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cgbsvx(fact : Char*, trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexFloat*, ldab : Int*, afb : ComplexFloat*, ldafb : Int*, ipiv : Int*, equed : Char*, r : Float*, c : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgbsvxx(fact : Char*, trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexFloat*, ldab : Int*, afb : ComplexFloat*, ldafb : Int*, ipiv : Int*, equed : Char*, r : Float*, c : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, rpvgrw : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgbtf2(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : ComplexFloat*, ldab : Int*, ipiv : Int*, info : Int*)
    fun cgbtrf(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : ComplexFloat*, ldab : Int*, ipiv : Int*, info : Int*)
    fun cgbtrs(trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexFloat*, ldab : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cgebak(job : Char*, side : Char*, n : Int*, ilo : Int*, ihi : Int*, scale : Float*, m : Int*, v : ComplexFloat*, ldv : Int*, info : Int*)
    fun cgebal(job : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ilo : Int*, ihi : Int*, scale : Float*, info : Int*)
    fun cgebd2(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, d__ : Float*, e : Float*, tauq : ComplexFloat*, taup : ComplexFloat*, work : ComplexFloat*, info : Int*)
    fun cgebrd(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, d : Float*, e : Float*, tauq : ComplexFloat*, taup : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgecon(norm : Char*, n : Int*, a : ComplexFloat*, lda : Int*, anorm : Float*, rcond : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgeequ(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, r : Float*, c : Float*, rowcnd : Float*, colcnd : Float*, amax : Float*, info : Int*)
    fun cgeequb(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, r : Float*, c : Float*, rowcnd : Float*, colcnd : Float*, amax : Float*, info : Int*)
    fun cgees(jobvs : Char*, sort : Char*, select : CSelect1, n : Int*, a : ComplexFloat*, lda : Int*, sdim : Int*, w : ComplexFloat*, vs : ComplexFloat*, ldvs : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, bwork : Int*, info : Int*)
    fun cgeesx(jobvs : Char*, sort : Char*, select : CSelect1, sense : Char*, n : Int*, a : ComplexFloat*, lda : Int*, sdim : Int*, w : ComplexFloat*, vs : ComplexFloat*, ldvs : Int*, rconde : Float*, rcondv : Float*, work : ComplexFloat*, lwork : Int*, rwork : Float*, bwork : Int*, info : Int*)
    fun cgeev(jobvl : Char*, jobvr : Char*, n : Int*, a : ComplexFloat*, lda : Int*, w : ComplexFloat*, vl : ComplexFloat*, ldvl : Int*, vr : ComplexFloat*, ldvr : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun cgeevx(balanc : Char*, jobvl : Char*, jobvr : Char*, sense : Char*, n : Int*, a : ComplexFloat*, lda : Int*, w : ComplexFloat*, vl : ComplexFloat*, ldvl : Int*, vr : ComplexFloat*, ldvr : Int*, ilo : Int*, ihi : Int*, scale : Float*, abnrm : Float*, rconde : Float*, rcondv : Float*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun cgegs(jobvsl : Char*, jobvsr : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, alpha : ComplexFloat*, beta : ComplexFloat*, vsl : ComplexFloat*, ldvsl : Int*, vsr : ComplexFloat*, ldvsr : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun cgegv(jobvl : Char*, jobvr : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, alpha : ComplexFloat*, beta : ComplexFloat*, vl : ComplexFloat*, ldvl : Int*, vr : ComplexFloat*, ldvr : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun cgehd2(n : Int*, ilo : Int*, ihi : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, info : Int*)
    fun cgehrd(n : Int*, ilo : Int*, ihi : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgejsv(joba : Char*, jobu : Char*, jobv : Char*, jobr : Char*, jobt : Char*, jobp : Char*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, sva : Float*, u : ComplexFloat*, ldu : Int*, v : ComplexFloat*, ldv : Int*, cwork : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, info : Int*)
    fun cgelq(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, t : ComplexFloat*, tsize : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgelq2(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, info : Int*)
    fun cgelqf(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgels(trans : Char*, m : Int*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgelsd(m : Int*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, s : Float*, rcond : Float*, rank : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, iwork : Int*, info : Int*)
    fun cgelss(m : Int*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, s : Float*, rcond : Float*, rank : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun cgelsx(m : Int*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, jpvt : Int*, rcond : Float*, rank : Int*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgelsy(m : Int*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, jpvt : Int*, rcond : Float*, rank : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun cgemlq(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, t : ComplexFloat*, tsize : Int*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgemqr(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, t : ComplexFloat*, tsize : Int*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgemqrt(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, nb : Int*, v : ComplexFloat*, ldv : Int*, t : ComplexFloat*, ldt : Int*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, info : Int*)
    fun cgeql2(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, info : Int*)
    fun cgeqlf(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgeqp3(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, jpvt : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun cgeqpf(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, jpvt : Int*, tau : ComplexFloat*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgeqr(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, t : ComplexFloat*, tsize : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgeqr2(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, info : Int*)
    fun cgeqrf(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgeqrfp(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgeqrt(m : Int*, n : Int*, nb : Int*, a : ComplexFloat*, lda : Int*, t : ComplexFloat*, ldt : Int*, work : ComplexFloat*, info : Int*)
    fun cgeqrt2(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, t : ComplexFloat*, ldt : Int*, info : Int*)
    fun cgeqrt3(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, t : ComplexFloat*, ldt : Int*, info : Int*)
    fun cgerfs(trans : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgerfsx(trans : Char*, equed : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, r : Float*, c : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgerq2(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, info : Int*)
    fun cgerqf(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgesc2(n : Int*, a : ComplexFloat*, lda : Int*, rhs : ComplexFloat*, ipiv : Int*, jpiv : Int*, scale : Float*)
    fun cgesdd(jobz : Char*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, s : Float*, u : ComplexFloat*, ldu : Int*, vt : ComplexFloat*, ldvt : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, iwork : Int*, info : Int*)
    fun cgesv(n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cgesvd(jobu : Char*, jobvt : Char*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, s : Float*, u : ComplexFloat*, ldu : Int*, vt : ComplexFloat*, ldvt : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun cgesvdq(joba : Char*, jobp : Char*, jobr : Char*, jobu : Char*, jobv : Char*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, s : Float*, u : ComplexFloat*, ldu : Int*, v : ComplexFloat*, ldv : Int*, numrank : Int*, iwork : Int*, liwork : Int*, cwork : ComplexFloat*, lcwork : Int*, rwork : Float*, lrwork : Int*, info : Int*)
    fun cgesvdx(jobu : Char*, jobvt : Char*, range : Char*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, ns : Int*, s : Float*, u : ComplexFloat*, ldu : Int*, vt : ComplexFloat*, ldvt : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, iwork : Int*, info : Int*)
    fun cgesvj(joba : Char*, jobu : Char*, jobv : Char*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, sva : Float*, mv : Int*, v : ComplexFloat*, ldv : Int*, cwork : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, info : Int*)
    fun cgesvx(fact : Char*, trans : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, equed : Char*, r : Float*, c : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgesvxx(fact : Char*, trans : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, equed : Char*, r : Float*, c : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, rpvgrw : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgetc2(n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, jpiv : Int*, info : Int*)
    fun cgetf2(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, info : Int*)
    fun cgetrf(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, info : Int*)
    fun cgetrf2(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, info : Int*)
    fun cgetri(n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgetrs(trans : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cgetsls(trans : Char*, m : Int*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgetsqrhrt(m : Int*, n : Int*, mb1 : Int*, nb1 : Int*, nb2 : Int*, a : ComplexFloat*, lda : Int*, t : ComplexFloat*, ldt : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cggbak(job : Char*, side : Char*, n : Int*, ilo : Int*, ihi : Int*, lscale : Float*, rscale : Float*, m : Int*, v : ComplexFloat*, ldv : Int*, info : Int*)
    fun cggbal(job : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, ilo : Int*, ihi : Int*, lscale : Float*, rscale : Float*, work : Float*, info : Int*)
    fun cgges(jobvsl : Char*, jobvsr : Char*, sort : Char*, selctg : CSelect2, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, sdim : Int*, alpha : ComplexFloat*, beta : ComplexFloat*, vsl : ComplexFloat*, ldvsl : Int*, vsr : ComplexFloat*, ldvsr : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, bwork : Int*, info : Int*)
    fun cgges3(jobvsl : Char*, jobvsr : Char*, sort : Char*, selctg : CSelect2, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, sdim : Int*, alpha : ComplexFloat*, beta : ComplexFloat*, vsl : ComplexFloat*, ldvsl : Int*, vsr : ComplexFloat*, ldvsr : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, bwork : Int*, info : Int*)
    fun cggesx(jobvsl : Char*, jobvsr : Char*, sort : Char*, selctg : CSelect2, sense : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, sdim : Int*, alpha : ComplexFloat*, beta : ComplexFloat*, vsl : ComplexFloat*, ldvsl : Int*, vsr : ComplexFloat*, ldvsr : Int*, rconde : Float*, rcondv : Float*, work : ComplexFloat*, lwork : Int*, rwork : Float*, iwork : Int*, liwork : Int*, bwork : Int*, info : Int*)
    fun cggev(jobvl : Char*, jobvr : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, alpha : ComplexFloat*, beta : ComplexFloat*, vl : ComplexFloat*, ldvl : Int*, vr : ComplexFloat*, ldvr : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun cggev3(jobvl : Char*, jobvr : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, alpha : ComplexFloat*, beta : ComplexFloat*, vl : ComplexFloat*, ldvl : Int*, vr : ComplexFloat*, ldvr : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun cggevx(balanc : Char*, jobvl : Char*, jobvr : Char*, sense : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, alpha : ComplexFloat*, beta : ComplexFloat*, vl : ComplexFloat*, ldvl : Int*, vr : ComplexFloat*, ldvr : Int*, ilo : Int*, ihi : Int*, lscale : Float*, rscale : Float*, abnrm : Float*, bbnrm : Float*, rconde : Float*, rcondv : Float*, work : ComplexFloat*, lwork : Int*, rwork : Float*, iwork : Int*, bwork : Int*, info : Int*)
    fun cggglm(n : Int*, m : Int*, p : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, d : ComplexFloat*, x : ComplexFloat*, y : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgghd3(compq : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, q : ComplexFloat*, ldq : Int*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgghrd(compq : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, q : ComplexFloat*, ldq : Int*, z : ComplexFloat*, ldz : Int*, info : Int*)
    fun cgglse(m : Int*, n : Int*, p : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, c : ComplexFloat*, d : ComplexFloat*, x : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cggqrf(n : Int*, m : Int*, p : Int*, a : ComplexFloat*, lda : Int*, taua : ComplexFloat*, b : ComplexFloat*, ldb : Int*, taub : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cggrqf(m : Int*, p : Int*, n : Int*, a : ComplexFloat*, lda : Int*, taua : ComplexFloat*, b : ComplexFloat*, ldb : Int*, taub : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cggsvd(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, n : Int*, p : Int*, k : Int*, l : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, alpha : Float*, beta : Float*, u : ComplexFloat*, ldu : Int*, v : ComplexFloat*, ldv : Int*, q : ComplexFloat*, ldq : Int*, work : ComplexFloat*, rwork : Float*, iwork : Int*, info : Int*) : Int
    fun cggsvd3(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, n : Int*, p : Int*, k : Int*, l : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, alpha : Float*, beta : Float*, u : ComplexFloat*, ldu : Int*, v : ComplexFloat*, ldv : Int*, q : ComplexFloat*, ldq : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, iwork : Int*, info : Int*)
    fun cggsvp(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, p : Int*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, tola : Float*, tolb : Float*, k : Int*, l : Int*, u : ComplexFloat*, ldu : Int*, v : ComplexFloat*, ldv : Int*, q : ComplexFloat*, ldq : Int*, iwork : Int*, rwork : Float*, tau : ComplexFloat*, work : ComplexFloat*, info : Int*) : Int
    fun cggsvp3(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, p : Int*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, tola : Float*, tolb : Float*, k : Int*, l : Int*, u : ComplexFloat*, ldu : Int*, v : ComplexFloat*, ldv : Int*, q : ComplexFloat*, ldq : Int*, iwork : Int*, rwork : Float*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cgtcon(norm : Char*, n : Int*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*, du2 : ComplexFloat*, ipiv : Int*, anorm : Float*, rcond : Float*, work : ComplexFloat*, info : Int*)
    fun cgtrfs(trans : Char*, n : Int*, nrhs : Int*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*, dlf : ComplexFloat*, df : ComplexFloat*, duf : ComplexFloat*, du2 : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgtsv(n : Int*, nrhs : Int*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cgtsvx(fact : Char*, trans : Char*, n : Int*, nrhs : Int*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*, dlf : ComplexFloat*, df : ComplexFloat*, duf : ComplexFloat*, du2 : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cgttrf(n : Int*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*, du2 : ComplexFloat*, ipiv : Int*, info : Int*)
    fun cgttrs(trans : Char*, n : Int*, nrhs : Int*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*, du2 : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cgtts2(itrans : Int*, n : Int*, nrhs : Int*, dl : ComplexFloat*, d__ : ComplexFloat*, du : ComplexFloat*, du2 : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*)
    fun chbev(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun chbev_2stage(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun chbevd(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun chbevd_2stage(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun chbevx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, q : ComplexFloat*, ldq : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, rwork : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun chbevx_2stage(jobz : Char*, range : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, q : ComplexFloat*, ldq : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun chbgst(vect : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : ComplexFloat*, ldab : Int*, bb : ComplexFloat*, ldbb : Int*, x : ComplexFloat*, ldx : Int*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun chbgv(jobz : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : ComplexFloat*, ldab : Int*, bb : ComplexFloat*, ldbb : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun chbgvd(jobz : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : ComplexFloat*, ldab : Int*, bb : ComplexFloat*, ldbb : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun chbgvx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : ComplexFloat*, ldab : Int*, bb : ComplexFloat*, ldbb : Int*, q : ComplexFloat*, ldq : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, rwork : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun chbtrd(vect : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, d : Float*, e : Float*, q : ComplexFloat*, ldq : Int*, work : ComplexFloat*, info : Int*)
    fun checon(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, anorm : Float*, rcond : Float*, work : ComplexFloat*, info : Int*)
    fun checon_3(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, e : ComplexFloat*, ipiv : Int*, anorm : Float*, rcond : Float*, work : ComplexFloat*, info : Int*)
    fun cheequb(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, s : Float*, scond : Float*, amax : Float*, work : ComplexFloat*, info : Int*)
    fun cheev(jobz : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, w : Float*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun cheev_2stage(jobz : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, w : Float*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun cheevd(jobz : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, w : Float*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun cheevd_2stage(jobz : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, w : Float*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun cheevr(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, isuppz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun cheevr_2stage(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, isuppz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun cheevx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun cheevx_2stage(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun chegs2(itype : Int*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun chegst(itype : Int*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun chegv(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, w : Float*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun chegv_2stage(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, w : Float*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun chegvd(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, w : Float*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun chegvx(itype : Int*, jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun cherfs(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cherfsx(uplo : Char*, equed : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, s : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun chesv(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chesv_aa(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chesv_aa_2stage(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, tb : ComplexFloat*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chesv_rk(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, e : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chesv_rook(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chesvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun chesvxx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, equed : Char*, s : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, rpvgrw : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cheswapr(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, i1 : Int*, i2 : Int*)
    fun chetd2(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, d__ : Float*, e : Float*, tau : ComplexFloat*, info : Int*)
    fun chetf2(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, info : Int*)
    fun chetrd(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, d : Float*, e : Float*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chetrd_2stage(vect : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, d : Float*, e : Float*, tau : ComplexFloat*, hous2 : ComplexFloat*, lhous2 : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chetrf(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chetrf_aa(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chetrf_aa_2stage(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, tb : ComplexFloat*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chetrf_rk(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, e : ComplexFloat*, ipiv : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chetrf_rook(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chetri(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, work : ComplexFloat*, info : Int*)
    fun chetri2(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chetri2x(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, work : ComplexFloat*, nb : Int*, info : Int*)
    fun chetri_3(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, e : ComplexFloat*, ipiv : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chetrs(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun chetrs2(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, info : Int*)
    fun chetrs_3(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, e : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun chetrs_aa(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun chetrs_aa_2stage(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, tb : ComplexFloat*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun chetrs_rook(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun chfrk(transr : Char*, uplo : Char*, trans : Char*, n : Int*, k : Int*, alpha : Float*, a : ComplexFloat*, lda : Int*, beta : Float*, c : ComplexFloat*)
    fun chgeqz(job : Char*, compq : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, h : ComplexFloat*, ldh : Int*, t : ComplexFloat*, ldt : Int*, alpha : ComplexFloat*, beta : ComplexFloat*, q : ComplexFloat*, ldq : Int*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun chla_transtype_(ret_val : Char*, ret_val_len : Int, trans : Int*)
    fun chpcon(uplo : Char*, n : Int*, ap : ComplexFloat*, ipiv : Int*, anorm : Float*, rcond : Float*, work : ComplexFloat*, info : Int*)
    fun chpev(jobz : Char*, uplo : Char*, n : Int*, ap : ComplexFloat*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun chpevd(jobz : Char*, uplo : Char*, n : Int*, ap : ComplexFloat*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun chpevx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, ap : ComplexFloat*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, rwork : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun chpgst(itype : Int*, uplo : Char*, n : Int*, ap : ComplexFloat*, bp : ComplexFloat*, info : Int*)
    fun chpgv(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, ap : ComplexFloat*, bp : ComplexFloat*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun chpgvd(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, ap : ComplexFloat*, bp : ComplexFloat*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun chpgvx(itype : Int*, jobz : Char*, range : Char*, uplo : Char*, n : Int*, ap : ComplexFloat*, bp : ComplexFloat*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, rwork : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun chprfs(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, afp : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun chpsv(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun chpsvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, afp : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun chptrd(uplo : Char*, n : Int*, ap : ComplexFloat*, d : Float*, e : Float*, tau : ComplexFloat*, info : Int*)
    fun chptrf(uplo : Char*, n : Int*, ap : ComplexFloat*, ipiv : Int*, info : Int*)
    fun chptri(uplo : Char*, n : Int*, ap : ComplexFloat*, ipiv : Int*, work : ComplexFloat*, info : Int*)
    fun chptrs(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun chsein(side : Char*, eigsrc : Char*, initv : Char*, select : Int*, n : Int*, h : ComplexFloat*, ldh : Int*, w : ComplexFloat*, vl : ComplexFloat*, ldvl : Int*, vr : ComplexFloat*, ldvr : Int*, mm : Int*, m : Int*, work : ComplexFloat*, rwork : Float*, ifaill : Int*, ifailr : Int*, info : Int*)
    fun chseqr(job : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, h : ComplexFloat*, ldh : Int*, w : ComplexFloat*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cla_gbamv_(trans : Int*, m : Int*, n : Int*, kl : Int*, ku : Int*, alpha : Float*, ab : ComplexFloat*, ldab : Int*, x : ComplexFloat*, incx : Int*, beta : Float*, y : Float*, incy : Int*)
    fun cla_gbrcond_c_(trans : Char*, n : Int*, kl : Int*, ku : Int*, ab : ComplexFloat*, ldab : Int*, afb : ComplexFloat*, ldafb : Int*, ipiv : Int*, c__ : Float*, capply : Char*, info : Int*, work : ComplexFloat*, rwork : Float*, trans_len : Int) : Double
    fun cla_gbrcond_x_(trans : Char*, n : Int*, kl : Int*, ku : Int*, ab : ComplexFloat*, ldab : Int*, afb : ComplexFloat*, ldafb : Int*, ipiv : Int*, x : ComplexFloat*, info : Int*, work : ComplexFloat*, rwork : Float*, trans_len : Int) : Double
    fun cla_gbrfsx_extended_(prec_type__ : Int*, trans_type__ : Int*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexFloat*, ldab : Int*, afb : ComplexFloat*, ldafb : Int*, ipiv : Int*, colequ : Char*, c__ : Float*, b : ComplexFloat*, ldb : Int*, y : ComplexFloat*, ldy : Int*, berr_out__ : Float*, n_norms__ : Int*, errs_n__ : Float*, errs_c__ : Float*, res : ComplexFloat*, ayb : Float*, dy : ComplexFloat*, y_tail__ : ComplexFloat*, rcond : Float*, ithresh : Int*, rthresh : Float*, dz_ub__ : Float*, ignore_cwise__ : Char*, info : Int*)
    fun cla_gbrpvgrw_(n : Int*, kl : Int*, ku : Int*, ncols : Int*, ab : ComplexFloat*, ldab : Int*, afb : ComplexFloat*, ldafb : Int*) : Double
    fun cla_geamv_(trans : Int*, m : Int*, n : Int*, alpha : Float*, a : ComplexFloat*, lda : Int*, x : ComplexFloat*, incx : Int*, beta : Float*, y : Float*, incy : Int*)
    fun cla_gercond_c_(trans : Char*, n : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, c__ : Float*, capply : Char*, info : Int*, work : ComplexFloat*, rwork : Float*, trans_len : Int) : Double
    fun cla_gercond_x_(trans : Char*, n : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, x : ComplexFloat*, info : Int*, work : ComplexFloat*, rwork : Float*, trans_len : Int) : Double
    fun cla_gerfsx_extended_(prec_type__ : Int*, trans_type__ : Int*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, colequ : Char*, c__ : Float*, b : ComplexFloat*, ldb : Int*, y : ComplexFloat*, ldy : Int*, berr_out__ : Float*, n_norms__ : Int*, errs_n__ : Float*, errs_c__ : Float*, res : ComplexFloat*, ayb : Float*, dy : ComplexFloat*, y_tail__ : ComplexFloat*, rcond : Float*, ithresh : Int*, rthresh : Float*, dz_ub__ : Float*, ignore_cwise__ : Char*, info : Int*)
    fun cla_heamv_(uplo : Int*, n : Int*, alpha : Float*, a : ComplexFloat*, lda : Int*, x : ComplexFloat*, incx : Int*, beta : Float*, y : Float*, incy : Int*)
    fun cla_hercond_c_(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, c__ : Float*, capply : Char*, info : Int*, work : ComplexFloat*, rwork : Float*, uplo_len : Int) : Double
    fun cla_hercond_x_(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, x : ComplexFloat*, info : Int*, work : ComplexFloat*, rwork : Float*, uplo_len : Int) : Double
    fun cla_herfsx_extended_(prec_type__ : Int*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, colequ : Char*, c__ : Float*, b : ComplexFloat*, ldb : Int*, y : ComplexFloat*, ldy : Int*, berr_out__ : Float*, n_norms__ : Int*, errs_n__ : Float*, errs_c__ : Float*, res : ComplexFloat*, ayb : Float*, dy : ComplexFloat*, y_tail__ : ComplexFloat*, rcond : Float*, ithresh : Int*, rthresh : Float*, dz_ub__ : Float*, ignore_cwise__ : Char*, info : Int*, uplo_len : Int)
    fun cla_herpvgrw_(uplo : Char*, n : Int*, info : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, work : Float*, uplo_len : Int) : Double
    fun cla_lin_berr_(n : Int*, nz : Int*, nrhs : Int*, res : ComplexFloat*, ayb : Float*, berr : Float*)
    fun cla_porcond_c_(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, c__ : Float*, capply : Char*, info : Int*, work : ComplexFloat*, rwork : Float*, uplo_len : Int) : Double
    fun cla_porcond_x_(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, x : ComplexFloat*, info : Int*, work : ComplexFloat*, rwork : Float*, uplo_len : Int) : Double
    fun cla_porfsx_extended_(prec_type__ : Int*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, colequ : Char*, c__ : Float*, b : ComplexFloat*, ldb : Int*, y : ComplexFloat*, ldy : Int*, berr_out__ : Float*, n_norms__ : Int*, errs_n__ : Float*, errs_c__ : Float*, res : ComplexFloat*, ayb : Float*, dy : ComplexFloat*, y_tail__ : ComplexFloat*, rcond : Float*, ithresh : Int*, rthresh : Float*, dz_ub__ : Float*, ignore_cwise__ : Char*, info : Int*, uplo_len : Int)
    fun cla_porpvgrw_(uplo : Char*, ncols : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, work : Float*, uplo_len : Int) : Double
    fun cla_rpvgrw_(n : Int*, ncols : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*) : Double
    fun cla_syamv_(uplo : Int*, n : Int*, alpha : Float*, a : ComplexFloat*, lda : Int*, x : ComplexFloat*, incx : Int*, beta : Float*, y : Float*, incy : Int*)
    fun cla_syrcond_c_(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, c__ : Float*, capply : Char*, info : Int*, work : ComplexFloat*, rwork : Float*, uplo_len : Int) : Double
    fun cla_syrcond_x_(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, x : ComplexFloat*, info : Int*, work : ComplexFloat*, rwork : Float*, uplo_len : Int) : Double
    fun cla_syrfsx_extended_(prec_type__ : Int*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, colequ : Char*, c__ : Float*, b : ComplexFloat*, ldb : Int*, y : ComplexFloat*, ldy : Int*, berr_out__ : Float*, n_norms__ : Int*, errs_n__ : Float*, errs_c__ : Float*, res : ComplexFloat*, ayb : Float*, dy : ComplexFloat*, y_tail__ : ComplexFloat*, rcond : Float*, ithresh : Int*, rthresh : Float*, dz_ub__ : Float*, ignore_cwise__ : Char*, info : Int*, uplo_len : Int)
    fun cla_syrpvgrw_(uplo : Char*, n : Int*, info : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, work : Float*, uplo_len : Int) : Double
    fun cla_wwaddw_(n : Int*, x : ComplexFloat*, y : ComplexFloat*, w : ComplexFloat*)
    fun clabrd(m : Int*, n : Int*, nb : Int*, a : ComplexFloat*, lda : Int*, d__ : Float*, e : Float*, tauq : ComplexFloat*, taup : ComplexFloat*, x : ComplexFloat*, ldx : Int*, y : ComplexFloat*, ldy : Int*)
    fun clacgv(n : Int*, x : ComplexFloat*, incx : Int*)
    fun clacn2(n : Int*, v : ComplexFloat*, x : ComplexFloat*, est : Float*, kase : Int*, isave : Int*)
    fun clacon(n : Int*, v : ComplexFloat*, x : ComplexFloat*, est : Float*, kase : Int*)
    fun clacp2(uplo : Char*, m : Int*, n : Int*, a : Float*, lda : Int*, b : ComplexFloat*, ldb : Int*)
    fun clacpy(uplo : Char*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*)
    fun clacrm(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, b : Float*, ldb : Int*, c : ComplexFloat*, ldc : Int*, rwork : Float*)
    fun clacrt(n : Int*, cx : ComplexFloat*, incx : Int*, cy : ComplexFloat*, incy : Int*, c__ : ComplexFloat*, s : ComplexFloat*)
    fun cladiv(ret_val : ComplexFloat*, x : ComplexFloat*, y : ComplexFloat*)
    fun claed0(qsiz : Int*, n : Int*, d__ : Float*, e : Float*, q : ComplexFloat*, ldq : Int*, qstore : ComplexFloat*, ldqs : Int*, rwork : Float*, iwork : Int*, info : Int*)
    fun claed7(n : Int*, cutpnt : Int*, qsiz : Int*, tlvls : Int*, curlvl : Int*, curpbm : Int*, d__ : Float*, q : ComplexFloat*, ldq : Int*, rho : Float*, indxq : Int*, qstore : Float*, qptr : Int*, prmptr : Int*, perm : Int*, givptr : Int*, givcol : Int*, givnum : Float*, work : ComplexFloat*, rwork : Float*, iwork : Int*, info : Int*)
    fun claed8(k : Int*, n : Int*, qsiz : Int*, q : ComplexFloat*, ldq : Int*, d__ : Float*, rho : Float*, cutpnt : Int*, z__ : Float*, dlamda : Float*, q2 : ComplexFloat*, ldq2 : Int*, w : Float*, indxp : Int*, indx : Int*, indxq : Int*, perm : Int*, givptr : Int*, givcol : Int*, givnum : Float*, info : Int*)
    fun claein(rightv : Char*, noinit : Char*, n : Int*, h__ : ComplexFloat*, ldh : Int*, w : ComplexFloat*, v : ComplexFloat*, b : ComplexFloat*, ldb : Int*, rwork : Float*, eps3 : Float*, smlnum : Float*, info : Int*)
    fun claesy(a : ComplexFloat*, b : ComplexFloat*, c__ : ComplexFloat*, rt1 : ComplexFloat*, rt2 : ComplexFloat*, evscal : ComplexFloat*, cs1 : ComplexFloat*, sn1 : ComplexFloat*)
    fun claev2(a : ComplexFloat*, b : ComplexFloat*, c__ : ComplexFloat*, rt1 : Float*, rt2 : Float*, cs1 : Float*, sn1 : ComplexFloat*)
    fun clag2z(m : Int*, n : Int*, sa : ComplexFloat*, ldsa : Int*, a : ComplexDouble*, lda : Int*, info : Int*)
    fun clagge(m : Int*, n : Int*, kl : Int*, ku : Int*, d : Float*, a : ComplexFloat*, lda : Int*, iseed : Int*, work : ComplexFloat*, info : Int*)
    fun claghe(n : Int*, k : Int*, d : Float*, a : ComplexFloat*, lda : Int*, iseed : Int*, work : ComplexFloat*, info : Int*)
    fun clags2(upper : Char*, a1 : Float*, a2 : ComplexFloat*, a3 : Float*, b1 : Float*, b2 : ComplexFloat*, b3 : Float*, csu : Float*, snu : ComplexFloat*, csv : Float*, snv : ComplexFloat*, csq : Float*, snq : ComplexFloat*)
    fun clagsy(n : Int*, k : Int*, d : Float*, a : ComplexFloat*, lda : Int*, iseed : Int*, work : ComplexFloat*, info : Int*)
    fun clagtm(trans : Char*, n : Int*, nrhs : Int*, alpha : Float*, dl : ComplexFloat*, d__ : ComplexFloat*, du : ComplexFloat*, x : ComplexFloat*, ldx : Int*, beta : Float*, b : ComplexFloat*, ldb : Int*)
    fun clahef(uplo : Char*, n : Int*, nb : Int*, kb : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, w : ComplexFloat*, ldw : Int*, info : Int*)
    fun clahqr(wantt : Char*, wantz : Char*, n : Int*, ilo : Int*, ihi : Int*, h__ : ComplexFloat*, ldh : Int*, w : ComplexFloat*, iloz : Int*, ihiz : Int*, z__ : ComplexFloat*, ldz : Int*, info : Int*)
    fun clahr2(n : Int*, k : Int*, nb : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, t : ComplexFloat*, ldt : Int*, y : ComplexFloat*, ldy : Int*)
    fun clahrd(n : Int*, k : Int*, nb : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, t : ComplexFloat*, ldt : Int*, y : ComplexFloat*, ldy : Int*)
    fun claic1(job : Int*, j : Int*, x : ComplexFloat*, sest : Float*, w : ComplexFloat*, gamma : ComplexFloat*, sestpr : Float*, s : ComplexFloat*, c__ : ComplexFloat*)
    fun clals0(icompq : Int*, nl : Int*, nr : Int*, sqre : Int*, nrhs : Int*, b : ComplexFloat*, ldb : Int*, bx : ComplexFloat*, ldbx : Int*, perm : Int*, givptr : Int*, givcol : Int*, ldgcol : Int*, givnum : Float*, ldgnum : Int*, poles : Float*, difl : Float*, difr : Float*, z__ : Float*, k : Int*, c__ : Float*, s : Float*, rwork : Float*, info : Int*)
    fun clalsa(icompq : Int*, smlsiz : Int*, n : Int*, nrhs : Int*, b : ComplexFloat*, ldb : Int*, bx : ComplexFloat*, ldbx : Int*, u : Float*, ldu : Int*, vt : Float*, k : Int*, difl : Float*, difr : Float*, z__ : Float*, poles : Float*, givptr : Int*, givcol : Int*, ldgcol : Int*, perm : Int*, givnum : Float*, c__ : Float*, s : Float*, rwork : Float*, iwork : Int*, info : Int*)
    fun clalsd(uplo : Char*, smlsiz : Int*, n : Int*, nrhs : Int*, d__ : Float*, e : Float*, b : ComplexFloat*, ldb : Int*, rcond : Float*, rank : Int*, work : ComplexFloat*, rwork : Float*, iwork : Int*, info : Int*)
    fun clangb(norm : Char*, n : Int*, kl : Int*, ku : Int*, ab : ComplexFloat*, ldab : Int*, work : Float*) : FloatReturn
    fun clange(norm : Char*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, work : Float*) : FloatReturn
    fun clangt(norm : Char*, n : Int*, dl : ComplexFloat*, d : ComplexFloat*, du : ComplexFloat*) : FloatReturn
    fun clanhb(norm : Char*, uplo : Char*, n : Int*, k : Int*, ab : ComplexFloat*, ldab : Int*, work : Float*) : FloatReturn
    fun clanhe(norm : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, work : Float*) : FloatReturn
    fun clanhf(norm : Char*, transr : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, work : Float*) : Double
    fun clanhp(norm : Char*, uplo : Char*, n : Int*, ap : ComplexFloat*, work : Float*) : FloatReturn
    fun clanhs(norm : Char*, n : Int*, a : ComplexFloat*, lda : Int*, work : Float*) : FloatReturn
    fun clanht(norm : Char*, n : Int*, d : Float*, e : ComplexFloat*) : FloatReturn
    fun clansb(norm : Char*, uplo : Char*, n : Int*, k : Int*, ab : ComplexFloat*, ldab : Int*, work : Float*) : FloatReturn
    fun clansp(norm : Char*, uplo : Char*, n : Int*, ap : ComplexFloat*, work : Float*) : FloatReturn
    fun clansy(norm : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, work : Float*) : FloatReturn
    fun clantb(norm : Char*, uplo : Char*, diag : Char*, n : Int*, k : Int*, ab : ComplexFloat*, ldab : Int*, work : Float*) : FloatReturn
    fun clantp(norm : Char*, uplo : Char*, diag : Char*, n : Int*, ap : ComplexFloat*, work : Float*) : FloatReturn
    fun clantr(norm : Char*, uplo : Char*, diag : Char*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, work : Float*) : FloatReturn
    fun clapll(n : Int*, x : ComplexFloat*, incx : Int*, y : ComplexFloat*, incy : Int*, ssmin : Float*)
    fun clapmr(forwrd : Int*, m : Int*, n : Int*, x : ComplexFloat*, ldx : Int*, k : Int*)
    fun clapmt(forwrd : Int*, m : Int*, n : Int*, x : ComplexFloat*, ldx : Int*, k : Int*)
    fun claqgb(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : ComplexFloat*, ldab : Int*, r__ : Float*, c__ : Float*, rowcnd : Float*, colcnd : Float*, amax : Float*, equed : Char*)
    fun claqge(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, r__ : Float*, c__ : Float*, rowcnd : Float*, colcnd : Float*, amax : Float*, equed : Char*)
    fun claqhb(uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, s : Float*, scond : Float*, amax : Float*, equed : Char*)
    fun claqhe(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, s : Float*, scond : Float*, amax : Float*, equed : Char*)
    fun claqhp(uplo : Char*, n : Int*, ap : ComplexFloat*, s : Float*, scond : Float*, amax : Float*, equed : Char*)
    fun claqp2(m : Int*, n : Int*, offset : Int*, a : ComplexFloat*, lda : Int*, jpvt : Int*, tau : ComplexFloat*, vn1 : Float*, vn2 : Float*, work : ComplexFloat*)
    fun claqps(m : Int*, n : Int*, offset : Int*, nb : Int*, kb : Int*, a : ComplexFloat*, lda : Int*, jpvt : Int*, tau : ComplexFloat*, vn1 : Float*, vn2 : Float*, auxv : ComplexFloat*, f : ComplexFloat*, ldf : Int*)
    fun claqr0(wantt : Char*, wantz : Char*, n : Int*, ilo : Int*, ihi : Int*, h__ : ComplexFloat*, ldh : Int*, w : ComplexFloat*, iloz : Int*, ihiz : Int*, z__ : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun claqr1(n : Int*, h__ : ComplexFloat*, ldh : Int*, s1 : ComplexFloat*, s2 : ComplexFloat*, v : ComplexFloat*)
    fun claqr2(wantt : Char*, wantz : Char*, n : Int*, ktop : Int*, kbot : Int*, nw : Int*, h__ : ComplexFloat*, ldh : Int*, iloz : Int*, ihiz : Int*, z__ : ComplexFloat*, ldz : Int*, ns : Int*, nd : Int*, sh : ComplexFloat*, v : ComplexFloat*, ldv : Int*, nh : Int*, t : ComplexFloat*, ldt : Int*, nv : Int*, wv : ComplexFloat*, ldwv : Int*, work : ComplexFloat*, lwork : Int*)
    fun claqr3(wantt : Char*, wantz : Char*, n : Int*, ktop : Int*, kbot : Int*, nw : Int*, h__ : ComplexFloat*, ldh : Int*, iloz : Int*, ihiz : Int*, z__ : ComplexFloat*, ldz : Int*, ns : Int*, nd : Int*, sh : ComplexFloat*, v : ComplexFloat*, ldv : Int*, nh : Int*, t : ComplexFloat*, ldt : Int*, nv : Int*, wv : ComplexFloat*, ldwv : Int*, work : ComplexFloat*, lwork : Int*)
    fun claqr4(wantt : Char*, wantz : Char*, n : Int*, ilo : Int*, ihi : Int*, h__ : ComplexFloat*, ldh : Int*, w : ComplexFloat*, iloz : Int*, ihiz : Int*, z__ : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun claqr5(wantt : Char*, wantz : Char*, kacc22 : Int*, n : Int*, ktop : Int*, kbot : Int*, nshfts : Int*, s : ComplexFloat*, h__ : ComplexFloat*, ldh : Int*, iloz : Int*, ihiz : Int*, z__ : ComplexFloat*, ldz : Int*, v : ComplexFloat*, ldv : Int*, u : ComplexFloat*, ldu : Int*, nv : Int*, wv : ComplexFloat*, ldwv : Int*, nh : Int*, wh : ComplexFloat*, ldwh : Int*)
    fun claqsb(uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, s : Float*, scond : Float*, amax : Float*, equed : Char*)
    fun claqsp(uplo : Char*, n : Int*, ap : ComplexFloat*, s : Float*, scond : Float*, amax : Float*, equed : Char*)
    fun claqsy(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, s : Float*, scond : Float*, amax : Float*, equed : Char*)
    fun clar1v(n : Int*, b1 : Int*, bn : Int*, lambda : Float*, d__ : Float*, l : Float*, ld : Float*, lld : Float*, pivmin : Float*, gaptol : Float*, z__ : ComplexFloat*, wantnc : Char*, negcnt : Int*, ztz : Float*, mingma : Float*, r__ : Int*, isuppz : Int*, nrminv : Float*, resid : Float*, rqcorr : Float*, work : Float*)
    fun clar2v(n : Int*, x : ComplexFloat*, y : ComplexFloat*, z__ : ComplexFloat*, incx : Int*, c__ : Float*, s : ComplexFloat*, incc : Int*)
    fun clarcm(m : Int*, n : Int*, a : Float*, lda : Int*, b : ComplexFloat*, ldb : Int*, c : ComplexFloat*, ldc : Int*, rwork : Float*)
    fun clarf(side : Char*, m : Int*, n : Int*, v : ComplexFloat*, incv : Int*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*)
    fun clarfb(side : Char*, trans : Char*, direct : Char*, storev : Char*, m : Int*, n : Int*, k : Int*, v : ComplexFloat*, ldv : Int*, t : ComplexFloat*, ldt : Int*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, ldwork : Int*)
    fun clarfg(n : Int*, alpha : ComplexFloat*, x : ComplexFloat*, incx : Int*, tau : ComplexFloat*)
    fun clarfp(n : Int*, alpha : ComplexFloat*, x : ComplexFloat*, incx : Int*, tau : ComplexFloat*)
    fun clarft(direct : Char*, storev : Char*, n : Int*, k : Int*, v : ComplexFloat*, ldv : Int*, tau : ComplexFloat*, t : ComplexFloat*, ldt : Int*)
    fun clarfx(side : Char*, m : Int*, n : Int*, v : ComplexFloat*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*)
    fun clargv(n : Int*, x : ComplexFloat*, incx : Int*, y : ComplexFloat*, incy : Int*, c__ : Float*, incc : Int*)
    fun clarnv(idist : Int*, iseed : Int*, n : Int*, x : ComplexFloat*)
    fun clarrv(n : Int*, vl : Float*, vu : Float*, d__ : Float*, l : Float*, pivmin : Float*, isplit : Int*, m : Int*, dol : Int*, dou : Int*, minrgp : Float*, rtol1 : Float*, rtol2 : Float*, w : Float*, werr : Float*, wgap : Float*, iblock : Int*, indexw : Int*, gers : Float*, z__ : ComplexFloat*, ldz : Int*, isuppz : Int*, work : Float*, iwork : Int*, info : Int*)
    fun clarscl2(m : Int*, n : Int*, d__ : Float*, x : ComplexFloat*, ldx : Int*)
    fun clartg(f : ComplexFloat*, g : ComplexFloat*, cs : Float*, sn : ComplexFloat*, r__ : ComplexFloat*)
    fun clartv(n : Int*, x : ComplexFloat*, incx : Int*, y : ComplexFloat*, incy : Int*, c__ : Float*, s : ComplexFloat*, incc : Int*)
    fun clarz(side : Char*, m : Int*, n : Int*, l : Int*, v : ComplexFloat*, incv : Int*, tau : ComplexFloat*, c__ : ComplexFloat*, ldc : Int*, work : ComplexFloat*)
    fun clarzb(side : Char*, trans : Char*, direct : Char*, storev : Char*, m : Int*, n : Int*, k : Int*, l : Int*, v : ComplexFloat*, ldv : Int*, t : ComplexFloat*, ldt : Int*, c__ : ComplexFloat*, ldc : Int*, work : ComplexFloat*, ldwork : Int*)
    fun clarzt(direct : Char*, storev : Char*, n : Int*, k : Int*, v : ComplexFloat*, ldv : Int*, tau : ComplexFloat*, t : ComplexFloat*, ldt : Int*)
    fun clascl(type : Char*, kl : Int*, ku : Int*, cfrom : Float*, cto : Float*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, info : Int*)
    fun clascl2(m : Int*, n : Int*, d__ : Float*, x : ComplexFloat*, ldx : Int*)
    fun claset(uplo : Char*, m : Int*, n : Int*, alpha : ComplexFloat*, beta : ComplexFloat*, a : ComplexFloat*, lda : Int*)
    fun clasr(side : Char*, pivot : Char*, direct : Char*, m : Int*, n : Int*, c__ : Float*, s : Float*, a : ComplexFloat*, lda : Int*)
    fun classq(n : Int*, x : ComplexFloat*, incx : Int*, scale : Float*, sumsq : Float*)
    fun claswp(n : Int*, a : ComplexFloat*, lda : Int*, k1 : Int*, k2 : Int*, ipiv : Int*, incx : Int*)
    fun clasyf(uplo : Char*, n : Int*, nb : Int*, kb : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, w : ComplexFloat*, ldw : Int*, info : Int*)
    fun clatbs(uplo : Char*, trans : Char*, diag : Char*, normin : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, x : ComplexFloat*, scale : Float*, cnorm : Float*, info : Int*)
    fun clatdf(ijob : Int*, n : Int*, z__ : ComplexFloat*, ldz : Int*, rhs : ComplexFloat*, rdsum : Float*, rdscal : Float*, ipiv : Int*, jpiv : Int*)
    fun clatms(m : Int*, n : Int*, dist : Char*, iseed : Int*, sym : Char*, d : Float*, mode : Int*, cond : Float*, dmax : Float*, kl : Int*, ku : Int*, pack : Char*, a : ComplexFloat*, lda : Int*, work : ComplexFloat*, info : Int*)
    fun clatps(uplo : Char*, trans : Char*, diag : Char*, normin : Char*, n : Int*, ap : ComplexFloat*, x : ComplexFloat*, scale : Float*, cnorm : Float*, info : Int*)
    fun clatrd(uplo : Char*, n : Int*, nb : Int*, a : ComplexFloat*, lda : Int*, e : Float*, tau : ComplexFloat*, w : ComplexFloat*, ldw : Int*)
    fun clatrs(uplo : Char*, trans : Char*, diag : Char*, normin : Char*, n : Int*, a : ComplexFloat*, lda : Int*, x : ComplexFloat*, scale : Float*, cnorm : Float*, info : Int*)
    fun clatrz(m : Int*, n : Int*, l : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*)
    fun clatzm(side : Char*, m : Int*, n : Int*, v : ComplexFloat*, incv : Int*, tau : ComplexFloat*, c1 : ComplexFloat*, c2 : ComplexFloat*, ldc : Int*, work : ComplexFloat*)
    fun clauu2(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, info : Int*)
    fun clauum(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, info : Int*)
    fun cpbcon(uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, anorm : Float*, rcond : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cpbequ(uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, s : Float*, scond : Float*, amax : Float*, info : Int*)
    fun cpbrfs(uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : ComplexFloat*, ldab : Int*, afb : ComplexFloat*, ldafb : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cpbstf(uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, info : Int*)
    fun cpbsv(uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : ComplexFloat*, ldab : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cpbsvx(fact : Char*, uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : ComplexFloat*, ldab : Int*, afb : ComplexFloat*, ldafb : Int*, equed : Char*, s : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cpbtf2(uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, info : Int*)
    fun cpbtrf(uplo : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, info : Int*)
    fun cpbtrs(uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : ComplexFloat*, ldab : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cpftrf(transr : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, info : Int*)
    fun cpftri(transr : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, info : Int*)
    fun cpftrs(transr : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cpocon(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, anorm : Float*, rcond : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cpoequ(n : Int*, a : ComplexFloat*, lda : Int*, s : Float*, scond : Float*, amax : Float*, info : Int*)
    fun cpoequb(n : Int*, a : ComplexFloat*, lda : Int*, s : Float*, scond : Float*, amax : Float*, info : Int*)
    fun cporfs(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cporfsx(uplo : Char*, equed : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, s : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cposv(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cposvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, equed : Char*, s : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cposvxx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, equed : Char*, s : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, rpvgrw : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cpotf2(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, info : Int*)
    fun cpotrf(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, info : Int*)
    fun cpotrf2(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, info : Int*)
    fun cpotri(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, info : Int*)
    fun cpotrs(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cppcon(uplo : Char*, n : Int*, ap : ComplexFloat*, anorm : Float*, rcond : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cppequ(uplo : Char*, n : Int*, ap : ComplexFloat*, s : Float*, scond : Float*, amax : Float*, info : Int*)
    fun cpprfs(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, afp : ComplexFloat*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cppsv(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cppsvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, afp : ComplexFloat*, equed : Char*, s : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cpptrf(uplo : Char*, n : Int*, ap : ComplexFloat*, info : Int*)
    fun cpptri(uplo : Char*, n : Int*, ap : ComplexFloat*, info : Int*)
    fun cpptrs(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cpstf2(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, piv : Int*, rank : Int*, tol : Float*, work : Float*, info : Int*)
    fun cpstrf(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, piv : Int*, rank : Int*, tol : Float*, work : Float*, info : Int*)
    fun cptcon(n : Int*, d : Float*, e : ComplexFloat*, anorm : Float*, rcond : Float*, rwork : Float*, info : Int*)
    fun cpteqr(compz : Char*, n : Int*, d : Float*, e : Float*, z : ComplexFloat*, ldz : Int*, work : Float*, info : Int*)
    fun cptrfs(uplo : Char*, n : Int*, nrhs : Int*, d : Float*, e : ComplexFloat*, df : Float*, ef : ComplexFloat*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cptsv(n : Int*, nrhs : Int*, d : Float*, e : ComplexFloat*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cptsvx(fact : Char*, n : Int*, nrhs : Int*, d : Float*, e : ComplexFloat*, df : Float*, ef : ComplexFloat*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cpttrf(n : Int*, d : Float*, e : ComplexFloat*, info : Int*)
    fun cpttrs(uplo : Char*, n : Int*, nrhs : Int*, d : Float*, e : ComplexFloat*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cptts2(iuplo : Int*, n : Int*, nrhs : Int*, d__ : Float*, e : ComplexFloat*, b : ComplexFloat*, ldb : Int*)
    fun crot(n : Int*, cx : ComplexFloat*, incx : Int*, cy : ComplexFloat*, incy : Int*, c__ : Float*, s : ComplexFloat*)
    fun cspcon(uplo : Char*, n : Int*, ap : ComplexFloat*, ipiv : Int*, anorm : Float*, rcond : Float*, work : ComplexFloat*, info : Int*)
    fun cspmv(uplo : Char*, n : Int*, alpha : ComplexFloat*, ap : ComplexFloat*, x : ComplexFloat*, incx : Int*, beta : ComplexFloat*, y : ComplexFloat*, incy : Int*)
    fun cspr(uplo : Char*, n : Int*, alpha : ComplexFloat*, x : ComplexFloat*, incx : Int*, ap : ComplexFloat*)
    fun csprfs(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, afp : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun cspsv(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun cspsvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, afp : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun csptrf(uplo : Char*, n : Int*, ap : ComplexFloat*, ipiv : Int*, info : Int*)
    fun csptri(uplo : Char*, n : Int*, ap : ComplexFloat*, ipiv : Int*, work : ComplexFloat*, info : Int*)
    fun csptrs(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun csrscl(n : Int*, sa : Float*, sx : ComplexFloat*, incx : Int*)
    fun cstedc(compz : Char*, n : Int*, d : Float*, e : Float*, z : ComplexFloat*, ldz : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun cstegr(jobz : Char*, range : Char*, n : Int*, d : Float*, e : Float*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, isuppz : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun cstein(n : Int*, d : Float*, e : Float*, m : Int*, w : Float*, iblock : Int*, isplit : Int*, z : ComplexFloat*, ldz : Int*, work : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun cstemr(jobz : Char*, range : Char*, n : Int*, d : Float*, e : Float*, vl : Float*, vu : Float*, il : Int*, iu : Int*, m : Int*, w : Float*, z : ComplexFloat*, ldz : Int*, nzc : Int*, isuppz : Int*, tryrac : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun csteqr(compz : Char*, n : Int*, d : Float*, e : Float*, z : ComplexFloat*, ldz : Int*, work : Float*, info : Int*)
    fun csycon(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, anorm : Float*, rcond : Float*, work : ComplexFloat*, info : Int*)
    fun csycon_3(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, e : ComplexFloat*, ipiv : Int*, anorm : Float*, rcond : Float*, work : ComplexFloat*, info : Int*)
    fun csyconv(uplo : Char*, way : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, e : ComplexFloat*, info : Int*)
    fun csyequb(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, s : Float*, scond : Float*, amax : Float*, work : ComplexFloat*, info : Int*)
    fun csymv(uplo : Char*, n : Int*, alpha : ComplexFloat*, a : ComplexFloat*, lda : Int*, x : ComplexFloat*, incx : Int*, beta : ComplexFloat*, y : ComplexFloat*, incy : Int*)
    fun csyr(uplo : Char*, n : Int*, alpha : ComplexFloat*, x : ComplexFloat*, incx : Int*, a : ComplexFloat*, lda : Int*)
    fun csyrfs(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun csyrfsx(uplo : Char*, equed : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, s : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun csysv(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun csysv_aa(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun csysv_aa_2stage(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, tb : ComplexFloat*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun csysv_rk(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, e : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun csysv_rook(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun csysvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : ComplexFloat*, lwork : Int*, rwork : Float*, info : Int*)
    fun csysvxx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, af : ComplexFloat*, ldaf : Int*, ipiv : Int*, equed : Char*, s : Float*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, rcond : Float*, rpvgrw : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun csyswapr(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, i1 : Int*, i2 : Int*)
    fun csytf2(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, info : Int*)
    fun csytrf(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun csytrf_aa(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun csytrf_aa_2stage(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, tb : ComplexFloat*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun csytrf_rk(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, e : ComplexFloat*, ipiv : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun csytrf_rook(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun csytri(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, work : ComplexFloat*, info : Int*)
    fun csytri2(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun csytri2x(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, work : ComplexFloat*, nb : Int*, info : Int*)
    fun csytri_3(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, e : ComplexFloat*, ipiv : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun csytrs(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun csytrs2(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, info : Int*)
    fun csytrs_3(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, e : ComplexFloat*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun csytrs_aa(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun csytrs_aa_2stage(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, tb : ComplexFloat*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun csytrs_rook(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, ipiv : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun ctbcon(norm : Char*, uplo : Char*, diag : Char*, n : Int*, kd : Int*, ab : ComplexFloat*, ldab : Int*, rcond : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun ctbrfs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : ComplexFloat*, ldab : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun ctbtrs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : ComplexFloat*, ldab : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun ctfsm(transr : Char*, side : Char*, uplo : Char*, trans : Char*, diag : Char*, m : Int*, n : Int*, alpha : ComplexFloat*, a : ComplexFloat*, b : ComplexFloat*, ldb : Int*)
    fun ctftri(transr : Char*, uplo : Char*, diag : Char*, n : Int*, a : ComplexFloat*, info : Int*)
    fun ctfttp(transr : Char*, uplo : Char*, n : Int*, arf : ComplexFloat*, ap : ComplexFloat*, info : Int*)
    fun ctfttr(transr : Char*, uplo : Char*, n : Int*, arf : ComplexFloat*, a : ComplexFloat*, lda : Int*, info : Int*)
    fun ctgevc(side : Char*, howmny : Char*, select : Int*, n : Int*, s : ComplexFloat*, lds : Int*, p : ComplexFloat*, ldp : Int*, vl : ComplexFloat*, ldvl : Int*, vr : ComplexFloat*, ldvr : Int*, mm : Int*, m : Int*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun ctgex2(wantq : Char*, wantz : Char*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, q : ComplexFloat*, ldq : Int*, z__ : ComplexFloat*, ldz : Int*, j1 : Int*, info : Int*)
    fun ctgexc(wantq : Int*, wantz : Int*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, q : ComplexFloat*, ldq : Int*, z : ComplexFloat*, ldz : Int*, ifst : Int*, ilst : Int*, info : Int*)
    fun ctgsen(ijob : Int*, wantq : Int*, wantz : Int*, select : Int*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, alpha : ComplexFloat*, beta : ComplexFloat*, q : ComplexFloat*, ldq : Int*, z : ComplexFloat*, ldz : Int*, m : Int*, pl : Float*, pr : Float*, dif : Float*, work : ComplexFloat*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun ctgsja(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, p : Int*, n : Int*, k : Int*, l : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, tola : Float*, tolb : Float*, alpha : Float*, beta : Float*, u : ComplexFloat*, ldu : Int*, v : ComplexFloat*, ldv : Int*, q : ComplexFloat*, ldq : Int*, work : ComplexFloat*, ncycle : Int*, info : Int*)
    fun ctgsna(job : Char*, howmny : Char*, select : Int*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, vl : ComplexFloat*, ldvl : Int*, vr : ComplexFloat*, ldvr : Int*, s : Float*, dif : Float*, mm : Int*, m : Int*, work : ComplexFloat*, lwork : Int*, iwork : Int*, info : Int*)
    fun ctgsy2(trans : Char*, ijob : Int*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, c__ : ComplexFloat*, ldc : Int*, d__ : ComplexFloat*, ldd : Int*, e : ComplexFloat*, lde : Int*, f : ComplexFloat*, ldf : Int*, scale : Float*, rdsum : Float*, rdscal : Float*, info : Int*)
    fun ctgsyl(trans : Char*, ijob : Int*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, c : ComplexFloat*, ldc : Int*, d : ComplexFloat*, ldd : Int*, e : ComplexFloat*, lde : Int*, f : ComplexFloat*, ldf : Int*, dif : Float*, scale : Float*, work : ComplexFloat*, lwork : Int*, iwork : Int*, info : Int*)
    fun ctpcon(norm : Char*, uplo : Char*, diag : Char*, n : Int*, ap : ComplexFloat*, rcond : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun ctplqt(m : Int*, n : Int*, l : Int*, mb : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, t : ComplexFloat*, ldt : Int*, work : ComplexFloat*, info : Int*)
    fun ctplqt2(m : Int*, n : Int*, l : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, t : ComplexFloat*, ldt : Int*, info : Int*)
    fun ctpmlqt(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, mb : Int*, v : ComplexFloat*, ldv : Int*, t : ComplexFloat*, ldt : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, info : Int*)
    fun ctpmqrt(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, nb : Int*, v : ComplexFloat*, ldv : Int*, t : ComplexFloat*, ldt : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, info : Int*)
    fun ctpqrt(m : Int*, n : Int*, l : Int*, nb : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, t : ComplexFloat*, ldt : Int*, work : ComplexFloat*, info : Int*)
    fun ctpqrt2(m : Int*, n : Int*, l : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, t : ComplexFloat*, ldt : Int*, info : Int*)
    fun ctprfb(side : Char*, trans : Char*, direct : Char*, storev : Char*, m : Int*, n : Int*, k : Int*, l : Int*, v : ComplexFloat*, ldv : Int*, t : ComplexFloat*, ldt : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, work : ComplexFloat*, ldwork : Int*)
    fun ctprfs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun ctptri(uplo : Char*, diag : Char*, n : Int*, ap : ComplexFloat*, info : Int*)
    fun ctptrs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, ap : ComplexFloat*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun ctpttf(transr : Char*, uplo : Char*, n : Int*, ap : ComplexFloat*, arf : ComplexFloat*, info : Int*)
    fun ctpttr(uplo : Char*, n : Int*, ap : ComplexFloat*, a : ComplexFloat*, lda : Int*, info : Int*)
    fun ctrcon(norm : Char*, uplo : Char*, diag : Char*, n : Int*, a : ComplexFloat*, lda : Int*, rcond : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun ctrevc(side : Char*, howmny : Char*, select : Int*, n : Int*, t : ComplexFloat*, ldt : Int*, vl : ComplexFloat*, ldvl : Int*, vr : ComplexFloat*, ldvr : Int*, mm : Int*, m : Int*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun ctrevc3(side : Char*, howmny : Char*, select : Int*, n : Int*, t : ComplexFloat*, ldt : Int*, vl : ComplexFloat*, ldvl : Int*, vr : ComplexFloat*, ldvr : Int*, mm : Int*, m : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, info : Int*)
    fun ctrexc(compq : Char*, n : Int*, t : ComplexFloat*, ldt : Int*, q : ComplexFloat*, ldq : Int*, ifst : Int*, ilst : Int*, info : Int*)
    fun ctrrfs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, x : ComplexFloat*, ldx : Int*, ferr : Float*, berr : Float*, work : ComplexFloat*, rwork : Float*, info : Int*)
    fun ctrsen(job : Char*, compq : Char*, select : Int*, n : Int*, t : ComplexFloat*, ldt : Int*, q : ComplexFloat*, ldq : Int*, w : ComplexFloat*, m : Int*, s : Float*, sep : Float*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun ctrsna(job : Char*, howmny : Char*, select : Int*, n : Int*, t : ComplexFloat*, ldt : Int*, vl : ComplexFloat*, ldvl : Int*, vr : ComplexFloat*, ldvr : Int*, s : Float*, sep : Float*, mm : Int*, m : Int*, work : ComplexFloat*, ldwork : Int*, rwork : Float*, info : Int*)
    fun ctrsyl(trana : Char*, tranb : Char*, isgn : Int*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, c : ComplexFloat*, ldc : Int*, scale : Float*, info : Int*)
    fun ctrsyl3(trana : Char*, tranb : Char*, isgn : Int*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, c : ComplexFloat*, ldc : Int*, scale : Float*, swork : Float*, ldswork : Int*, info : Int*)
    fun ctrti2(uplo : Char*, diag : Char*, n : Int*, a : ComplexFloat*, lda : Int*, info : Int*)
    fun ctrtri(uplo : Char*, diag : Char*, n : Int*, a : ComplexFloat*, lda : Int*, info : Int*)
    fun ctrtrs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, a : ComplexFloat*, lda : Int*, b : ComplexFloat*, ldb : Int*, info : Int*)
    fun ctrttf(transr : Char*, uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, arf : ComplexFloat*, info : Int*)
    fun ctrttp(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, ap : ComplexFloat*, info : Int*)
    fun ctzrqf(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, info : Int*)
    fun ctzrzf(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cunbdb(trans : Char*, signs : Char*, m : Int*, p : Int*, q : Int*, x11 : ComplexFloat*, ldx11 : Int*, x12 : ComplexFloat*, ldx12 : Int*, x21 : ComplexFloat*, ldx21 : Int*, x22 : ComplexFloat*, ldx22 : Int*, theta : Float*, phi : Float*, taup1 : ComplexFloat*, taup2 : ComplexFloat*, tauq1 : ComplexFloat*, tauq2 : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cuncsd(jobu1 : Char*, jobu2 : Char*, jobv1t : Char*, jobv2t : Char*, trans : Char*, signs : Char*, m : Int*, p : Int*, q : Int*, x11 : ComplexFloat*, ldx11 : Int*, x12 : ComplexFloat*, ldx12 : Int*, x21 : ComplexFloat*, ldx21 : Int*, x22 : ComplexFloat*, ldx22 : Int*, theta : Float*, u1 : ComplexFloat*, ldu1 : Int*, u2 : ComplexFloat*, ldu2 : Int*, v1_t : ComplexFloat*, ldv1t : Int*, v2_t : ComplexFloat*, ldv2t : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, info : Int*)
    fun cuncsd2by1(jobu1 : Char*, jobu2 : Char*, jobv1t : Char*, m : Int*, p : Int*, q : Int*, x11 : ComplexFloat*, ldx11 : Int*, x21 : ComplexFloat*, ldx21 : Int*, theta : Float*, u1 : ComplexFloat*, ldu1 : Int*, u2 : ComplexFloat*, ldu2 : Int*, v1_t : ComplexFloat*, ldv1t : Int*, work : ComplexFloat*, lwork : Int*, rwork : Float*, lrwork : Int*, iwork : Int*, info : Int*)
    fun cung2l(m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, info : Int*)
    fun cung2r(m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, info : Int*)
    fun cungbr(vect : Char*, m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cunghr(n : Int*, ilo : Int*, ihi : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cungl2(m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, info : Int*)
    fun cunglq(m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cungql(m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cungqr(m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cungr2(m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, info : Int*)
    fun cungrq(m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cungtr(uplo : Char*, n : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cungtsqr_row(m : Int*, n : Int*, mb : Int*, nb : Int*, a : ComplexFloat*, lda : Int*, t : ComplexFloat*, ldt : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cunm2l(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, c__ : ComplexFloat*, ldc : Int*, work : ComplexFloat*, info : Int*)
    fun cunm2r(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, c__ : ComplexFloat*, ldc : Int*, work : ComplexFloat*, info : Int*)
    fun cunmbr(vect : Char*, side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cunmhr(side : Char*, trans : Char*, m : Int*, n : Int*, ilo : Int*, ihi : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cunml2(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, c__ : ComplexFloat*, ldc : Int*, work : ComplexFloat*, info : Int*)
    fun cunmlq(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cunmql(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cunmqr(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cunmr2(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, c__ : ComplexFloat*, ldc : Int*, work : ComplexFloat*, info : Int*)
    fun cunmr3(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, c__ : ComplexFloat*, ldc : Int*, work : ComplexFloat*, info : Int*)
    fun cunmrq(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cunmrz(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cunmtr(side : Char*, uplo : Char*, trans : Char*, m : Int*, n : Int*, a : ComplexFloat*, lda : Int*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, lwork : Int*, info : Int*)
    fun cupgtr(uplo : Char*, n : Int*, ap : ComplexFloat*, tau : ComplexFloat*, q : ComplexFloat*, ldq : Int*, work : ComplexFloat*, info : Int*)
    fun cupmtr(side : Char*, uplo : Char*, trans : Char*, m : Int*, n : Int*, ap : ComplexFloat*, tau : ComplexFloat*, c : ComplexFloat*, ldc : Int*, work : ComplexFloat*, info : Int*)
    fun dbbcsd(jobu1 : Char*, jobu2 : Char*, jobv1t : Char*, jobv2t : Char*, trans : Char*, m : Int*, p : Int*, q : Int*, theta : Double*, phi : Double*, u1 : Double*, ldu1 : Int*, u2 : Double*, ldu2 : Int*, v1_t : Double*, ldv1t : Int*, v2_t : Double*, ldv2t : Int*, b11_d : Double*, b11_e : Double*, b12_d : Double*, b12_e : Double*, b21d : Double*, b21e : Double*, b22d : Double*, b22e : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dbdsdc(uplo : Char*, compq : Char*, n : Int*, d : Double*, e : Double*, u : Double*, ldu : Int*, vt : Double*, ldvt : Int*, q : Double*, iq : Int*, work : Double*, iwork : Int*, info : Int*)
    fun dbdsqr(uplo : Char*, n : Int*, ncvt : Int*, nru : Int*, ncc : Int*, d : Double*, e : Double*, vt : Double*, ldvt : Int*, u : Double*, ldu : Int*, c : Double*, ldc : Int*, work : Double*, info : Int*)
    fun dbdsvdx(uplo : Char*, jobz : Char*, range : Char*, n : Int*, d : Double*, e : Double*, vl : Double*, vu : Double*, il : Int*, iu : Int*, ns : Int*, s : Double*, z : Double*, ldz : Int*, work : Double*, iwork : Int*, info : Int*)
    fun ddisna(job : Char*, m : Int*, n : Int*, d : Double*, sep : Double*, info : Int*)
    fun dgbbrd(vect : Char*, m : Int*, n : Int*, ncc : Int*, kl : Int*, ku : Int*, ab : Double*, ldab : Int*, d : Double*, e : Double*, q : Double*, ldq : Int*, pt : Double*, ldpt : Int*, c : Double*, ldc : Int*, work : Double*, info : Int*)
    fun dgbcon(norm : Char*, n : Int*, kl : Int*, ku : Int*, ab : Double*, ldab : Int*, ipiv : Int*, anorm : Double*, rcond : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dgbequ(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : Double*, ldab : Int*, r : Double*, c : Double*, rowcnd : Double*, colcnd : Double*, amax : Double*, info : Int*)
    fun dgbequb(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : Double*, ldab : Int*, r : Double*, c : Double*, rowcnd : Double*, colcnd : Double*, amax : Double*, info : Int*)
    fun dgbrfs(trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Double*, ldab : Int*, afb : Double*, ldafb : Int*, ipiv : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dgbrfsx(trans : Char*, equed : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Double*, ldab : Int*, afb : Double*, ldafb : Int*, ipiv : Int*, r : Double*, c : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dgbsv(n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Double*, ldab : Int*, ipiv : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dgbsvx(fact : Char*, trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Double*, ldab : Int*, afb : Double*, ldafb : Int*, ipiv : Int*, equed : Char*, r : Double*, c : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dgbsvxx(fact : Char*, trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Double*, ldab : Int*, afb : Double*, ldafb : Int*, ipiv : Int*, equed : Char*, r : Double*, c : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, rpvgrw : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dgbtf2(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : Double*, ldab : Int*, ipiv : Int*, info : Int*)
    fun dgbtrf(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : Double*, ldab : Int*, ipiv : Int*, info : Int*)
    fun dgbtrs(trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Double*, ldab : Int*, ipiv : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dgebak(job : Char*, side : Char*, n : Int*, ilo : Int*, ihi : Int*, scale : Double*, m : Int*, v : Double*, ldv : Int*, info : Int*)
    fun dgebal(job : Char*, n : Int*, a : Double*, lda : Int*, ilo : Int*, ihi : Int*, scale : Double*, info : Int*)
    fun dgebd2(m : Int*, n : Int*, a : Double*, lda : Int*, d__ : Double*, e : Double*, tauq : Double*, taup : Double*, work : Double*, info : Int*)
    fun dgebrd(m : Int*, n : Int*, a : Double*, lda : Int*, d : Double*, e : Double*, tauq : Double*, taup : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dgecon(norm : Char*, n : Int*, a : Double*, lda : Int*, anorm : Double*, rcond : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dgeequ(m : Int*, n : Int*, a : Double*, lda : Int*, r : Double*, c : Double*, rowcnd : Double*, colcnd : Double*, amax : Double*, info : Int*)
    fun dgeequb(m : Int*, n : Int*, a : Double*, lda : Int*, r : Double*, c : Double*, rowcnd : Double*, colcnd : Double*, amax : Double*, info : Int*)
    fun dgees(jobvs : Char*, sort : Char*, select : DSelect2, n : Int*, a : Double*, lda : Int*, sdim : Int*, wr : Double*, wi : Double*, vs : Double*, ldvs : Int*, work : Double*, lwork : Int*, bwork : Int*, info : Int*)
    fun dgeesx(jobvs : Char*, sort : Char*, select : DSelect2, sense : Char*, n : Int*, a : Double*, lda : Int*, sdim : Int*, wr : Double*, wi : Double*, vs : Double*, ldvs : Int*, rconde : Double*, rcondv : Double*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, bwork : Int*, info : Int*)
    fun dgeev(jobvl : Char*, jobvr : Char*, n : Int*, a : Double*, lda : Int*, wr : Double*, wi : Double*, vl : Double*, ldvl : Int*, vr : Double*, ldvr : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgeevx(balanc : Char*, jobvl : Char*, jobvr : Char*, sense : Char*, n : Int*, a : Double*, lda : Int*, wr : Double*, wi : Double*, vl : Double*, ldvl : Int*, vr : Double*, ldvr : Int*, ilo : Int*, ihi : Int*, scale : Double*, abnrm : Double*, rconde : Double*, rcondv : Double*, work : Double*, lwork : Int*, iwork : Int*, info : Int*)
    fun dgegs(jobvsl : Char*, jobvsr : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, alphar : Double*, alphai : Double*, beta : Double*, vsl : Double*, ldvsl : Int*, vsr : Double*, ldvsr : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgegv(jobvl : Char*, jobvr : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, alphar : Double*, alphai : Double*, beta : Double*, vl : Double*, ldvl : Int*, vr : Double*, ldvr : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgehd2(n : Int*, ilo : Int*, ihi : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, info : Int*)
    fun dgehrd(n : Int*, ilo : Int*, ihi : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dgejsv(joba : Char*, jobu : Char*, jobv : Char*, jobr : Char*, jobt : Char*, jobp : Char*, m : Int*, n : Int*, a : Double*, lda : Int*, sva : Double*, u : Double*, ldu : Int*, v : Double*, ldv : Int*, work : Double*, lwork : Int*, iwork : Int*, info : Int*)
    fun dgelq(m : Int*, n : Int*, a : Double*, lda : Int*, t : Double*, tsize : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgelq2(m : Int*, n : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, info : Int*)
    fun dgelqf(m : Int*, n : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dgels(trans : Char*, m : Int*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgelsd(m : Int*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, s : Double*, rcond : Double*, rank : Int*, work : Double*, lwork : Int*, iwork : Int*, info : Int*)
    fun dgelss(m : Int*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, s : Double*, rcond : Double*, rank : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgelsx(m : Int*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, jpvt : Int*, rcond : Double*, rank : Int*, work : Double*, info : Int*)
    fun dgelsy(m : Int*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, jpvt : Int*, rcond : Double*, rank : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgemlq(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, t : Double*, tsize : Int*, c : Double*, ldc : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgemqr(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, t : Double*, tsize : Int*, c : Double*, ldc : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgemqrt(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, nb : Int*, v : Double*, ldv : Int*, t : Double*, ldt : Int*, c : Double*, ldc : Int*, work : Double*, info : Int*)
    fun dgeql2(m : Int*, n : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, info : Int*)
    fun dgeqlf(m : Int*, n : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dgeqp3(m : Int*, n : Int*, a : Double*, lda : Int*, jpvt : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dgeqpf(m : Int*, n : Int*, a : Double*, lda : Int*, jpvt : Int*, tau : Double*, work : Double*, info : Int*)
    fun dgeqr(m : Int*, n : Int*, a : Double*, lda : Int*, t : Double*, tsize : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgeqr2(m : Int*, n : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, info : Int*)
    fun dgeqrf(m : Int*, n : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dgeqrfp(m : Int*, n : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dgeqrt(m : Int*, n : Int*, nb : Int*, a : Double*, lda : Int*, t : Double*, ldt : Int*, work : Double*, info : Int*)
    fun dgeqrt2(m : Int*, n : Int*, a : Double*, lda : Int*, t : Double*, ldt : Int*, info : Int*)
    fun dgeqrt3(m : Int*, n : Int*, a : Double*, lda : Int*, t : Double*, ldt : Int*, info : Int*)
    fun dgerfs(trans : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, ipiv : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dgerfsx(trans : Char*, equed : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, ipiv : Int*, r : Double*, c : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dgerq2(m : Int*, n : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, info : Int*)
    fun dgerqf(m : Int*, n : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dgesc2(n : Int*, a : Double*, lda : Int*, rhs : Double*, ipiv : Int*, jpiv : Int*, scale : Double*)
    fun dgesdd(jobz : Char*, m : Int*, n : Int*, a : Double*, lda : Int*, s : Double*, u : Double*, ldu : Int*, vt : Double*, ldvt : Int*, work : Double*, lwork : Int*, iwork : Int*, info : Int*)
    fun dgesv(n : Int*, nrhs : Int*, a : Double*, lda : Int*, ipiv : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dgesvd(jobu : Char*, jobvt : Char*, m : Int*, n : Int*, a : Double*, lda : Int*, s : Double*, u : Double*, ldu : Int*, vt : Double*, ldvt : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgesvdq(joba : Char*, jobp : Char*, jobr : Char*, jobu : Char*, jobv : Char*, m : Int*, n : Int*, a : Double*, lda : Int*, s : Double*, u : Double*, ldu : Int*, v : Double*, ldv : Int*, numrank : Int*, iwork : Int*, liwork : Int*, work : Double*, lwork : Int*, rwork : Double*, lrwork : Int*, info : Int*)
    fun dgesvdx(jobu : Char*, jobvt : Char*, range : Char*, m : Int*, n : Int*, a : Double*, lda : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, ns : Int*, s : Double*, u : Double*, ldu : Int*, vt : Double*, ldvt : Int*, work : Double*, lwork : Int*, iwork : Int*, info : Int*)
    fun dgesvj(joba : Char*, jobu : Char*, jobv : Char*, m : Int*, n : Int*, a : Double*, lda : Int*, sva : Double*, mv : Int*, v : Double*, ldv : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgesvx(fact : Char*, trans : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, ipiv : Int*, equed : Char*, r : Double*, c : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dgesvxx(fact : Char*, trans : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, ipiv : Int*, equed : Char*, r : Double*, c : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, rpvgrw : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dgetc2(n : Int*, a : Double*, lda : Int*, ipiv : Int*, jpiv : Int*, info : Int*)
    fun dgetf2(m : Int*, n : Int*, a : Double*, lda : Int*, ipiv : Int*, info : Int*)
    fun dgetrf(m : Int*, n : Int*, a : Double*, lda : Int*, ipiv : Int*, info : Int*)
    fun dgetrf2(m : Int*, n : Int*, a : Double*, lda : Int*, ipiv : Int*, info : Int*)
    fun dgetri(n : Int*, a : Double*, lda : Int*, ipiv : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgetrs(trans : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, ipiv : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dgetsls(trans : Char*, m : Int*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgetsqrhrt(m : Int*, n : Int*, mb1 : Int*, nb1 : Int*, nb2 : Int*, a : Double*, lda : Int*, t : Double*, ldt : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dggbak(job : Char*, side : Char*, n : Int*, ilo : Int*, ihi : Int*, lscale : Double*, rscale : Double*, m : Int*, v : Double*, ldv : Int*, info : Int*)
    fun dggbal(job : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, ilo : Int*, ihi : Int*, lscale : Double*, rscale : Double*, work : Double*, info : Int*)
    fun dgges(jobvsl : Char*, jobvsr : Char*, sort : Char*, selctg : DSelect3, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, sdim : Int*, alphar : Double*, alphai : Double*, beta : Double*, vsl : Double*, ldvsl : Int*, vsr : Double*, ldvsr : Int*, work : Double*, lwork : Int*, bwork : Int*, info : Int*)
    fun dgges3(jobvsl : Char*, jobvsr : Char*, sort : Char*, selctg : DSelect3, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, sdim : Int*, alphar : Double*, alphai : Double*, beta : Double*, vsl : Double*, ldvsl : Int*, vsr : Double*, ldvsr : Int*, work : Double*, lwork : Int*, bwork : Int*, info : Int*)
    fun dggesx(jobvsl : Char*, jobvsr : Char*, sort : Char*, selctg : DSelect3, sense : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, sdim : Int*, alphar : Double*, alphai : Double*, beta : Double*, vsl : Double*, ldvsl : Int*, vsr : Double*, ldvsr : Int*, rconde : Double*, rcondv : Double*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, bwork : Int*, info : Int*)
    fun dggev(jobvl : Char*, jobvr : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, alphar : Double*, alphai : Double*, beta : Double*, vl : Double*, ldvl : Int*, vr : Double*, ldvr : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dggev3(jobvl : Char*, jobvr : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, alphar : Double*, alphai : Double*, beta : Double*, vl : Double*, ldvl : Int*, vr : Double*, ldvr : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dggevx(balanc : Char*, jobvl : Char*, jobvr : Char*, sense : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, alphar : Double*, alphai : Double*, beta : Double*, vl : Double*, ldvl : Int*, vr : Double*, ldvr : Int*, ilo : Int*, ihi : Int*, lscale : Double*, rscale : Double*, abnrm : Double*, bbnrm : Double*, rconde : Double*, rcondv : Double*, work : Double*, lwork : Int*, iwork : Int*, bwork : Int*, info : Int*)
    fun dggglm(n : Int*, m : Int*, p : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, d : Double*, x : Double*, y : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dgghd3(compq : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, q : Double*, ldq : Int*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgghrd(compq : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, q : Double*, ldq : Int*, z : Double*, ldz : Int*, info : Int*)
    fun dgglse(m : Int*, n : Int*, p : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, c : Double*, d : Double*, x : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dggqrf(n : Int*, m : Int*, p : Int*, a : Double*, lda : Int*, taua : Double*, b : Double*, ldb : Int*, taub : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dggrqf(m : Int*, p : Int*, n : Int*, a : Double*, lda : Int*, taua : Double*, b : Double*, ldb : Int*, taub : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dggsvd(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, n : Int*, p : Int*, k : Int*, l : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, alpha : Double*, beta : Double*, u : Double*, ldu : Int*, v : Double*, ldv : Int*, q : Double*, ldq : Int*, work : Double*, iwork : Int*, info : Int*) : Int
    fun dggsvd3(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, n : Int*, p : Int*, k : Int*, l : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, alpha : Double*, beta : Double*, u : Double*, ldu : Int*, v : Double*, ldv : Int*, q : Double*, ldq : Int*, work : Double*, lwork : Int*, iwork : Int*, info : Int*)
    fun dggsvp(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, p : Int*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, tola : Double*, tolb : Double*, k : Int*, l : Int*, u : Double*, ldu : Int*, v : Double*, ldv : Int*, q : Double*, ldq : Int*, iwork : Int*, tau : Double*, work : Double*, info : Int*) : Int
    fun dggsvp3(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, p : Int*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, tola : Double*, tolb : Double*, k : Int*, l : Int*, u : Double*, ldu : Int*, v : Double*, ldv : Int*, q : Double*, ldq : Int*, iwork : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dgsvj0(jobv : Char*, m : Int*, n : Int*, a : Double*, lda : Int*, d__ : Double*, sva : Double*, mv : Int*, v : Double*, ldv : Int*, eps : Double*, sfmin : Double*, tol : Double*, nsweep : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgsvj1(jobv : Char*, m : Int*, n : Int*, n1 : Int*, a : Double*, lda : Int*, d__ : Double*, sva : Double*, mv : Int*, v : Double*, ldv : Int*, eps : Double*, sfmin : Double*, tol : Double*, nsweep : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dgtcon(norm : Char*, n : Int*, dl : Double*, d : Double*, du : Double*, du2 : Double*, ipiv : Int*, anorm : Double*, rcond : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dgtrfs(trans : Char*, n : Int*, nrhs : Int*, dl : Double*, d : Double*, du : Double*, dlf : Double*, df : Double*, duf : Double*, du2 : Double*, ipiv : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dgtsv(n : Int*, nrhs : Int*, dl : Double*, d : Double*, du : Double*, b : Double*, ldb : Int*, info : Int*)
    fun dgtsvx(fact : Char*, trans : Char*, n : Int*, nrhs : Int*, dl : Double*, d : Double*, du : Double*, dlf : Double*, df : Double*, duf : Double*, du2 : Double*, ipiv : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dgttrf(n : Int*, dl : Double*, d : Double*, du : Double*, du2 : Double*, ipiv : Int*, info : Int*)
    fun dgttrs(trans : Char*, n : Int*, nrhs : Int*, dl : Double*, d : Double*, du : Double*, du2 : Double*, ipiv : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dgtts2(itrans : Int*, n : Int*, nrhs : Int*, dl : Double*, d__ : Double*, du : Double*, du2 : Double*, ipiv : Int*, b : Double*, ldb : Int*)
    fun dhgeqz(job : Char*, compq : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, h : Double*, ldh : Int*, t : Double*, ldt : Int*, alphar : Double*, alphai : Double*, beta : Double*, q : Double*, ldq : Int*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dhsein(side : Char*, eigsrc : Char*, initv : Char*, select : Int*, n : Int*, h : Double*, ldh : Int*, wr : Double*, wi : Double*, vl : Double*, ldvl : Int*, vr : Double*, ldvr : Int*, mm : Int*, m : Int*, work : Double*, ifaill : Int*, ifailr : Int*, info : Int*)
    fun dhseqr(job : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, h : Double*, ldh : Int*, wr : Double*, wi : Double*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, info : Int*)
    fun disnan(din : Double*) : Char
    fun dla_gbamv_(trans : Int*, m : Int*, n : Int*, kl : Int*, ku : Int*, alpha : Double*, ab : Double*, ldab : Int*, x : Double*, incx : Int*, beta : Double*, y : Double*, incy : Int*)
    fun dla_gbrcond_(trans : Char*, n : Int*, kl : Int*, ku : Int*, ab : Double*, ldab : Int*, afb : Double*, ldafb : Int*, ipiv : Int*, cmode : Int*, c__ : Double*, info : Int*, work : Double*, iwork : Int*, trans_len : Int) : Double
    fun dla_gbrfsx_extended_(prec_type__ : Int*, trans_type__ : Int*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Double*, ldab : Int*, afb : Double*, ldafb : Int*, ipiv : Int*, colequ : Char*, c__ : Double*, b : Double*, ldb : Int*, y : Double*, ldy : Int*, berr_out__ : Double*, n_norms__ : Int*, errs_n__ : Double*, errs_c__ : Double*, res : Double*, ayb : Double*, dy : Double*, y_tail__ : Double*, rcond : Double*, ithresh : Int*, rthresh : Double*, dz_ub__ : Double*, ignore_cwise__ : Char*, info : Int*)
    fun dla_gbrpvgrw_(n : Int*, kl : Int*, ku : Int*, ncols : Int*, ab : Double*, ldab : Int*, afb : Double*, ldafb : Int*) : Double
    fun dla_geamv_(trans : Int*, m : Int*, n : Int*, alpha : Double*, a : Double*, lda : Int*, x : Double*, incx : Int*, beta : Double*, y : Double*, incy : Int*)
    fun dla_gercond_(trans : Char*, n : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, ipiv : Int*, cmode : Int*, c__ : Double*, info : Int*, work : Double*, iwork : Int*, trans_len : Int) : Double
    fun dla_gerfsx_extended_(prec_type__ : Int*, trans_type__ : Int*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, ipiv : Int*, colequ : Char*, c__ : Double*, b : Double*, ldb : Int*, y : Double*, ldy : Int*, berr_out__ : Double*, n_norms__ : Int*, errs_n__ : Double*, errs_c__ : Double*, res : Double*, ayb : Double*, dy : Double*, y_tail__ : Double*, rcond : Double*, ithresh : Int*, rthresh : Double*, dz_ub__ : Double*, ignore_cwise__ : Char*, info : Int*)
    fun dla_lin_berr_(n : Int*, nz : Int*, nrhs : Int*, res : Double*, ayb : Double*, berr : Double*)
    fun dla_porcond_(uplo : Char*, n : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, cmode : Int*, c__ : Double*, info : Int*, work : Double*, iwork : Int*, uplo_len : Int) : Double
    fun dla_porfsx_extended_(prec_type__ : Int*, uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, colequ : Char*, c__ : Double*, b : Double*, ldb : Int*, y : Double*, ldy : Int*, berr_out__ : Double*, n_norms__ : Int*, errs_n__ : Double*, errs_c__ : Double*, res : Double*, ayb : Double*, dy : Double*, y_tail__ : Double*, rcond : Double*, ithresh : Int*, rthresh : Double*, dz_ub__ : Double*, ignore_cwise__ : Char*, info : Int*, uplo_len : Int)
    fun dla_porpvgrw_(uplo : Char*, ncols : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, work : Double*, uplo_len : Int) : Double
    fun dla_rpvgrw_(n : Int*, ncols : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*) : Double
    fun dla_syamv_(uplo : Int*, n : Int*, alpha : Double*, a : Double*, lda : Int*, x : Double*, incx : Int*, beta : Double*, y : Double*, incy : Int*)
    fun dla_syrcond_(uplo : Char*, n : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, ipiv : Int*, cmode : Int*, c__ : Double*, info : Int*, work : Double*, iwork : Int*, uplo_len : Int) : Double
    fun dla_syrfsx_extended_(prec_type__ : Int*, uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, ipiv : Int*, colequ : Char*, c__ : Double*, b : Double*, ldb : Int*, y : Double*, ldy : Int*, berr_out__ : Double*, n_norms__ : Int*, errs_n__ : Double*, errs_c__ : Double*, res : Double*, ayb : Double*, dy : Double*, y_tail__ : Double*, rcond : Double*, ithresh : Int*, rthresh : Double*, dz_ub__ : Double*, ignore_cwise__ : Char*, info : Int*, uplo_len : Int)
    fun dla_syrpvgrw_(uplo : Char*, n : Int*, info : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, ipiv : Int*, work : Double*, uplo_len : Int) : Double
    fun dla_wwaddw_(n : Int*, x : Double*, y : Double*, w : Double*)
    fun dlabad(small : Double*, large : Double*)
    fun dlabrd(m : Int*, n : Int*, nb : Int*, a : Double*, lda : Int*, d__ : Double*, e : Double*, tauq : Double*, taup : Double*, x : Double*, ldx : Int*, y : Double*, ldy : Int*)
    fun dlacn2(n : Int*, v : Double*, x : Double*, isgn : Int*, est : Double*, kase : Int*, isave : Int*)
    fun dlacon(n : Int*, v : Double*, x : Double*, isgn : Int*, est : Double*, kase : Int*)
    fun dlacpy(uplo : Char*, m : Int*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*)
    fun dladiv(a : Double*, b : Double*, c__ : Double*, d__ : Double*, p : Double*, q : Double*)
    fun dlae2(a : Double*, b : Double*, c__ : Double*, rt1 : Double*, rt2 : Double*)
    fun dlaebz(ijob : Int*, nitmax : Int*, n : Int*, mmax : Int*, minp : Int*, nbmin : Int*, abstol : Double*, reltol : Double*, pivmin : Double*, d__ : Double*, e : Double*, e2 : Double*, nval : Int*, ab : Double*, c__ : Double*, mout : Int*, nab : Int*, work : Double*, iwork : Int*, info : Int*)
    fun dlaed0(icompq : Int*, qsiz : Int*, n : Int*, d__ : Double*, e : Double*, q : Double*, ldq : Int*, qstore : Double*, ldqs : Int*, work : Double*, iwork : Int*, info : Int*)
    fun dlaed1(n : Int*, d__ : Double*, q : Double*, ldq : Int*, indxq : Int*, rho : Double*, cutpnt : Int*, work : Double*, iwork : Int*, info : Int*)
    fun dlaed2(k : Int*, n : Int*, n1 : Int*, d__ : Double*, q : Double*, ldq : Int*, indxq : Int*, rho : Double*, z__ : Double*, dlamda : Double*, w : Double*, q2 : Double*, indx : Int*, indxc : Int*, indxp : Int*, coltyp : Int*, info : Int*)
    fun dlaed3(k : Int*, n : Int*, n1 : Int*, d__ : Double*, q : Double*, ldq : Int*, rho : Double*, dlamda : Double*, q2 : Double*, indx : Int*, ctot : Int*, w : Double*, s : Double*, info : Int*)
    fun dlaed4(n : Int*, i__ : Int*, d__ : Double*, z__ : Double*, delta : Double*, rho : Double*, dlam : Double*, info : Int*)
    fun dlaed5(i__ : Int*, d__ : Double*, z__ : Double*, delta : Double*, rho : Double*, dlam : Double*)
    fun dlaed6(kniter : Int*, orgati : Char*, rho : Double*, d__ : Double*, z__ : Double*, finit : Double*, tau : Double*, info : Int*)
    fun dlaed7(icompq : Int*, n : Int*, qsiz : Int*, tlvls : Int*, curlvl : Int*, curpbm : Int*, d__ : Double*, q : Double*, ldq : Int*, indxq : Int*, rho : Double*, cutpnt : Int*, qstore : Double*, qptr : Int*, prmptr : Int*, perm : Int*, givptr : Int*, givcol : Int*, givnum : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dlaed8(icompq : Int*, k : Int*, n : Int*, qsiz : Int*, d__ : Double*, q : Double*, ldq : Int*, indxq : Int*, rho : Double*, cutpnt : Int*, z__ : Double*, dlamda : Double*, q2 : Double*, ldq2 : Int*, w : Double*, perm : Int*, givptr : Int*, givcol : Int*, givnum : Double*, indxp : Int*, indx : Int*, info : Int*)
    fun dlaed9(k : Int*, kstart : Int*, kstop : Int*, n : Int*, d__ : Double*, q : Double*, ldq : Int*, rho : Double*, dlamda : Double*, w : Double*, s : Double*, lds : Int*, info : Int*)
    fun dlaeda(n : Int*, tlvls : Int*, curlvl : Int*, curpbm : Int*, prmptr : Int*, perm : Int*, givptr : Int*, givcol : Int*, givnum : Double*, q : Double*, qptr : Int*, z__ : Double*, ztemp : Double*, info : Int*)
    fun dlaein(rightv : Char*, noinit : Char*, n : Int*, h__ : Double*, ldh : Int*, wr : Double*, wi : Double*, vr : Double*, vi : Double*, b : Double*, ldb : Int*, work : Double*, eps3 : Double*, smlnum : Double*, bignum : Double*, info : Int*)
    fun dlaev2(a : Double*, b : Double*, c__ : Double*, rt1 : Double*, rt2 : Double*, cs1 : Double*, sn1 : Double*)
    fun dlaexc(wantq : Char*, n : Int*, t : Double*, ldt : Int*, q : Double*, ldq : Int*, j1 : Int*, n1 : Int*, n2 : Int*, work : Double*, info : Int*)
    fun dlag2(a : Double*, lda : Int*, b : Double*, ldb : Int*, safmin : Double*, scale1 : Double*, scale2 : Double*, wr1 : Double*, wr2 : Double*, wi : Double*)
    fun dlag2s(m : Int*, n : Int*, a : Double*, lda : Int*, sa : Float*, ldsa : Int*, info : Int*)
    fun dlagge(m : Int*, n : Int*, kl : Int*, ku : Int*, d : Double*, a : Double*, lda : Int*, iseed : Int*, work : Double*, info : Int*)
    fun dlags2(upper : Char*, a1 : Double*, a2 : Double*, a3 : Double*, b1 : Double*, b2 : Double*, b3 : Double*, csu : Double*, snu : Double*, csv : Double*, snv : Double*, csq : Double*, snq : Double*)
    fun dlagsy(n : Int*, k : Int*, d : Double*, a : Double*, lda : Int*, iseed : Int*, work : Double*, info : Int*)
    fun dlagtf(n : Int*, a : Double*, lambda : Double*, b : Double*, c__ : Double*, tol : Double*, d__ : Double*, in : Int*, info : Int*)
    fun dlagtm(trans : Char*, n : Int*, nrhs : Int*, alpha : Double*, dl : Double*, d__ : Double*, du : Double*, x : Double*, ldx : Int*, beta : Double*, b : Double*, ldb : Int*)
    fun dlagts(job : Int*, n : Int*, a : Double*, b : Double*, c__ : Double*, d__ : Double*, in : Int*, y : Double*, tol : Double*, info : Int*)
    fun dlagv2(a : Double*, lda : Int*, b : Double*, ldb : Int*, alphar : Double*, alphai : Double*, beta : Double*, csl : Double*, snl : Double*, csr : Double*, snr : Double*)
    fun dlahqr(wantt : Char*, wantz : Char*, n : Int*, ilo : Int*, ihi : Int*, h__ : Double*, ldh : Int*, wr : Double*, wi : Double*, iloz : Int*, ihiz : Int*, z__ : Double*, ldz : Int*, info : Int*)
    fun dlahr2(n : Int*, k : Int*, nb : Int*, a : Double*, lda : Int*, tau : Double*, t : Double*, ldt : Int*, y : Double*, ldy : Int*)
    fun dlahrd(n : Int*, k : Int*, nb : Int*, a : Double*, lda : Int*, tau : Double*, t : Double*, ldt : Int*, y : Double*, ldy : Int*)
    fun dlaic1(job : Int*, j : Int*, x : Double*, sest : Double*, w : Double*, gamma : Double*, sestpr : Double*, s : Double*, c__ : Double*)
    fun dlaisnan(din1 : Double*, din2 : Double*) : Char
    fun dlaln2(ltrans : Char*, na : Int*, nw : Int*, smin : Double*, ca : Double*, a : Double*, lda : Int*, d1 : Double*, d2 : Double*, b : Double*, ldb : Int*, wr : Double*, wi : Double*, x : Double*, ldx : Int*, scale : Double*, xnorm : Double*, info : Int*)
    fun dlals0(icompq : Int*, nl : Int*, nr : Int*, sqre : Int*, nrhs : Int*, b : Double*, ldb : Int*, bx : Double*, ldbx : Int*, perm : Int*, givptr : Int*, givcol : Int*, ldgcol : Int*, givnum : Double*, ldgnum : Int*, poles : Double*, difl : Double*, difr : Double*, z__ : Double*, k : Int*, c__ : Double*, s : Double*, work : Double*, info : Int*)
    fun dlalsa(icompq : Int*, smlsiz : Int*, n : Int*, nrhs : Int*, b : Double*, ldb : Int*, bx : Double*, ldbx : Int*, u : Double*, ldu : Int*, vt : Double*, k : Int*, difl : Double*, difr : Double*, z__ : Double*, poles : Double*, givptr : Int*, givcol : Int*, ldgcol : Int*, perm : Int*, givnum : Double*, c__ : Double*, s : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dlalsd(uplo : Char*, smlsiz : Int*, n : Int*, nrhs : Int*, d__ : Double*, e : Double*, b : Double*, ldb : Int*, rcond : Double*, rank : Int*, work : Double*, iwork : Int*, info : Int*)
    fun dlamc1(beta : Int*, t : Int*, rnd : Char*, ieee1 : Char*)
    fun dlamc2(beta : Int*, t : Int*, rnd : Char*, eps : Double*, emin : Int*, rmin : Double*, emax : Int*, rmax : Double*)
    fun dlamc3(a : Double*, b : Double*) : Double
    fun dlamc4(emin : Int*, start : Double*, base : Int*)
    fun dlamc5(beta : Int*, p : Int*, emin : Int*, ieee : Char*, emax : Int*, rmax : Double*)
    fun dlamch(cmach : Char*) : Double
    fun dlamrg(n1 : Int*, n2 : Int*, a : Double*, dtrd1 : Int*, dtrd2 : Int*, index : Int*)
    fun dlaneg(n : Int*, d__ : Double*, lld : Double*, sigma : Double*, pivmin : Double*, r__ : Int*) : Int
    fun dlangb(norm : Char*, n : Int*, kl : Int*, ku : Int*, ab : Double*, ldab : Int*, work : Double*) : Double
    fun dlange(norm : Char*, m : Int*, n : Int*, a : Double*, lda : Int*, work : Double*) : Double
    fun dlangt(norm : Char*, n : Int*, dl : Double*, d : Double*, du : Double*) : Double
    fun dlanhs(norm : Char*, n : Int*, a : Double*, lda : Int*, work : Double*) : Double
    fun dlansb(norm : Char*, uplo : Char*, n : Int*, k : Int*, ab : Double*, ldab : Int*, work : Double*) : Double
    fun dlansf(norm : Char*, transr : Char*, uplo : Char*, n : Int*, a : Double*, work : Double*) : Double
    fun dlansp(norm : Char*, uplo : Char*, n : Int*, ap : Double*, work : Double*) : Double
    fun dlanst(norm : Char*, n : Int*, d : Double*, e : Double*) : Double
    fun dlansy(norm : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, work : Double*) : Double
    fun dlantb(norm : Char*, uplo : Char*, diag : Char*, n : Int*, k : Int*, ab : Double*, ldab : Int*, work : Double*) : Double
    fun dlantp(norm : Char*, uplo : Char*, diag : Char*, n : Int*, ap : Double*, work : Double*) : Double
    fun dlantr(norm : Char*, uplo : Char*, diag : Char*, m : Int*, n : Int*, a : Double*, lda : Int*, work : Double*) : Double
    fun dlanv2(a : Double*, b : Double*, c__ : Double*, d__ : Double*, rt1r : Double*, rt1i : Double*, rt2r : Double*, rt2i : Double*, cs : Double*, sn : Double*)
    fun dlapll(n : Int*, x : Double*, incx : Int*, y : Double*, incy : Int*, ssmin : Double*)
    fun dlapmr(forwrd : Int*, m : Int*, n : Int*, x : Double*, ldx : Int*, k : Int*)
    fun dlapmt(forwrd : Int*, m : Int*, n : Int*, x : Double*, ldx : Int*, k : Int*)
    fun dlapy2(x : Double*, y : Double*) : Double
    fun dlapy3(x : Double*, y : Double*, z : Double*) : Double
    fun dlaqgb(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : Double*, ldab : Int*, r__ : Double*, c__ : Double*, rowcnd : Double*, colcnd : Double*, amax : Double*, equed : Char*)
    fun dlaqge(m : Int*, n : Int*, a : Double*, lda : Int*, r__ : Double*, c__ : Double*, rowcnd : Double*, colcnd : Double*, amax : Double*, equed : Char*)
    fun dlaqp2(m : Int*, n : Int*, offset : Int*, a : Double*, lda : Int*, jpvt : Int*, tau : Double*, vn1 : Double*, vn2 : Double*, work : Double*)
    fun dlaqps(m : Int*, n : Int*, offset : Int*, nb : Int*, kb : Int*, a : Double*, lda : Int*, jpvt : Int*, tau : Double*, vn1 : Double*, vn2 : Double*, auxv : Double*, f : Double*, ldf : Int*)
    fun dlaqr0(wantt : Char*, wantz : Char*, n : Int*, ilo : Int*, ihi : Int*, h__ : Double*, ldh : Int*, wr : Double*, wi : Double*, iloz : Int*, ihiz : Int*, z__ : Double*, ldz : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dlaqr1(n : Int*, h__ : Double*, ldh : Int*, sr1 : Double*, si1 : Double*, sr2 : Double*, si2 : Double*, v : Double*)
    fun dlaqr2(wantt : Char*, wantz : Char*, n : Int*, ktop : Int*, kbot : Int*, nw : Int*, h__ : Double*, ldh : Int*, iloz : Int*, ihiz : Int*, z__ : Double*, ldz : Int*, ns : Int*, nd : Int*, sr : Double*, si : Double*, v : Double*, ldv : Int*, nh : Int*, t : Double*, ldt : Int*, nv : Int*, wv : Double*, ldwv : Int*, work : Double*, lwork : Int*)
    fun dlaqr3(wantt : Char*, wantz : Char*, n : Int*, ktop : Int*, kbot : Int*, nw : Int*, h__ : Double*, ldh : Int*, iloz : Int*, ihiz : Int*, z__ : Double*, ldz : Int*, ns : Int*, nd : Int*, sr : Double*, si : Double*, v : Double*, ldv : Int*, nh : Int*, t : Double*, ldt : Int*, nv : Int*, wv : Double*, ldwv : Int*, work : Double*, lwork : Int*)
    fun dlaqr4(wantt : Char*, wantz : Char*, n : Int*, ilo : Int*, ihi : Int*, h__ : Double*, ldh : Int*, wr : Double*, wi : Double*, iloz : Int*, ihiz : Int*, z__ : Double*, ldz : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dlaqr5(wantt : Char*, wantz : Char*, kacc22 : Int*, n : Int*, ktop : Int*, kbot : Int*, nshfts : Int*, sr : Double*, si : Double*, h__ : Double*, ldh : Int*, iloz : Int*, ihiz : Int*, z__ : Double*, ldz : Int*, v : Double*, ldv : Int*, u : Double*, ldu : Int*, nv : Int*, wv : Double*, ldwv : Int*, nh : Int*, wh : Double*, ldwh : Int*)
    fun dlaqsb(uplo : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, s : Double*, scond : Double*, amax : Double*, equed : Char*)
    fun dlaqsp(uplo : Char*, n : Int*, ap : Double*, s : Double*, scond : Double*, amax : Double*, equed : Char*)
    fun dlaqsy(uplo : Char*, n : Int*, a : Double*, lda : Int*, s : Double*, scond : Double*, amax : Double*, equed : Char*)
    fun dlaqtr(ltran : Char*, lreal : Char*, n : Int*, t : Double*, ldt : Int*, b : Double*, w : Double*, scale : Double*, x : Double*, work : Double*, info : Int*)
    fun dlar1v(n : Int*, b1 : Int*, bn : Int*, lambda : Double*, d__ : Double*, l : Double*, ld : Double*, lld : Double*, pivmin : Double*, gaptol : Double*, z__ : Double*, wantnc : Char*, negcnt : Int*, ztz : Double*, mingma : Double*, r__ : Int*, isuppz : Int*, nrminv : Double*, resid : Double*, rqcorr : Double*, work : Double*)
    fun dlar2v(n : Int*, x : Double*, y : Double*, z__ : Double*, incx : Int*, c__ : Double*, s : Double*, incc : Int*)
    fun dlarf(side : Char*, m : Int*, n : Int*, v : Double*, incv : Int*, tau : Double*, c : Double*, ldc : Int*, work : Double*)
    fun dlarfb(side : Char*, trans : Char*, direct : Char*, storev : Char*, m : Int*, n : Int*, k : Int*, v : Double*, ldv : Int*, t : Double*, ldt : Int*, c : Double*, ldc : Int*, work : Double*, ldwork : Int*)
    fun dlarfg(n : Int*, alpha : Double*, x : Double*, incx : Int*, tau : Double*)
    fun dlarfp(n : Int*, alpha : Double*, x : Double*, incx : Int*, tau : Double*)
    fun dlarft(direct : Char*, storev : Char*, n : Int*, k : Int*, v : Double*, ldv : Int*, tau : Double*, t : Double*, ldt : Int*)
    fun dlarfx(side : Char*, m : Int*, n : Int*, v : Double*, tau : Double*, c : Double*, ldc : Int*, work : Double*)
    fun dlargv(n : Int*, x : Double*, incx : Int*, y : Double*, incy : Int*, c__ : Double*, incc : Int*)
    fun dlarnv(idist : Int*, iseed : Int*, n : Int*, x : Double*)
    fun dlarra(n : Int*, d__ : Double*, e : Double*, e2 : Double*, spltol : Double*, tnrm : Double*, nsplit : Int*, isplit : Int*, info : Int*)
    fun dlarrb(n : Int*, d__ : Double*, lld : Double*, ifirst : Int*, ilast : Int*, rtol1 : Double*, rtol2 : Double*, offset : Int*, w : Double*, wgap : Double*, werr : Double*, work : Double*, iwork : Int*, pivmin : Double*, spdiam : Double*, twist : Int*, info : Int*)
    fun dlarrc(jobt : Char*, n : Int*, vl : Double*, vu : Double*, d__ : Double*, e : Double*, pivmin : Double*, eigcnt : Int*, lcnt : Int*, rcnt : Int*, info : Int*)
    fun dlarrd(range : Char*, order : Char*, n : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, gers : Double*, reltol : Double*, d__ : Double*, e : Double*, e2 : Double*, pivmin : Double*, nsplit : Int*, isplit : Int*, m : Int*, w : Double*, werr : Double*, wl : Double*, wu : Double*, iblock : Int*, indexw : Int*, work : Double*, iwork : Int*, info : Int*)
    fun dlarre(range : Char*, n : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, d__ : Double*, e : Double*, e2 : Double*, rtol1 : Double*, rtol2 : Double*, spltol : Double*, nsplit : Int*, isplit : Int*, m : Int*, w : Double*, werr : Double*, wgap : Double*, iblock : Int*, indexw : Int*, gers : Double*, pivmin : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dlarrf(n : Int*, d__ : Double*, l : Double*, ld : Double*, clstrt : Int*, clend : Int*, w : Double*, wgap : Double*, werr : Double*, spdiam : Double*, clgapl : Double*, clgapr : Double*, pivmin : Double*, sigma : Double*, dplus : Double*, lplus : Double*, work : Double*, info : Int*)
    fun dlarrj(n : Int*, d__ : Double*, e2 : Double*, ifirst : Int*, ilast : Int*, rtol : Double*, offset : Int*, w : Double*, werr : Double*, work : Double*, iwork : Int*, pivmin : Double*, spdiam : Double*, info : Int*)
    fun dlarrk(n : Int*, iw : Int*, gl : Double*, gu : Double*, d__ : Double*, e2 : Double*, pivmin : Double*, reltol : Double*, w : Double*, werr : Double*, info : Int*)
    fun dlarrr(n : Int*, d__ : Double*, e : Double*, info : Int*)
    fun dlarrv(n : Int*, vl : Double*, vu : Double*, d__ : Double*, l : Double*, pivmin : Double*, isplit : Int*, m : Int*, dol : Int*, dou : Int*, minrgp : Double*, rtol1 : Double*, rtol2 : Double*, w : Double*, werr : Double*, wgap : Double*, iblock : Int*, indexw : Int*, gers : Double*, z__ : Double*, ldz : Int*, isuppz : Int*, work : Double*, iwork : Int*, info : Int*)
    fun dlarscl2(m : Int*, n : Int*, d__ : Double*, x : Double*, ldx : Int*)
    fun dlartg(f : Double*, g : Double*, cs : Double*, sn : Double*, r__ : Double*)
    fun dlartgp(f : Double*, g : Double*, cs : Double*, sn : Double*, r : Double*)
    fun dlartgs(x : Double*, y : Double*, sigma : Double*, cs : Double*, sn : Double*)
    fun dlartv(n : Int*, x : Double*, incx : Int*, y : Double*, incy : Int*, c__ : Double*, s : Double*, incc : Int*)
    fun dlaruv(iseed : Int*, n : Int*, x : Double*)
    fun dlarz(side : Char*, m : Int*, n : Int*, l : Int*, v : Double*, incv : Int*, tau : Double*, c__ : Double*, ldc : Int*, work : Double*)
    fun dlarzb(side : Char*, trans : Char*, direct : Char*, storev : Char*, m : Int*, n : Int*, k : Int*, l : Int*, v : Double*, ldv : Int*, t : Double*, ldt : Int*, c__ : Double*, ldc : Int*, work : Double*, ldwork : Int*)
    fun dlarzt(direct : Char*, storev : Char*, n : Int*, k : Int*, v : Double*, ldv : Int*, tau : Double*, t : Double*, ldt : Int*)
    fun dlas2(f : Double*, g : Double*, h__ : Double*, ssmin : Double*, ssmax : Double*)
    fun dlascl(type : Char*, kl : Int*, ku : Int*, cfrom : Double*, cto : Double*, m : Int*, n : Int*, a : Double*, lda : Int*, info : Int*)
    fun dlascl2(m : Int*, n : Int*, d__ : Double*, x : Double*, ldx : Int*)
    fun dlasd0(n : Int*, sqre : Int*, d__ : Double*, e : Double*, u : Double*, ldu : Int*, vt : Double*, ldvt : Int*, smlsiz : Int*, iwork : Int*, work : Double*, info : Int*)
    fun dlasd1(nl : Int*, nr : Int*, sqre : Int*, d__ : Double*, alpha : Double*, beta : Double*, u : Double*, ldu : Int*, vt : Double*, ldvt : Int*, idxq : Int*, iwork : Int*, work : Double*, info : Int*)
    fun dlasd2(nl : Int*, nr : Int*, sqre : Int*, k : Int*, d__ : Double*, z__ : Double*, alpha : Double*, beta : Double*, u : Double*, ldu : Int*, vt : Double*, ldvt : Int*, dsigma : Double*, u2 : Double*, ldu2 : Int*, vt2 : Double*, ldvt2 : Int*, idxp : Int*, idx : Int*, idxc : Int*, idxq : Int*, coltyp : Int*, info : Int*)
    fun dlasd3(nl : Int*, nr : Int*, sqre : Int*, k : Int*, d__ : Double*, q : Double*, ldq : Int*, dsigma : Double*, u : Double*, ldu : Int*, u2 : Double*, ldu2 : Int*, vt : Double*, ldvt : Int*, vt2 : Double*, ldvt2 : Int*, idxc : Int*, ctot : Int*, z__ : Double*, info : Int*)
    fun dlasd4(n : Int*, i__ : Int*, d__ : Double*, z__ : Double*, delta : Double*, rho : Double*, sigma : Double*, work : Double*, info : Int*)
    fun dlasd5(i__ : Int*, d__ : Double*, z__ : Double*, delta : Double*, rho : Double*, dsigma : Double*, work : Double*)
    fun dlasd6(icompq : Int*, nl : Int*, nr : Int*, sqre : Int*, d__ : Double*, vf : Double*, vl : Double*, alpha : Double*, beta : Double*, idxq : Int*, perm : Int*, givptr : Int*, givcol : Int*, ldgcol : Int*, givnum : Double*, ldgnum : Int*, poles : Double*, difl : Double*, difr : Double*, z__ : Double*, k : Int*, c__ : Double*, s : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dlasd7(icompq : Int*, nl : Int*, nr : Int*, sqre : Int*, k : Int*, d__ : Double*, z__ : Double*, zw : Double*, vf : Double*, vfw : Double*, vl : Double*, vlw : Double*, alpha : Double*, beta : Double*, dsigma : Double*, idx : Int*, idxp : Int*, idxq : Int*, perm : Int*, givptr : Int*, givcol : Int*, ldgcol : Int*, givnum : Double*, ldgnum : Int*, c__ : Double*, s : Double*, info : Int*)
    fun dlasd8(icompq : Int*, k : Int*, d__ : Double*, z__ : Double*, vf : Double*, vl : Double*, difl : Double*, difr : Double*, lddifr : Int*, dsigma : Double*, work : Double*, info : Int*)
    fun dlasda(icompq : Int*, smlsiz : Int*, n : Int*, sqre : Int*, d__ : Double*, e : Double*, u : Double*, ldu : Int*, vt : Double*, k : Int*, difl : Double*, difr : Double*, z__ : Double*, poles : Double*, givptr : Int*, givcol : Int*, ldgcol : Int*, perm : Int*, givnum : Double*, c__ : Double*, s : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dlasdq(uplo : Char*, sqre : Int*, n : Int*, ncvt : Int*, nru : Int*, ncc : Int*, d__ : Double*, e : Double*, vt : Double*, ldvt : Int*, u : Double*, ldu : Int*, c__ : Double*, ldc : Int*, work : Double*, info : Int*)
    fun dlasdt(n : Int*, lvl : Int*, nd : Int*, inode : Int*, ndiml : Int*, ndimr : Int*, msub : Int*)
    fun dlaset(uplo : Char*, m : Int*, n : Int*, alpha : Double*, beta : Double*, a : Double*, lda : Int*)
    fun dlasq1(n : Int*, d__ : Double*, e : Double*, work : Double*, info : Int*)
    fun dlasq2(n : Int*, z__ : Double*, info : Int*)
    fun dlasq3(i0 : Int*, n0 : Int*, z__ : Double*, pp : Int*, dmin__ : Double*, sigma : Double*, desig : Double*, qmax : Double*, nfail : Int*, iter : Int*, ndiv : Int*, ieee : Char*, ttype : Int*, dmin1 : Double*, dmin2 : Double*, dn : Double*, dn1 : Double*, dn2 : Double*, g : Double*, tau : Double*)
    fun dlasq4(i0 : Int*, n0 : Int*, z__ : Double*, pp : Int*, n0in : Int*, dmin__ : Double*, dmin1 : Double*, dmin2 : Double*, dn : Double*, dn1 : Double*, dn2 : Double*, tau : Double*, ttype : Int*, g : Double*)
    fun dlasq5(i0 : Int*, n0 : Int*, z__ : Double*, pp : Int*, tau : Double*, dmin__ : Double*, dmin1 : Double*, dmin2 : Double*, dn : Double*, dnm1 : Double*, dnm2 : Double*, ieee : Char*)
    fun dlasq6(i0 : Int*, n0 : Int*, z__ : Double*, pp : Int*, dmin__ : Double*, dmin1 : Double*, dmin2 : Double*, dn : Double*, dnm1 : Double*, dnm2 : Double*)
    fun dlasr(side : Char*, pivot : Char*, direct : Char*, m : Int*, n : Int*, c__ : Double*, s : Double*, a : Double*, lda : Int*)
    fun dlasrt(id : Char*, n : Int*, d : Double*, info : Int*)
    fun dlassq(n : Int*, x : Double*, incx : Int*, scale : Double*, sumsq : Double*)
    fun dlasv2(f : Double*, g : Double*, h__ : Double*, ssmin : Double*, ssmax : Double*, snr : Double*, csr : Double*, snl : Double*, csl : Double*)
    fun dlaswp(n : Int*, a : Double*, lda : Int*, k1 : Int*, k2 : Int*, ipiv : Int*, incx : Int*)
    fun dlasy2(ltranl : Char*, ltranr : Char*, isgn : Int*, n1 : Int*, n2 : Int*, tl : Double*, ldtl : Int*, tr : Double*, ldtr : Int*, b : Double*, ldb : Int*, scale : Double*, x : Double*, ldx : Int*, xnorm : Double*, info : Int*)
    fun dlasyf(uplo : Char*, n : Int*, nb : Int*, kb : Int*, a : Double*, lda : Int*, ipiv : Int*, w : Double*, ldw : Int*, info : Int*)
    fun dlat2s(uplo : Char*, n : Int*, a : Double*, lda : Int*, sa : Float*, ldsa : Int*, info : Int*)
    fun dlatbs(uplo : Char*, trans : Char*, diag : Char*, normin : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, x : Double*, scale : Double*, cnorm : Double*, info : Int*)
    fun dlatdf(ijob : Int*, n : Int*, z__ : Double*, ldz : Int*, rhs : Double*, rdsum : Double*, rdscal : Double*, ipiv : Int*, jpiv : Int*)
    fun dlatms(m : Int*, n : Int*, dist : Char*, iseed : Int*, sym : Char*, d : Double*, mode : Int*, cond : Double*, dmax : Double*, kl : Int*, ku : Int*, pack : Char*, a : Double*, lda : Int*, work : Double*, info : Int*)
    fun dlatps(uplo : Char*, trans : Char*, diag : Char*, normin : Char*, n : Int*, ap : Double*, x : Double*, scale : Double*, cnorm : Double*, info : Int*)
    fun dlatrd(uplo : Char*, n : Int*, nb : Int*, a : Double*, lda : Int*, e : Double*, tau : Double*, w : Double*, ldw : Int*)
    fun dlatrs(uplo : Char*, trans : Char*, diag : Char*, normin : Char*, n : Int*, a : Double*, lda : Int*, x : Double*, scale : Double*, cnorm : Double*, info : Int*)
    fun dlatrz(m : Int*, n : Int*, l : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*)
    fun dlatzm(side : Char*, m : Int*, n : Int*, v : Double*, incv : Int*, tau : Double*, c1 : Double*, c2 : Double*, ldc : Int*, work : Double*)
    fun dlauu2(uplo : Char*, n : Int*, a : Double*, lda : Int*, info : Int*)
    fun dlauum(uplo : Char*, n : Int*, a : Double*, lda : Int*, info : Int*)
    fun dopgtr(uplo : Char*, n : Int*, ap : Double*, tau : Double*, q : Double*, ldq : Int*, work : Double*, info : Int*)
    fun dopmtr(side : Char*, uplo : Char*, trans : Char*, m : Int*, n : Int*, ap : Double*, tau : Double*, c : Double*, ldc : Int*, work : Double*, info : Int*)
    fun dorbdb(trans : Char*, signs : Char*, m : Int*, p : Int*, q : Int*, x11 : Double*, ldx11 : Int*, x12 : Double*, ldx12 : Int*, x21 : Double*, ldx21 : Int*, x22 : Double*, ldx22 : Int*, theta : Double*, phi : Double*, taup1 : Double*, taup2 : Double*, tauq1 : Double*, tauq2 : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dorcsd(jobu1 : Char*, jobu2 : Char*, jobv1t : Char*, jobv2t : Char*, trans : Char*, signs : Char*, m : Int*, p : Int*, q : Int*, x11 : Double*, ldx11 : Int*, x12 : Double*, ldx12 : Int*, x21 : Double*, ldx21 : Int*, x22 : Double*, ldx22 : Int*, theta : Double*, u1 : Double*, ldu1 : Int*, u2 : Double*, ldu2 : Int*, v1_t : Double*, ldv1t : Int*, v2_t : Double*, ldv2t : Int*, work : Double*, lwork : Int*, iwork : Int*, info : Int*)
    fun dorcsd2by1(jobu1 : Char*, jobu2 : Char*, jobv1t : Char*, m : Int*, p : Int*, q : Int*, x11 : Double*, ldx11 : Int*, x21 : Double*, ldx21 : Int*, theta : Double*, u1 : Double*, ldu1 : Int*, u2 : Double*, ldu2 : Int*, v1_t : Double*, ldv1t : Int*, work : Double*, lwork : Int*, iwork : Int*, info : Int*)
    fun dorg2l(m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, info : Int*)
    fun dorg2r(m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, info : Int*)
    fun dorgbr(vect : Char*, m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dorghr(n : Int*, ilo : Int*, ihi : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dorgl2(m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, info : Int*)
    fun dorglq(m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dorgql(m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dorgqr(m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dorgr2(m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, info : Int*)
    fun dorgrq(m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dorgtr(uplo : Char*, n : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dorgtsqr_row(m : Int*, n : Int*, mb : Int*, nb : Int*, a : Double*, lda : Int*, t : Double*, ldt : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dorm2l(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, c__ : Double*, ldc : Int*, work : Double*, info : Int*)
    fun dorm2r(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, c__ : Double*, ldc : Int*, work : Double*, info : Int*)
    fun dormbr(vect : Char*, side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, c : Double*, ldc : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dormhr(side : Char*, trans : Char*, m : Int*, n : Int*, ilo : Int*, ihi : Int*, a : Double*, lda : Int*, tau : Double*, c : Double*, ldc : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dorml2(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, c__ : Double*, ldc : Int*, work : Double*, info : Int*)
    fun dormlq(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, c : Double*, ldc : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dormql(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, c : Double*, ldc : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dormqr(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, c : Double*, ldc : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dormr2(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, c__ : Double*, ldc : Int*, work : Double*, info : Int*)
    fun dormr3(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, a : Double*, lda : Int*, tau : Double*, c__ : Double*, ldc : Int*, work : Double*, info : Int*)
    fun dormrq(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Double*, lda : Int*, tau : Double*, c : Double*, ldc : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dormrz(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, a : Double*, lda : Int*, tau : Double*, c : Double*, ldc : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dormtr(side : Char*, uplo : Char*, trans : Char*, m : Int*, n : Int*, a : Double*, lda : Int*, tau : Double*, c : Double*, ldc : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dpbcon(uplo : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, anorm : Double*, rcond : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dpbequ(uplo : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, s : Double*, scond : Double*, amax : Double*, info : Int*)
    fun dpbrfs(uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : Double*, ldab : Int*, afb : Double*, ldafb : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dpbstf(uplo : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, info : Int*)
    fun dpbsv(uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : Double*, ldab : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dpbsvx(fact : Char*, uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : Double*, ldab : Int*, afb : Double*, ldafb : Int*, equed : Char*, s : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dpbtf2(uplo : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, info : Int*)
    fun dpbtrf(uplo : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, info : Int*)
    fun dpbtrs(uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : Double*, ldab : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dpftrf(transr : Char*, uplo : Char*, n : Int*, a : Double*, info : Int*)
    fun dpftri(transr : Char*, uplo : Char*, n : Int*, a : Double*, info : Int*)
    fun dpftrs(transr : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : Double*, b : Double*, ldb : Int*, info : Int*)
    fun dpocon(uplo : Char*, n : Int*, a : Double*, lda : Int*, anorm : Double*, rcond : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dpoequ(n : Int*, a : Double*, lda : Int*, s : Double*, scond : Double*, amax : Double*, info : Int*)
    fun dpoequb(n : Int*, a : Double*, lda : Int*, s : Double*, scond : Double*, amax : Double*, info : Int*)
    fun dporfs(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dporfsx(uplo : Char*, equed : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, s : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dposv(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dposvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, equed : Char*, s : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dposvxx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, equed : Char*, s : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, rpvgrw : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dpotf2(uplo : Char*, n : Int*, a : Double*, lda : Int*, info : Int*)
    fun dpotrf(uplo : Char*, n : Int*, a : Double*, lda : Int*, info : Int*)
    fun dpotrf2(uplo : Char*, n : Int*, a : Double*, lda : Int*, info : Int*)
    fun dpotri(uplo : Char*, n : Int*, a : Double*, lda : Int*, info : Int*)
    fun dpotrs(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dppcon(uplo : Char*, n : Int*, ap : Double*, anorm : Double*, rcond : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dppequ(uplo : Char*, n : Int*, ap : Double*, s : Double*, scond : Double*, amax : Double*, info : Int*)
    fun dpprfs(uplo : Char*, n : Int*, nrhs : Int*, ap : Double*, afp : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dppsv(uplo : Char*, n : Int*, nrhs : Int*, ap : Double*, b : Double*, ldb : Int*, info : Int*)
    fun dppsvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, ap : Double*, afp : Double*, equed : Char*, s : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dpptrf(uplo : Char*, n : Int*, ap : Double*, info : Int*)
    fun dpptri(uplo : Char*, n : Int*, ap : Double*, info : Int*)
    fun dpptrs(uplo : Char*, n : Int*, nrhs : Int*, ap : Double*, b : Double*, ldb : Int*, info : Int*)
    fun dpstf2(uplo : Char*, n : Int*, a : Double*, lda : Int*, piv : Int*, rank : Int*, tol : Double*, work : Double*, info : Int*)
    fun dpstrf(uplo : Char*, n : Int*, a : Double*, lda : Int*, piv : Int*, rank : Int*, tol : Double*, work : Double*, info : Int*)
    fun dptcon(n : Int*, d : Double*, e : Double*, anorm : Double*, rcond : Double*, work : Double*, info : Int*)
    fun dpteqr(compz : Char*, n : Int*, d : Double*, e : Double*, z : Double*, ldz : Int*, work : Double*, info : Int*)
    fun dptrfs(n : Int*, nrhs : Int*, d : Double*, e : Double*, df : Double*, ef : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, ferr : Double*, berr : Double*, work : Double*, info : Int*)
    fun dptsv(n : Int*, nrhs : Int*, d : Double*, e : Double*, b : Double*, ldb : Int*, info : Int*)
    fun dptsvx(fact : Char*, n : Int*, nrhs : Int*, d : Double*, e : Double*, df : Double*, ef : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : Double*, info : Int*)
    fun dpttrf(n : Int*, d : Double*, e : Double*, info : Int*)
    fun dpttrs(n : Int*, nrhs : Int*, d : Double*, e : Double*, b : Double*, ldb : Int*, info : Int*)
    fun dptts2(n : Int*, nrhs : Int*, d__ : Double*, e : Double*, b : Double*, ldb : Int*)
    fun drscl(n : Int*, sa : Double*, sx : Double*, incx : Int*)
    fun dsbev(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, info : Int*)
    fun dsbev_2stage(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsbevd(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dsbevd_2stage(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dsbevx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, q : Double*, ldq : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun dsbevx_2stage(jobz : Char*, range : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, q : Double*, ldq : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, iwork : Int*, ifail : Int*, info : Int*)
    fun dsbgst(vect : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : Double*, ldab : Int*, bb : Double*, ldbb : Int*, x : Double*, ldx : Int*, work : Double*, info : Int*)
    fun dsbgv(jobz : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : Double*, ldab : Int*, bb : Double*, ldbb : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, info : Int*)
    fun dsbgvd(jobz : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : Double*, ldab : Int*, bb : Double*, ldbb : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dsbgvx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : Double*, ldab : Int*, bb : Double*, ldbb : Int*, q : Double*, ldq : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun dsbtrd(vect : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, d : Double*, e : Double*, q : Double*, ldq : Int*, work : Double*, info : Int*)
    fun dsecnd : Double
    fun dsfrk(transr : Char*, uplo : Char*, trans : Char*, n : Int*, k : Int*, alpha : Double*, a : Double*, lda : Int*, beta : Double*, c : Double*)
    fun dsgesv(n : Int*, nrhs : Int*, a : Double*, lda : Int*, ipiv : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, work : Double*, swork : Float*, iter : Int*, info : Int*)
    fun dspcon(uplo : Char*, n : Int*, ap : Double*, ipiv : Int*, anorm : Double*, rcond : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dspev(jobz : Char*, uplo : Char*, n : Int*, ap : Double*, w : Double*, z : Double*, ldz : Int*, work : Double*, info : Int*)
    fun dspevd(jobz : Char*, uplo : Char*, n : Int*, ap : Double*, w : Double*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dspevx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, ap : Double*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun dspgst(itype : Int*, uplo : Char*, n : Int*, ap : Double*, bp : Double*, info : Int*)
    fun dspgv(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, ap : Double*, bp : Double*, w : Double*, z : Double*, ldz : Int*, work : Double*, info : Int*)
    fun dspgvd(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, ap : Double*, bp : Double*, w : Double*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dspgvx(itype : Int*, jobz : Char*, range : Char*, uplo : Char*, n : Int*, ap : Double*, bp : Double*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun dsposv(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, work : Double*, swork : Float*, iter : Int*, info : Int*)
    fun dsprfs(uplo : Char*, n : Int*, nrhs : Int*, ap : Double*, afp : Double*, ipiv : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dspsv(uplo : Char*, n : Int*, nrhs : Int*, ap : Double*, ipiv : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dspsvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, ap : Double*, afp : Double*, ipiv : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dsptrd(uplo : Char*, n : Int*, ap : Double*, d : Double*, e : Double*, tau : Double*, info : Int*)
    fun dsptrf(uplo : Char*, n : Int*, ap : Double*, ipiv : Int*, info : Int*)
    fun dsptri(uplo : Char*, n : Int*, ap : Double*, ipiv : Int*, work : Double*, info : Int*)
    fun dsptrs(uplo : Char*, n : Int*, nrhs : Int*, ap : Double*, ipiv : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dstebz(range : Char*, order : Char*, n : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, d : Double*, e : Double*, m : Int*, nsplit : Int*, w : Double*, iblock : Int*, isplit : Int*, work : Double*, iwork : Int*, info : Int*)
    fun dstedc(compz : Char*, n : Int*, d : Double*, e : Double*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dstegr(jobz : Char*, range : Char*, n : Int*, d : Double*, e : Double*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : Double*, ldz : Int*, isuppz : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dstein(n : Int*, d : Double*, e : Double*, m : Int*, w : Double*, iblock : Int*, isplit : Int*, z : Double*, ldz : Int*, work : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun dstemr(jobz : Char*, range : Char*, n : Int*, d : Double*, e : Double*, vl : Double*, vu : Double*, il : Int*, iu : Int*, m : Int*, w : Double*, z : Double*, ldz : Int*, nzc : Int*, isuppz : Int*, tryrac : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dsteqr(compz : Char*, n : Int*, d : Double*, e : Double*, z : Double*, ldz : Int*, work : Double*, info : Int*)
    fun dsterf(n : Int*, d : Double*, e : Double*, info : Int*)
    fun dstev(jobz : Char*, n : Int*, d : Double*, e : Double*, z : Double*, ldz : Int*, work : Double*, info : Int*)
    fun dstevd(jobz : Char*, n : Int*, d : Double*, e : Double*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dstevr(jobz : Char*, range : Char*, n : Int*, d : Double*, e : Double*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : Double*, ldz : Int*, isuppz : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dstevx(jobz : Char*, range : Char*, n : Int*, d : Double*, e : Double*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun dsycon(uplo : Char*, n : Int*, a : Double*, lda : Int*, ipiv : Int*, anorm : Double*, rcond : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dsycon_3(uplo : Char*, n : Int*, a : Double*, lda : Int*, e : Double*, ipiv : Int*, anorm : Double*, rcond : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dsyconv(uplo : Char*, way : Char*, n : Int*, a : Double*, lda : Int*, ipiv : Int*, e : Double*, info : Int*)
    fun dsyequb(uplo : Char*, n : Int*, a : Double*, lda : Int*, s : Double*, scond : Double*, amax : Double*, work : Double*, info : Int*)
    fun dsyev(jobz : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, w : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dsyev_2stage(jobz : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, w : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dsyevd(jobz : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, w : Double*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dsyevd_2stage(jobz : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, w : Double*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dsyevr(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : Double*, ldz : Int*, isuppz : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dsyevr_2stage(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : Double*, ldz : Int*, isuppz : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dsyevx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, iwork : Int*, ifail : Int*, info : Int*)
    fun dsyevx_2stage(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, iwork : Int*, ifail : Int*, info : Int*)
    fun dsygs2(itype : Int*, uplo : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dsygst(itype : Int*, uplo : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dsygv(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, w : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dsygv_2stage(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, w : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dsygvd(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, w : Double*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dsygvx(itype : Int*, jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : Double*, ldz : Int*, work : Double*, lwork : Int*, iwork : Int*, ifail : Int*, info : Int*)
    fun dsyrfs(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, ipiv : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dsyrfsx(uplo : Char*, equed : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, ipiv : Int*, s : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dsysv(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, ipiv : Int*, b : Double*, ldb : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsysv_aa(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, ipiv : Int*, b : Double*, ldb : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsysv_aa_2stage(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, tb : Double*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, b : Double*, ldb : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsysv_rk(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, e : Double*, ipiv : Int*, b : Double*, ldb : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsysv_rook(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, ipiv : Int*, b : Double*, ldb : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsysvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, ipiv : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : Double*, lwork : Int*, iwork : Int*, info : Int*)
    fun dsysvxx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, af : Double*, ldaf : Int*, ipiv : Int*, equed : Char*, s : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, rcond : Double*, rpvgrw : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dsyswapr(uplo : Char*, n : Int*, a : Double*, lda : Int*, i1 : Int*, i2 : Int*)
    fun dsytd2(uplo : Char*, n : Int*, a : Double*, lda : Int*, d__ : Double*, e : Double*, tau : Double*, info : Int*)
    fun dsytf2(uplo : Char*, n : Int*, a : Double*, lda : Int*, ipiv : Int*, info : Int*)
    fun dsytrd(uplo : Char*, n : Int*, a : Double*, lda : Int*, d : Double*, e : Double*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dsytrd_2stage(vect : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, d : Double*, e : Double*, tau : Double*, hous2 : Double*, lhous2 : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsytrf(uplo : Char*, n : Int*, a : Double*, lda : Int*, ipiv : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsytrf_aa(uplo : Char*, n : Int*, a : Double*, lda : Int*, ipiv : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsytrf_aa_2stage(uplo : Char*, n : Int*, a : Double*, lda : Int*, tb : Double*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsytrf_rk(uplo : Char*, n : Int*, a : Double*, lda : Int*, e : Double*, ipiv : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsytrf_rook(uplo : Char*, n : Int*, a : Double*, lda : Int*, ipiv : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsytri(uplo : Char*, n : Int*, a : Double*, lda : Int*, ipiv : Int*, work : Double*, info : Int*)
    fun dsytri2(uplo : Char*, n : Int*, a : Double*, lda : Int*, ipiv : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsytri2x(uplo : Char*, n : Int*, a : Double*, lda : Int*, ipiv : Int*, work : Double*, nb : Int*, info : Int*)
    fun dsytri_3(uplo : Char*, n : Int*, a : Double*, lda : Int*, e : Double*, ipiv : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsytrs(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, ipiv : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dsytrs2(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, ipiv : Int*, b : Double*, ldb : Int*, work : Double*, info : Int*)
    fun dsytrs_3(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, e : Double*, ipiv : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dsytrs_aa(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, ipiv : Int*, b : Double*, ldb : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dsytrs_aa_2stage(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, tb : Double*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dsytrs_rook(uplo : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, ipiv : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dtbcon(norm : Char*, uplo : Char*, diag : Char*, n : Int*, kd : Int*, ab : Double*, ldab : Int*, rcond : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dtbrfs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : Double*, ldab : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dtbtrs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : Double*, ldab : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dtfsm(transr : Char*, side : Char*, uplo : Char*, trans : Char*, diag : Char*, m : Int*, n : Int*, alpha : Double*, a : Double*, b : Double*, ldb : Int*)
    fun dtftri(transr : Char*, uplo : Char*, diag : Char*, n : Int*, a : Double*, info : Int*)
    fun dtfttp(transr : Char*, uplo : Char*, n : Int*, arf : Double*, ap : Double*, info : Int*)
    fun dtfttr(transr : Char*, uplo : Char*, n : Int*, arf : Double*, a : Double*, lda : Int*, info : Int*)
    fun dtgevc(side : Char*, howmny : Char*, select : Int*, n : Int*, s : Double*, lds : Int*, p : Double*, ldp : Int*, vl : Double*, ldvl : Int*, vr : Double*, ldvr : Int*, mm : Int*, m : Int*, work : Double*, info : Int*)
    fun dtgex2(wantq : Char*, wantz : Char*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, q : Double*, ldq : Int*, z__ : Double*, ldz : Int*, j1 : Int*, n1 : Int*, n2 : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dtgexc(wantq : Int*, wantz : Int*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, q : Double*, ldq : Int*, z : Double*, ldz : Int*, ifst : Int*, ilst : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dtgsen(ijob : Int*, wantq : Int*, wantz : Int*, select : Int*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, alphar : Double*, alphai : Double*, beta : Double*, q : Double*, ldq : Int*, z : Double*, ldz : Int*, m : Int*, pl : Double*, pr : Double*, dif : Double*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dtgsja(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, p : Int*, n : Int*, k : Int*, l : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, tola : Double*, tolb : Double*, alpha : Double*, beta : Double*, u : Double*, ldu : Int*, v : Double*, ldv : Int*, q : Double*, ldq : Int*, work : Double*, ncycle : Int*, info : Int*)
    fun dtgsna(job : Char*, howmny : Char*, select : Int*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, vl : Double*, ldvl : Int*, vr : Double*, ldvr : Int*, s : Double*, dif : Double*, mm : Int*, m : Int*, work : Double*, lwork : Int*, iwork : Int*, info : Int*)
    fun dtgsy2(trans : Char*, ijob : Int*, m : Int*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, c__ : Double*, ldc : Int*, d__ : Double*, ldd : Int*, e : Double*, lde : Int*, f : Double*, ldf : Int*, scale : Double*, rdsum : Double*, rdscal : Double*, iwork : Int*, pq : Int*, info : Int*)
    fun dtgsyl(trans : Char*, ijob : Int*, m : Int*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, c : Double*, ldc : Int*, d : Double*, ldd : Int*, e : Double*, lde : Int*, f : Double*, ldf : Int*, dif : Double*, scale : Double*, work : Double*, lwork : Int*, iwork : Int*, info : Int*)
    fun dtpcon(norm : Char*, uplo : Char*, diag : Char*, n : Int*, ap : Double*, rcond : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dtplqt(m : Int*, n : Int*, l : Int*, mb : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, t : Double*, ldt : Int*, work : Double*, info : Int*)
    fun dtplqt2(m : Int*, n : Int*, l : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, t : Double*, ldt : Int*, info : Int*)
    fun dtpmlqt(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, mb : Int*, v : Double*, ldv : Int*, t : Double*, ldt : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, work : Double*, info : Int*)
    fun dtpmqrt(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, nb : Int*, v : Double*, ldv : Int*, t : Double*, ldt : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, work : Double*, info : Int*)
    fun dtpqrt(m : Int*, n : Int*, l : Int*, nb : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, t : Double*, ldt : Int*, work : Double*, info : Int*)
    fun dtpqrt2(m : Int*, n : Int*, l : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, t : Double*, ldt : Int*, info : Int*)
    fun dtprfb(side : Char*, trans : Char*, direct : Char*, storev : Char*, m : Int*, n : Int*, k : Int*, l : Int*, v : Double*, ldv : Int*, t : Double*, ldt : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, work : Double*, ldwork : Int*)
    fun dtprfs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, ap : Double*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dtptri(uplo : Char*, diag : Char*, n : Int*, ap : Double*, info : Int*)
    fun dtptrs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, ap : Double*, b : Double*, ldb : Int*, info : Int*)
    fun dtpttf(transr : Char*, uplo : Char*, n : Int*, ap : Double*, arf : Double*, info : Int*)
    fun dtpttr(uplo : Char*, n : Int*, ap : Double*, a : Double*, lda : Int*, info : Int*)
    fun dtrcon(norm : Char*, uplo : Char*, diag : Char*, n : Int*, a : Double*, lda : Int*, rcond : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dtrevc(side : Char*, howmny : Char*, select : Int*, n : Int*, t : Double*, ldt : Int*, vl : Double*, ldvl : Int*, vr : Double*, ldvr : Int*, mm : Int*, m : Int*, work : Double*, info : Int*)
    fun dtrevc3(side : Char*, howmny : Char*, select : Int*, n : Int*, t : Double*, ldt : Int*, vl : Double*, ldvl : Int*, vr : Double*, ldvr : Int*, mm : Int*, m : Int*, work : Double*, lwork : Int*, info : Int*)
    fun dtrexc(compq : Char*, n : Int*, t : Double*, ldt : Int*, q : Double*, ldq : Int*, ifst : Int*, ilst : Int*, work : Double*, info : Int*)
    fun dtrrfs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, x : Double*, ldx : Int*, ferr : Double*, berr : Double*, work : Double*, iwork : Int*, info : Int*)
    fun dtrsen(job : Char*, compq : Char*, select : Int*, n : Int*, t : Double*, ldt : Int*, q : Double*, ldq : Int*, wr : Double*, wi : Double*, m : Int*, s : Double*, sep : Double*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun dtrsna(job : Char*, howmny : Char*, select : Int*, n : Int*, t : Double*, ldt : Int*, vl : Double*, ldvl : Int*, vr : Double*, ldvr : Int*, s : Double*, sep : Double*, mm : Int*, m : Int*, work : Double*, ldwork : Int*, iwork : Int*, info : Int*)
    fun dtrsyl(trana : Char*, tranb : Char*, isgn : Int*, m : Int*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, c : Double*, ldc : Int*, scale : Double*, info : Int*)
    fun dtrsyl3(trana : Char*, tranb : Char*, isgn : Int*, m : Int*, n : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, c : Double*, ldc : Int*, scale : Double*, iwork : Int*, liwork : Int*, swork : Double*, ldswork : Int*, info : Int*)
    fun dtrti2(uplo : Char*, diag : Char*, n : Int*, a : Double*, lda : Int*, info : Int*)
    fun dtrtri(uplo : Char*, diag : Char*, n : Int*, a : Double*, lda : Int*, info : Int*)
    fun dtrtrs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, a : Double*, lda : Int*, b : Double*, ldb : Int*, info : Int*)
    fun dtrttf(transr : Char*, uplo : Char*, n : Int*, a : Double*, lda : Int*, arf : Double*, info : Int*)
    fun dtrttp(uplo : Char*, n : Int*, a : Double*, lda : Int*, ap : Double*, info : Int*)
    fun dtzrqf(m : Int*, n : Int*, a : Double*, lda : Int*, tau : Double*, info : Int*)
    fun dtzrzf(m : Int*, n : Int*, a : Double*, lda : Int*, tau : Double*, work : Double*, lwork : Int*, info : Int*)
    fun dzsum1(n : Int*, cx : ComplexDouble*, incx : Int*) : Double
    fun icmax1(n : Int*, cx : ComplexFloat*, incx : Int*) : Int
    fun ieeeck(ispec : Int*, zero : Float*, one : Float*) : Int
    fun ilaclc(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*) : Int
    fun ilaclr(m : Int*, n : Int*, a : ComplexFloat*, lda : Int*) : Int
    fun iladiag(diag : Char*) : Int
    fun iladlc(m : Int*, n : Int*, a : Double*, lda : Int*) : Int
    fun iladlr(m : Int*, n : Int*, a : Double*, lda : Int*) : Int
    fun ilaenv(ispec : Int*, name__ : Char*, opts : Char*, n1 : Int*, n2 : Int*, n3 : Int*, n4 : Int*) : Int
    fun ilaprec(prec : Char*) : Int
    fun ilaslc(m : Int*, n : Int*, a : Float*, lda : Int*) : Int
    fun ilaslr(m : Int*, n : Int*, a : Float*, lda : Int*) : Int
    fun ilatrans(trans : Char*) : Int
    fun ilauplo(uplo : Char*) : Int
    fun ilaver(vers_major : Int*, vers_minor : Int*, vers_patch : Int*)
    fun ilazlc(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*) : Int
    fun ilazlr(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*) : Int
    fun iparmq(ispec : Int*, name__ : Char*, opts : Char*, n : Int*, ilo : Int*, ihi : Int*, lwork : Int*) : Int
    fun izmax1(n : Int*, cx : ComplexDouble*, incx : Int*) : Int
    fun lsame(ca : Char*, cb : Char*) : Char
    fun lsamen(n : Int*, ca : Char*, cb : Char*) : Char
    fun sbbcsd(jobu1 : Char*, jobu2 : Char*, jobv1t : Char*, jobv2t : Char*, trans : Char*, m : Int*, p : Int*, q : Int*, theta : Float*, phi : Float*, u1 : Float*, ldu1 : Int*, u2 : Float*, ldu2 : Int*, v1_t : Float*, ldv1t : Int*, v2_t : Float*, ldv2t : Int*, b11_d : Float*, b11_e : Float*, b12_d : Float*, b12_e : Float*, b21_d : Float*, b21_e : Float*, b22_d : Float*, b22_e : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sbdsdc(uplo : Char*, compq : Char*, n : Int*, d : Float*, e : Float*, u : Float*, ldu : Int*, vt : Float*, ldvt : Int*, q : Float*, iq : Int*, work : Float*, iwork : Int*, info : Int*)
    fun sbdsqr(uplo : Char*, n : Int*, ncvt : Int*, nru : Int*, ncc : Int*, d : Float*, e : Float*, vt : Float*, ldvt : Int*, u : Float*, ldu : Int*, c : Float*, ldc : Int*, work : Float*, info : Int*)
    fun sbdsvdx(uplo : Char*, jobz : Char*, range : Char*, n : Int*, d : Float*, e : Float*, vl : Float*, vu : Float*, il : Int*, iu : Int*, ns : Int*, s : Float*, z : Float*, ldz : Int*, work : Float*, iwork : Int*, info : Int*)
    fun scsum1(n : Int*, cx : ComplexFloat*, incx : Int*) : Double
    fun sdisna(job : Char*, m : Int*, n : Int*, d : Float*, sep : Float*, info : Int*)
    fun second : Double
    fun sgbbrd(vect : Char*, m : Int*, n : Int*, ncc : Int*, kl : Int*, ku : Int*, ab : Float*, ldab : Int*, d : Float*, e : Float*, q : Float*, ldq : Int*, pt : Float*, ldpt : Int*, c : Float*, ldc : Int*, work : Float*, info : Int*)
    fun sgbcon(norm : Char*, n : Int*, kl : Int*, ku : Int*, ab : Float*, ldab : Int*, ipiv : Int*, anorm : Float*, rcond : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sgbequ(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : Float*, ldab : Int*, r : Float*, c : Float*, rowcnd : Float*, colcnd : Float*, amax : Float*, info : Int*)
    fun sgbequb(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : Float*, ldab : Int*, r : Float*, c : Float*, rowcnd : Float*, colcnd : Float*, amax : Float*, info : Int*)
    fun sgbrfs(trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Float*, ldab : Int*, afb : Float*, ldafb : Int*, ipiv : Int*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sgbrfsx(trans : Char*, equed : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Float*, ldab : Int*, afb : Float*, ldafb : Int*, ipiv : Int*, r : Float*, c : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sgbsv(n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Float*, ldab : Int*, ipiv : Int*, b : Float*, ldb : Int*, info : Int*)
    fun sgbsvx(fact : Char*, trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Float*, ldab : Int*, afb : Float*, ldafb : Int*, ipiv : Int*, equed : Char*, r : Float*, c : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sgbsvxx(fact : Char*, trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Float*, ldab : Int*, afb : Float*, ldafb : Int*, ipiv : Int*, equed : Char*, r : Float*, c : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, rpvgrw : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sgbtf2(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : Float*, ldab : Int*, ipiv : Int*, info : Int*)
    fun sgbtrf(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : Float*, ldab : Int*, ipiv : Int*, info : Int*)
    fun sgbtrs(trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Float*, ldab : Int*, ipiv : Int*, b : Float*, ldb : Int*, info : Int*)
    fun sgebak(job : Char*, side : Char*, n : Int*, ilo : Int*, ihi : Int*, scale : Float*, m : Int*, v : Float*, ldv : Int*, info : Int*)
    fun sgebal(job : Char*, n : Int*, a : Float*, lda : Int*, ilo : Int*, ihi : Int*, scale : Float*, info : Int*)
    fun sgebd2(m : Int*, n : Int*, a : Float*, lda : Int*, d__ : Float*, e : Float*, tauq : Float*, taup : Float*, work : Float*, info : Int*)
    fun sgebrd(m : Int*, n : Int*, a : Float*, lda : Int*, d : Float*, e : Float*, tauq : Float*, taup : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sgecon(norm : Char*, n : Int*, a : Float*, lda : Int*, anorm : Float*, rcond : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sgeequ(m : Int*, n : Int*, a : Float*, lda : Int*, r : Float*, c : Float*, rowcnd : Float*, colcnd : Float*, amax : Float*, info : Int*)
    fun sgeequb(m : Int*, n : Int*, a : Float*, lda : Int*, r : Float*, c : Float*, rowcnd : Float*, colcnd : Float*, amax : Float*, info : Int*)
    fun sgees(jobvs : Char*, sort : Char*, select : SSelect2, n : Int*, a : Float*, lda : Int*, sdim : Int*, wr : Float*, wi : Float*, vs : Float*, ldvs : Int*, work : Float*, lwork : Int*, bwork : Int*, info : Int*)
    fun sgeesx(jobvs : Char*, sort : Char*, select : SSelect2, sense : Char*, n : Int*, a : Float*, lda : Int*, sdim : Int*, wr : Float*, wi : Float*, vs : Float*, ldvs : Int*, rconde : Float*, rcondv : Float*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, bwork : Int*, info : Int*)
    fun sgeev(jobvl : Char*, jobvr : Char*, n : Int*, a : Float*, lda : Int*, wr : Float*, wi : Float*, vl : Float*, ldvl : Int*, vr : Float*, ldvr : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgeevx(balanc : Char*, jobvl : Char*, jobvr : Char*, sense : Char*, n : Int*, a : Float*, lda : Int*, wr : Float*, wi : Float*, vl : Float*, ldvl : Int*, vr : Float*, ldvr : Int*, ilo : Int*, ihi : Int*, scale : Float*, abnrm : Float*, rconde : Float*, rcondv : Float*, work : Float*, lwork : Int*, iwork : Int*, info : Int*)
    fun sgegs(jobvsl : Char*, jobvsr : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, alphar : Float*, alphai : Float*, beta : Float*, vsl : Float*, ldvsl : Int*, vsr : Float*, ldvsr : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgegv(jobvl : Char*, jobvr : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, alphar : Float*, alphai : Float*, beta : Float*, vl : Float*, ldvl : Int*, vr : Float*, ldvr : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgehd2(n : Int*, ilo : Int*, ihi : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, info : Int*)
    fun sgehrd(n : Int*, ilo : Int*, ihi : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sgejsv(joba : Char*, jobu : Char*, jobv : Char*, jobr : Char*, jobt : Char*, jobp : Char*, m : Int*, n : Int*, a : Float*, lda : Int*, sva : Float*, u : Float*, ldu : Int*, v : Float*, ldv : Int*, work : Float*, lwork : Int*, iwork : Int*, info : Int*)
    fun sgelq(m : Int*, n : Int*, a : Float*, lda : Int*, t : Float*, tsize : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgelq2(m : Int*, n : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, info : Int*)
    fun sgelqf(m : Int*, n : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sgels(trans : Char*, m : Int*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgelsd(m : Int*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, s : Float*, rcond : Float*, rank : Int*, work : Float*, lwork : Int*, iwork : Int*, info : Int*)
    fun sgelss(m : Int*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, s : Float*, rcond : Float*, rank : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgelsx(m : Int*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, jpvt : Int*, rcond : Float*, rank : Int*, work : Float*, info : Int*)
    fun sgelsy(m : Int*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, jpvt : Int*, rcond : Float*, rank : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgemlq(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, t : Float*, tsize : Int*, c : Float*, ldc : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgemqr(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, t : Float*, tsize : Int*, c : Float*, ldc : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgemqrt(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, nb : Int*, v : Float*, ldv : Int*, t : Float*, ldt : Int*, c : Float*, ldc : Int*, work : Float*, info : Int*)
    fun sgeql2(m : Int*, n : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, info : Int*)
    fun sgeqlf(m : Int*, n : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sgeqp3(m : Int*, n : Int*, a : Float*, lda : Int*, jpvt : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sgeqpf(m : Int*, n : Int*, a : Float*, lda : Int*, jpvt : Int*, tau : Float*, work : Float*, info : Int*)
    fun sgeqr(m : Int*, n : Int*, a : Float*, lda : Int*, t : Float*, tsize : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgeqr2(m : Int*, n : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, info : Int*)
    fun sgeqrf(m : Int*, n : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sgeqrfp(m : Int*, n : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sgeqrt(m : Int*, n : Int*, nb : Int*, a : Float*, lda : Int*, t : Float*, ldt : Int*, work : Float*, info : Int*)
    fun sgeqrt2(m : Int*, n : Int*, a : Float*, lda : Int*, t : Float*, ldt : Int*, info : Int*)
    fun sgeqrt3(m : Int*, n : Int*, a : Float*, lda : Int*, t : Float*, ldt : Int*, info : Int*)
    fun sgerfs(trans : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, ipiv : Int*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sgerfsx(trans : Char*, equed : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, ipiv : Int*, r : Float*, c : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sgerq2(m : Int*, n : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, info : Int*)
    fun sgerqf(m : Int*, n : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sgesc2(n : Int*, a : Float*, lda : Int*, rhs : Float*, ipiv : Int*, jpiv : Int*, scale : Float*)
    fun sgesdd(jobz : Char*, m : Int*, n : Int*, a : Float*, lda : Int*, s : Float*, u : Float*, ldu : Int*, vt : Float*, ldvt : Int*, work : Float*, lwork : Int*, iwork : Int*, info : Int*)
    fun sgesv(n : Int*, nrhs : Int*, a : Float*, lda : Int*, ipiv : Int*, b : Float*, ldb : Int*, info : Int*)
    fun sgesvd(jobu : Char*, jobvt : Char*, m : Int*, n : Int*, a : Float*, lda : Int*, s : Float*, u : Float*, ldu : Int*, vt : Float*, ldvt : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgesvdq(joba : Char*, jobp : Char*, jobr : Char*, jobu : Char*, jobv : Char*, m : Int*, n : Int*, a : Float*, lda : Int*, s : Float*, u : Float*, ldu : Int*, v : Float*, ldv : Int*, numrank : Int*, iwork : Int*, liwork : Int*, work : Float*, lwork : Int*, rwork : Float*, lrwork : Int*, info : Int*)
    fun sgesvdx(jobu : Char*, jobvt : Char*, range : Char*, m : Int*, n : Int*, a : Float*, lda : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, ns : Int*, s : Float*, u : Float*, ldu : Int*, vt : Float*, ldvt : Int*, work : Float*, lwork : Int*, iwork : Int*, info : Int*)
    fun sgesvj(joba : Char*, jobu : Char*, jobv : Char*, m : Int*, n : Int*, a : Float*, lda : Int*, sva : Float*, mv : Int*, v : Float*, ldv : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgesvx(fact : Char*, trans : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, ipiv : Int*, equed : Char*, r : Float*, c : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sgesvxx(fact : Char*, trans : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, ipiv : Int*, equed : Char*, r : Float*, c : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, rpvgrw : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sgetc2(n : Int*, a : Float*, lda : Int*, ipiv : Int*, jpiv : Int*, info : Int*)
    fun sgetf2(m : Int*, n : Int*, a : Float*, lda : Int*, ipiv : Int*, info : Int*)
    fun sgetrf(m : Int*, n : Int*, a : Float*, lda : Int*, ipiv : Int*, info : Int*)
    fun sgetrf2(m : Int*, n : Int*, a : Float*, lda : Int*, ipiv : Int*, info : Int*)
    fun sgetri(n : Int*, a : Float*, lda : Int*, ipiv : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgetrs(trans : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, ipiv : Int*, b : Float*, ldb : Int*, info : Int*)
    fun sgetsls(trans : Char*, m : Int*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgetsqrhrt(m : Int*, n : Int*, mb1 : Int*, nb1 : Int*, nb2 : Int*, a : Float*, lda : Int*, t : Float*, ldt : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sggbak(job : Char*, side : Char*, n : Int*, ilo : Int*, ihi : Int*, lscale : Float*, rscale : Float*, m : Int*, v : Float*, ldv : Int*, info : Int*)
    fun sggbal(job : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, ilo : Int*, ihi : Int*, lscale : Float*, rscale : Float*, work : Float*, info : Int*)
    fun sgges(jobvsl : Char*, jobvsr : Char*, sort : Char*, selctg : SSelect3, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, sdim : Int*, alphar : Float*, alphai : Float*, beta : Float*, vsl : Float*, ldvsl : Int*, vsr : Float*, ldvsr : Int*, work : Float*, lwork : Int*, bwork : Int*, info : Int*)
    fun sgges3(jobvsl : Char*, jobvsr : Char*, sort : Char*, selctg : SSelect3, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, sdim : Int*, alphar : Float*, alphai : Float*, beta : Float*, vsl : Float*, ldvsl : Int*, vsr : Float*, ldvsr : Int*, work : Float*, lwork : Int*, bwork : Int*, info : Int*)
    fun sggesx(jobvsl : Char*, jobvsr : Char*, sort : Char*, selctg : SSelect3, sense : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, sdim : Int*, alphar : Float*, alphai : Float*, beta : Float*, vsl : Float*, ldvsl : Int*, vsr : Float*, ldvsr : Int*, rconde : Float*, rcondv : Float*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, bwork : Int*, info : Int*)
    fun sggev(jobvl : Char*, jobvr : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, alphar : Float*, alphai : Float*, beta : Float*, vl : Float*, ldvl : Int*, vr : Float*, ldvr : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sggev3(jobvl : Char*, jobvr : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, alphar : Float*, alphai : Float*, beta : Float*, vl : Float*, ldvl : Int*, vr : Float*, ldvr : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sggevx(balanc : Char*, jobvl : Char*, jobvr : Char*, sense : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, alphar : Float*, alphai : Float*, beta : Float*, vl : Float*, ldvl : Int*, vr : Float*, ldvr : Int*, ilo : Int*, ihi : Int*, lscale : Float*, rscale : Float*, abnrm : Float*, bbnrm : Float*, rconde : Float*, rcondv : Float*, work : Float*, lwork : Int*, iwork : Int*, bwork : Int*, info : Int*)
    fun sggglm(n : Int*, m : Int*, p : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, d : Float*, x : Float*, y : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sgghd3(compq : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, q : Float*, ldq : Int*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgghrd(compq : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, q : Float*, ldq : Int*, z : Float*, ldz : Int*, info : Int*)
    fun sgglse(m : Int*, n : Int*, p : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, c : Float*, d : Float*, x : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sggqrf(n : Int*, m : Int*, p : Int*, a : Float*, lda : Int*, taua : Float*, b : Float*, ldb : Int*, taub : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sggrqf(m : Int*, p : Int*, n : Int*, a : Float*, lda : Int*, taua : Float*, b : Float*, ldb : Int*, taub : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sggsvd(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, n : Int*, p : Int*, k : Int*, l : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, alpha : Float*, beta : Float*, u : Float*, ldu : Int*, v : Float*, ldv : Int*, q : Float*, ldq : Int*, work : Float*, iwork : Int*, info : Int*) : Int
    fun sggsvd3(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, n : Int*, p : Int*, k : Int*, l : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, alpha : Float*, beta : Float*, u : Float*, ldu : Int*, v : Float*, ldv : Int*, q : Float*, ldq : Int*, work : Float*, lwork : Int*, iwork : Int*, info : Int*)
    fun sggsvp(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, p : Int*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, tola : Float*, tolb : Float*, k : Int*, l : Int*, u : Float*, ldu : Int*, v : Float*, ldv : Int*, q : Float*, ldq : Int*, iwork : Int*, tau : Float*, work : Float*, info : Int*) : Int
    fun sggsvp3(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, p : Int*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, tola : Float*, tolb : Float*, k : Int*, l : Int*, u : Float*, ldu : Int*, v : Float*, ldv : Int*, q : Float*, ldq : Int*, iwork : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sgsvj0(jobv : Char*, m : Int*, n : Int*, a : Float*, lda : Int*, d__ : Float*, sva : Float*, mv : Int*, v : Float*, ldv : Int*, eps : Float*, sfmin : Float*, tol : Float*, nsweep : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgsvj1(jobv : Char*, m : Int*, n : Int*, n1 : Int*, a : Float*, lda : Int*, d__ : Float*, sva : Float*, mv : Int*, v : Float*, ldv : Int*, eps : Float*, sfmin : Float*, tol : Float*, nsweep : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sgtcon(norm : Char*, n : Int*, dl : Float*, d : Float*, du : Float*, du2 : Float*, ipiv : Int*, anorm : Float*, rcond : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sgtrfs(trans : Char*, n : Int*, nrhs : Int*, dl : Float*, d : Float*, du : Float*, dlf : Float*, df : Float*, duf : Float*, du2 : Float*, ipiv : Int*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sgtsv(n : Int*, nrhs : Int*, dl : Float*, d : Float*, du : Float*, b : Float*, ldb : Int*, info : Int*)
    fun sgtsvx(fact : Char*, trans : Char*, n : Int*, nrhs : Int*, dl : Float*, d : Float*, du : Float*, dlf : Float*, df : Float*, duf : Float*, du2 : Float*, ipiv : Int*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sgttrf(n : Int*, dl : Float*, d : Float*, du : Float*, du2 : Float*, ipiv : Int*, info : Int*)
    fun sgttrs(trans : Char*, n : Int*, nrhs : Int*, dl : Float*, d : Float*, du : Float*, du2 : Float*, ipiv : Int*, b : Float*, ldb : Int*, info : Int*)
    fun sgtts2(itrans : Int*, n : Int*, nrhs : Int*, dl : Float*, d__ : Float*, du : Float*, du2 : Float*, ipiv : Int*, b : Float*, ldb : Int*)
    fun shgeqz(job : Char*, compq : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, h : Float*, ldh : Int*, t : Float*, ldt : Int*, alphar : Float*, alphai : Float*, beta : Float*, q : Float*, ldq : Int*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, info : Int*)
    fun shsein(side : Char*, eigsrc : Char*, initv : Char*, select : Int*, n : Int*, h : Float*, ldh : Int*, wr : Float*, wi : Float*, vl : Float*, ldvl : Int*, vr : Float*, ldvr : Int*, mm : Int*, m : Int*, work : Float*, ifaill : Int*, ifailr : Int*, info : Int*)
    fun shseqr(job : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, h : Float*, ldh : Int*, wr : Float*, wi : Float*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sisnan(sin__ : Float*) : Char
    fun sla_gbamv_(trans : Int*, m : Int*, n : Int*, kl : Int*, ku : Int*, alpha : Float*, ab : Float*, ldab : Int*, x : Float*, incx : Int*, beta : Float*, y : Float*, incy : Int*)
    fun sla_gbrcond_(trans : Char*, n : Int*, kl : Int*, ku : Int*, ab : Float*, ldab : Int*, afb : Float*, ldafb : Int*, ipiv : Int*, cmode : Int*, c__ : Float*, info : Int*, work : Float*, iwork : Int*, trans_len : Int) : Double
    fun sla_gbrfsx_extended_(prec_type__ : Int*, trans_type__ : Int*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : Float*, ldab : Int*, afb : Float*, ldafb : Int*, ipiv : Int*, colequ : Char*, c__ : Float*, b : Float*, ldb : Int*, y : Float*, ldy : Int*, berr_out__ : Float*, n_norms__ : Int*, errs_n__ : Float*, errs_c__ : Float*, res : Float*, ayb : Float*, dy : Float*, y_tail__ : Float*, rcond : Float*, ithresh : Int*, rthresh : Float*, dz_ub__ : Float*, ignore_cwise__ : Char*, info : Int*)
    fun sla_gbrpvgrw_(n : Int*, kl : Int*, ku : Int*, ncols : Int*, ab : Float*, ldab : Int*, afb : Float*, ldafb : Int*) : Double
    fun sla_geamv_(trans : Int*, m : Int*, n : Int*, alpha : Float*, a : Float*, lda : Int*, x : Float*, incx : Int*, beta : Float*, y : Float*, incy : Int*)
    fun sla_gercond_(trans : Char*, n : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, ipiv : Int*, cmode : Int*, c__ : Float*, info : Int*, work : Float*, iwork : Int*, trans_len : Int) : Double
    fun sla_gerfsx_extended_(prec_type__ : Int*, trans_type__ : Int*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, ipiv : Int*, colequ : Char*, c__ : Float*, b : Float*, ldb : Int*, y : Float*, ldy : Int*, berr_out__ : Float*, n_norms__ : Int*, errs_n__ : Float*, errs_c__ : Float*, res : Float*, ayb : Float*, dy : Float*, y_tail__ : Float*, rcond : Float*, ithresh : Int*, rthresh : Float*, dz_ub__ : Float*, ignore_cwise__ : Char*, info : Int*)
    fun sla_lin_berr_(n : Int*, nz : Int*, nrhs : Int*, res : Float*, ayb : Float*, berr : Float*)
    fun sla_porcond_(uplo : Char*, n : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, cmode : Int*, c__ : Float*, info : Int*, work : Float*, iwork : Int*, uplo_len : Int) : Double
    fun sla_porfsx_extended_(prec_type__ : Int*, uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, colequ : Char*, c__ : Float*, b : Float*, ldb : Int*, y : Float*, ldy : Int*, berr_out__ : Float*, n_norms__ : Int*, errs_n__ : Float*, errs_c__ : Float*, res : Float*, ayb : Float*, dy : Float*, y_tail__ : Float*, rcond : Float*, ithresh : Int*, rthresh : Float*, dz_ub__ : Float*, ignore_cwise__ : Char*, info : Int*, uplo_len : Int)
    fun sla_porpvgrw_(uplo : Char*, ncols : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, work : Float*, uplo_len : Int) : Double
    fun sla_rpvgrw_(n : Int*, ncols : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*) : Double
    fun sla_syamv_(uplo : Int*, n : Int*, alpha : Float*, a : Float*, lda : Int*, x : Float*, incx : Int*, beta : Float*, y : Float*, incy : Int*)
    fun sla_syrcond_(uplo : Char*, n : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, ipiv : Int*, cmode : Int*, c__ : Float*, info : Int*, work : Float*, iwork : Int*, uplo_len : Int) : Double
    fun sla_syrfsx_extended_(prec_type__ : Int*, uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, ipiv : Int*, colequ : Char*, c__ : Float*, b : Float*, ldb : Int*, y : Float*, ldy : Int*, berr_out__ : Float*, n_norms__ : Int*, errs_n__ : Float*, errs_c__ : Float*, res : Float*, ayb : Float*, dy : Float*, y_tail__ : Float*, rcond : Float*, ithresh : Int*, rthresh : Float*, dz_ub__ : Float*, ignore_cwise__ : Char*, info : Int*, uplo_len : Int)
    fun sla_syrpvgrw_(uplo : Char*, n : Int*, info : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, ipiv : Int*, work : Float*, uplo_len : Int) : Double
    fun sla_wwaddw_(n : Int*, x : Float*, y : Float*, w : Float*)
    fun slabad(small : Float*, large : Float*)
    fun slabrd(m : Int*, n : Int*, nb : Int*, a : Float*, lda : Int*, d__ : Float*, e : Float*, tauq : Float*, taup : Float*, x : Float*, ldx : Int*, y : Float*, ldy : Int*)
    fun slacn2(n : Int*, v : Float*, x : Float*, isgn : Int*, est : Float*, kase : Int*, isave : Int*)
    fun slacon(n : Int*, v : Float*, x : Float*, isgn : Int*, est : Float*, kase : Int*)
    fun slacpy(uplo : Char*, m : Int*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*)
    fun sladiv(a : Float*, b : Float*, c__ : Float*, d__ : Float*, p : Float*, q : Float*)
    fun slae2(a : Float*, b : Float*, c__ : Float*, rt1 : Float*, rt2 : Float*)
    fun slaebz(ijob : Int*, nitmax : Int*, n : Int*, mmax : Int*, minp : Int*, nbmin : Int*, abstol : Float*, reltol : Float*, pivmin : Float*, d__ : Float*, e : Float*, e2 : Float*, nval : Int*, ab : Float*, c__ : Float*, mout : Int*, nab : Int*, work : Float*, iwork : Int*, info : Int*)
    fun slaed0(icompq : Int*, qsiz : Int*, n : Int*, d__ : Float*, e : Float*, q : Float*, ldq : Int*, qstore : Float*, ldqs : Int*, work : Float*, iwork : Int*, info : Int*)
    fun slaed1(n : Int*, d__ : Float*, q : Float*, ldq : Int*, indxq : Int*, rho : Float*, cutpnt : Int*, work : Float*, iwork : Int*, info : Int*)
    fun slaed2(k : Int*, n : Int*, n1 : Int*, d__ : Float*, q : Float*, ldq : Int*, indxq : Int*, rho : Float*, z__ : Float*, dlamda : Float*, w : Float*, q2 : Float*, indx : Int*, indxc : Int*, indxp : Int*, coltyp : Int*, info : Int*)
    fun slaed3(k : Int*, n : Int*, n1 : Int*, d__ : Float*, q : Float*, ldq : Int*, rho : Float*, dlamda : Float*, q2 : Float*, indx : Int*, ctot : Int*, w : Float*, s : Float*, info : Int*)
    fun slaed4(n : Int*, i__ : Int*, d__ : Float*, z__ : Float*, delta : Float*, rho : Float*, dlam : Float*, info : Int*)
    fun slaed5(i__ : Int*, d__ : Float*, z__ : Float*, delta : Float*, rho : Float*, dlam : Float*)
    fun slaed6(kniter : Int*, orgati : Char*, rho : Float*, d__ : Float*, z__ : Float*, finit : Float*, tau : Float*, info : Int*)
    fun slaed7(icompq : Int*, n : Int*, qsiz : Int*, tlvls : Int*, curlvl : Int*, curpbm : Int*, d__ : Float*, q : Float*, ldq : Int*, indxq : Int*, rho : Float*, cutpnt : Int*, qstore : Float*, qptr : Int*, prmptr : Int*, perm : Int*, givptr : Int*, givcol : Int*, givnum : Float*, work : Float*, iwork : Int*, info : Int*)
    fun slaed8(icompq : Int*, k : Int*, n : Int*, qsiz : Int*, d__ : Float*, q : Float*, ldq : Int*, indxq : Int*, rho : Float*, cutpnt : Int*, z__ : Float*, dlamda : Float*, q2 : Float*, ldq2 : Int*, w : Float*, perm : Int*, givptr : Int*, givcol : Int*, givnum : Float*, indxp : Int*, indx : Int*, info : Int*)
    fun slaed9(k : Int*, kstart : Int*, kstop : Int*, n : Int*, d__ : Float*, q : Float*, ldq : Int*, rho : Float*, dlamda : Float*, w : Float*, s : Float*, lds : Int*, info : Int*)
    fun slaeda(n : Int*, tlvls : Int*, curlvl : Int*, curpbm : Int*, prmptr : Int*, perm : Int*, givptr : Int*, givcol : Int*, givnum : Float*, q : Float*, qptr : Int*, z__ : Float*, ztemp : Float*, info : Int*)
    fun slaein(rightv : Char*, noinit : Char*, n : Int*, h__ : Float*, ldh : Int*, wr : Float*, wi : Float*, vr : Float*, vi : Float*, b : Float*, ldb : Int*, work : Float*, eps3 : Float*, smlnum : Float*, bignum : Float*, info : Int*)
    fun slaev2(a : Float*, b : Float*, c__ : Float*, rt1 : Float*, rt2 : Float*, cs1 : Float*, sn1 : Float*)
    fun slaexc(wantq : Char*, n : Int*, t : Float*, ldt : Int*, q : Float*, ldq : Int*, j1 : Int*, n1 : Int*, n2 : Int*, work : Float*, info : Int*)
    fun slag2(a : Float*, lda : Int*, b : Float*, ldb : Int*, safmin : Float*, scale1 : Float*, scale2 : Float*, wr1 : Float*, wr2 : Float*, wi : Float*)
    fun slag2d(m : Int*, n : Int*, sa : Float*, ldsa : Int*, a : Double*, lda : Int*, info : Int*)
    fun slagge(m : Int*, n : Int*, kl : Int*, ku : Int*, d : Float*, a : Float*, lda : Int*, iseed : Int*, work : Float*, info : Int*)
    fun slags2(upper : Char*, a1 : Float*, a2 : Float*, a3 : Float*, b1 : Float*, b2 : Float*, b3 : Float*, csu : Float*, snu : Float*, csv : Float*, snv : Float*, csq : Float*, snq : Float*)
    fun slagsy(n : Int*, k : Int*, d : Float*, a : Float*, lda : Int*, iseed : Int*, work : Float*, info : Int*)
    fun slagtf(n : Int*, a : Float*, lambda : Float*, b : Float*, c__ : Float*, tol : Float*, d__ : Float*, in : Int*, info : Int*)
    fun slagtm(trans : Char*, n : Int*, nrhs : Int*, alpha : Float*, dl : Float*, d__ : Float*, du : Float*, x : Float*, ldx : Int*, beta : Float*, b : Float*, ldb : Int*)
    fun slagts(job : Int*, n : Int*, a : Float*, b : Float*, c__ : Float*, d__ : Float*, in : Int*, y : Float*, tol : Float*, info : Int*)
    fun slagv2(a : Float*, lda : Int*, b : Float*, ldb : Int*, alphar : Float*, alphai : Float*, beta : Float*, csl : Float*, snl : Float*, csr : Float*, snr : Float*)
    fun slahqr(wantt : Char*, wantz : Char*, n : Int*, ilo : Int*, ihi : Int*, h__ : Float*, ldh : Int*, wr : Float*, wi : Float*, iloz : Int*, ihiz : Int*, z__ : Float*, ldz : Int*, info : Int*)
    fun slahr2(n : Int*, k : Int*, nb : Int*, a : Float*, lda : Int*, tau : Float*, t : Float*, ldt : Int*, y : Float*, ldy : Int*)
    fun slahrd(n : Int*, k : Int*, nb : Int*, a : Float*, lda : Int*, tau : Float*, t : Float*, ldt : Int*, y : Float*, ldy : Int*)
    fun slaic1(job : Int*, j : Int*, x : Float*, sest : Float*, w : Float*, gamma : Float*, sestpr : Float*, s : Float*, c__ : Float*)
    fun slaisnan(sin1 : Float*, sin2 : Float*) : Char
    fun slaln2(ltrans : Char*, na : Int*, nw : Int*, smin : Float*, ca : Float*, a : Float*, lda : Int*, d1 : Float*, d2 : Float*, b : Float*, ldb : Int*, wr : Float*, wi : Float*, x : Float*, ldx : Int*, scale : Float*, xnorm : Float*, info : Int*)
    fun slals0(icompq : Int*, nl : Int*, nr : Int*, sqre : Int*, nrhs : Int*, b : Float*, ldb : Int*, bx : Float*, ldbx : Int*, perm : Int*, givptr : Int*, givcol : Int*, ldgcol : Int*, givnum : Float*, ldgnum : Int*, poles : Float*, difl : Float*, difr : Float*, z__ : Float*, k : Int*, c__ : Float*, s : Float*, work : Float*, info : Int*)
    fun slalsa(icompq : Int*, smlsiz : Int*, n : Int*, nrhs : Int*, b : Float*, ldb : Int*, bx : Float*, ldbx : Int*, u : Float*, ldu : Int*, vt : Float*, k : Int*, difl : Float*, difr : Float*, z__ : Float*, poles : Float*, givptr : Int*, givcol : Int*, ldgcol : Int*, perm : Int*, givnum : Float*, c__ : Float*, s : Float*, work : Float*, iwork : Int*, info : Int*)
    fun slalsd(uplo : Char*, smlsiz : Int*, n : Int*, nrhs : Int*, d__ : Float*, e : Float*, b : Float*, ldb : Int*, rcond : Float*, rank : Int*, work : Float*, iwork : Int*, info : Int*)
    fun slamc1(beta : Int*, t : Int*, rnd : Char*, ieee1 : Char*)
    fun slamc2(beta : Int*, t : Int*, rnd : Char*, eps : Float*, emin : Int*, rmin : Float*, emax : Int*, rmax : Float*)
    fun slamc3(a : Float*, b : Float*) : Double
    fun slamc4(emin : Int*, start : Float*, base : Int*)
    fun slamc5(beta : Int*, p : Int*, emin : Int*, ieee : Char*, emax : Int*, rmax : Float*)
    fun slamch(cmach : Char*) : FloatReturn
    fun slamrg(n1 : Int*, n2 : Int*, a : Float*, strd1 : Int*, strd2 : Int*, index : Int*)
    fun slaneg(n : Int*, d__ : Float*, lld : Float*, sigma : Float*, pivmin : Float*, r__ : Int*) : Int
    fun slangb(norm : Char*, n : Int*, kl : Int*, ku : Int*, ab : Float*, ldab : Int*, work : Float*) : FloatReturn
    fun slange(norm : Char*, m : Int*, n : Int*, a : Float*, lda : Int*, work : Float*) : FloatReturn
    fun slangt(norm : Char*, n : Int*, dl : Float*, d : Float*, du : Float*) : FloatReturn
    fun slanhs(norm : Char*, n : Int*, a : Float*, lda : Int*, work : Float*) : FloatReturn
    fun slansb(norm : Char*, uplo : Char*, n : Int*, k : Int*, ab : Float*, ldab : Int*, work : Float*) : FloatReturn
    fun slansf(norm : Char*, transr : Char*, uplo : Char*, n : Int*, a : Float*, work : Float*) : FloatReturn
    fun slansp(norm : Char*, uplo : Char*, n : Int*, ap : Float*, work : Float*) : FloatReturn
    fun slanst(norm : Char*, n : Int*, d : Float*, e : Float*) : FloatReturn
    fun slansy(norm : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, work : Float*) : FloatReturn
    fun slantb(norm : Char*, uplo : Char*, diag : Char*, n : Int*, k : Int*, ab : Float*, ldab : Int*, work : Float*) : FloatReturn
    fun slantp(norm : Char*, uplo : Char*, diag : Char*, n : Int*, ap : Float*, work : Float*) : FloatReturn
    fun slantr(norm : Char*, uplo : Char*, diag : Char*, m : Int*, n : Int*, a : Float*, lda : Int*, work : Float*) : FloatReturn
    fun slanv2(a : Float*, b : Float*, c__ : Float*, d__ : Float*, rt1r : Float*, rt1i : Float*, rt2r : Float*, rt2i : Float*, cs : Float*, sn : Float*)
    fun slapll(n : Int*, x : Float*, incx : Int*, y : Float*, incy : Int*, ssmin : Float*)
    fun slapmr(forwrd : Int*, m : Int*, n : Int*, x : Float*, ldx : Int*, k : Int*)
    fun slapmt(forwrd : Int*, m : Int*, n : Int*, x : Float*, ldx : Int*, k : Int*)
    fun slapy2(x : Float*, y : Float*) : FloatReturn
    fun slapy3(x : Float*, y : Float*, z : Float*) : FloatReturn
    fun slaqgb(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : Float*, ldab : Int*, r__ : Float*, c__ : Float*, rowcnd : Float*, colcnd : Float*, amax : Float*, equed : Char*)
    fun slaqge(m : Int*, n : Int*, a : Float*, lda : Int*, r__ : Float*, c__ : Float*, rowcnd : Float*, colcnd : Float*, amax : Float*, equed : Char*)
    fun slaqp2(m : Int*, n : Int*, offset : Int*, a : Float*, lda : Int*, jpvt : Int*, tau : Float*, vn1 : Float*, vn2 : Float*, work : Float*)
    fun slaqps(m : Int*, n : Int*, offset : Int*, nb : Int*, kb : Int*, a : Float*, lda : Int*, jpvt : Int*, tau : Float*, vn1 : Float*, vn2 : Float*, auxv : Float*, f : Float*, ldf : Int*)
    fun slaqr0(wantt : Char*, wantz : Char*, n : Int*, ilo : Int*, ihi : Int*, h__ : Float*, ldh : Int*, wr : Float*, wi : Float*, iloz : Int*, ihiz : Int*, z__ : Float*, ldz : Int*, work : Float*, lwork : Int*, info : Int*)
    fun slaqr1(n : Int*, h__ : Float*, ldh : Int*, sr1 : Float*, si1 : Float*, sr2 : Float*, si2 : Float*, v : Float*)
    fun slaqr2(wantt : Char*, wantz : Char*, n : Int*, ktop : Int*, kbot : Int*, nw : Int*, h__ : Float*, ldh : Int*, iloz : Int*, ihiz : Int*, z__ : Float*, ldz : Int*, ns : Int*, nd : Int*, sr : Float*, si : Float*, v : Float*, ldv : Int*, nh : Int*, t : Float*, ldt : Int*, nv : Int*, wv : Float*, ldwv : Int*, work : Float*, lwork : Int*)
    fun slaqr3(wantt : Char*, wantz : Char*, n : Int*, ktop : Int*, kbot : Int*, nw : Int*, h__ : Float*, ldh : Int*, iloz : Int*, ihiz : Int*, z__ : Float*, ldz : Int*, ns : Int*, nd : Int*, sr : Float*, si : Float*, v : Float*, ldv : Int*, nh : Int*, t : Float*, ldt : Int*, nv : Int*, wv : Float*, ldwv : Int*, work : Float*, lwork : Int*)
    fun slaqr4(wantt : Char*, wantz : Char*, n : Int*, ilo : Int*, ihi : Int*, h__ : Float*, ldh : Int*, wr : Float*, wi : Float*, iloz : Int*, ihiz : Int*, z__ : Float*, ldz : Int*, work : Float*, lwork : Int*, info : Int*)
    fun slaqr5(wantt : Char*, wantz : Char*, kacc22 : Int*, n : Int*, ktop : Int*, kbot : Int*, nshfts : Int*, sr : Float*, si : Float*, h__ : Float*, ldh : Int*, iloz : Int*, ihiz : Int*, z__ : Float*, ldz : Int*, v : Float*, ldv : Int*, u : Float*, ldu : Int*, nv : Int*, wv : Float*, ldwv : Int*, nh : Int*, wh : Float*, ldwh : Int*)
    fun slaqsb(uplo : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, s : Float*, scond : Float*, amax : Float*, equed : Char*)
    fun slaqsp(uplo : Char*, n : Int*, ap : Float*, s : Float*, scond : Float*, amax : Float*, equed : Char*)
    fun slaqsy(uplo : Char*, n : Int*, a : Float*, lda : Int*, s : Float*, scond : Float*, amax : Float*, equed : Char*)
    fun slaqtr(ltran : Char*, lreal : Char*, n : Int*, t : Float*, ldt : Int*, b : Float*, w : Float*, scale : Float*, x : Float*, work : Float*, info : Int*)
    fun slar1v(n : Int*, b1 : Int*, bn : Int*, lambda : Float*, d__ : Float*, l : Float*, ld : Float*, lld : Float*, pivmin : Float*, gaptol : Float*, z__ : Float*, wantnc : Char*, negcnt : Int*, ztz : Float*, mingma : Float*, r__ : Int*, isuppz : Int*, nrminv : Float*, resid : Float*, rqcorr : Float*, work : Float*)
    fun slar2v(n : Int*, x : Float*, y : Float*, z__ : Float*, incx : Int*, c__ : Float*, s : Float*, incc : Int*)
    fun slarf(side : Char*, m : Int*, n : Int*, v : Float*, incv : Int*, tau : Float*, c : Float*, ldc : Int*, work : Float*)
    fun slarfb(side : Char*, trans : Char*, direct : Char*, storev : Char*, m : Int*, n : Int*, k : Int*, v : Float*, ldv : Int*, t : Float*, ldt : Int*, c : Float*, ldc : Int*, work : Float*, ldwork : Int*)
    fun slarfg(n : Int*, alpha : Float*, x : Float*, incx : Int*, tau : Float*)
    fun slarfp(n : Int*, alpha : Float*, x : Float*, incx : Int*, tau : Float*)
    fun slarft(direct : Char*, storev : Char*, n : Int*, k : Int*, v : Float*, ldv : Int*, tau : Float*, t : Float*, ldt : Int*)
    fun slarfx(side : Char*, m : Int*, n : Int*, v : Float*, tau : Float*, c : Float*, ldc : Int*, work : Float*)
    fun slargv(n : Int*, x : Float*, incx : Int*, y : Float*, incy : Int*, c__ : Float*, incc : Int*)
    fun slarnv(idist : Int*, iseed : Int*, n : Int*, x : Float*)
    fun slarra(n : Int*, d__ : Float*, e : Float*, e2 : Float*, spltol : Float*, tnrm : Float*, nsplit : Int*, isplit : Int*, info : Int*)
    fun slarrb(n : Int*, d__ : Float*, lld : Float*, ifirst : Int*, ilast : Int*, rtol1 : Float*, rtol2 : Float*, offset : Int*, w : Float*, wgap : Float*, werr : Float*, work : Float*, iwork : Int*, pivmin : Float*, spdiam : Float*, twist : Int*, info : Int*)
    fun slarrc(jobt : Char*, n : Int*, vl : Float*, vu : Float*, d__ : Float*, e : Float*, pivmin : Float*, eigcnt : Int*, lcnt : Int*, rcnt : Int*, info : Int*)
    fun slarrd(range : Char*, order : Char*, n : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, gers : Float*, reltol : Float*, d__ : Float*, e : Float*, e2 : Float*, pivmin : Float*, nsplit : Int*, isplit : Int*, m : Int*, w : Float*, werr : Float*, wl : Float*, wu : Float*, iblock : Int*, indexw : Int*, work : Float*, iwork : Int*, info : Int*)
    fun slarre(range : Char*, n : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, d__ : Float*, e : Float*, e2 : Float*, rtol1 : Float*, rtol2 : Float*, spltol : Float*, nsplit : Int*, isplit : Int*, m : Int*, w : Float*, werr : Float*, wgap : Float*, iblock : Int*, indexw : Int*, gers : Float*, pivmin : Float*, work : Float*, iwork : Int*, info : Int*)
    fun slarrf(n : Int*, d__ : Float*, l : Float*, ld : Float*, clstrt : Int*, clend : Int*, w : Float*, wgap : Float*, werr : Float*, spdiam : Float*, clgapl : Float*, clgapr : Float*, pivmin : Float*, sigma : Float*, dplus : Float*, lplus : Float*, work : Float*, info : Int*)
    fun slarrj(n : Int*, d__ : Float*, e2 : Float*, ifirst : Int*, ilast : Int*, rtol : Float*, offset : Int*, w : Float*, werr : Float*, work : Float*, iwork : Int*, pivmin : Float*, spdiam : Float*, info : Int*)
    fun slarrk(n : Int*, iw : Int*, gl : Float*, gu : Float*, d__ : Float*, e2 : Float*, pivmin : Float*, reltol : Float*, w : Float*, werr : Float*, info : Int*)
    fun slarrr(n : Int*, d__ : Float*, e : Float*, info : Int*)
    fun slarrv(n : Int*, vl : Float*, vu : Float*, d__ : Float*, l : Float*, pivmin : Float*, isplit : Int*, m : Int*, dol : Int*, dou : Int*, minrgp : Float*, rtol1 : Float*, rtol2 : Float*, w : Float*, werr : Float*, wgap : Float*, iblock : Int*, indexw : Int*, gers : Float*, z__ : Float*, ldz : Int*, isuppz : Int*, work : Float*, iwork : Int*, info : Int*)
    fun slarscl2(m : Int*, n : Int*, d__ : Float*, x : Float*, ldx : Int*)
    fun slartg(f : Float*, g : Float*, cs : Float*, sn : Float*, r__ : Float*)
    fun slartgp(f : Float*, g : Float*, cs : Float*, sn : Float*, r : Float*)
    fun slartgs(x : Float*, y : Float*, sigma : Float*, cs : Float*, sn : Float*)
    fun slartv(n : Int*, x : Float*, incx : Int*, y : Float*, incy : Int*, c__ : Float*, s : Float*, incc : Int*)
    fun slaruv(iseed : Int*, n : Int*, x : Float*)
    fun slarz(side : Char*, m : Int*, n : Int*, l : Int*, v : Float*, incv : Int*, tau : Float*, c__ : Float*, ldc : Int*, work : Float*)
    fun slarzb(side : Char*, trans : Char*, direct : Char*, storev : Char*, m : Int*, n : Int*, k : Int*, l : Int*, v : Float*, ldv : Int*, t : Float*, ldt : Int*, c__ : Float*, ldc : Int*, work : Float*, ldwork : Int*)
    fun slarzt(direct : Char*, storev : Char*, n : Int*, k : Int*, v : Float*, ldv : Int*, tau : Float*, t : Float*, ldt : Int*)
    fun slas2(f : Float*, g : Float*, h__ : Float*, ssmin : Float*, ssmax : Float*)
    fun slascl(type : Char*, kl : Int*, ku : Int*, cfrom : Float*, cto : Float*, m : Int*, n : Int*, a : Float*, lda : Int*, info : Int*)
    fun slascl2(m : Int*, n : Int*, d__ : Float*, x : Float*, ldx : Int*)
    fun slasd0(n : Int*, sqre : Int*, d__ : Float*, e : Float*, u : Float*, ldu : Int*, vt : Float*, ldvt : Int*, smlsiz : Int*, iwork : Int*, work : Float*, info : Int*)
    fun slasd1(nl : Int*, nr : Int*, sqre : Int*, d__ : Float*, alpha : Float*, beta : Float*, u : Float*, ldu : Int*, vt : Float*, ldvt : Int*, idxq : Int*, iwork : Int*, work : Float*, info : Int*)
    fun slasd2(nl : Int*, nr : Int*, sqre : Int*, k : Int*, d__ : Float*, z__ : Float*, alpha : Float*, beta : Float*, u : Float*, ldu : Int*, vt : Float*, ldvt : Int*, dsigma : Float*, u2 : Float*, ldu2 : Int*, vt2 : Float*, ldvt2 : Int*, idxp : Int*, idx : Int*, idxc : Int*, idxq : Int*, coltyp : Int*, info : Int*)
    fun slasd3(nl : Int*, nr : Int*, sqre : Int*, k : Int*, d__ : Float*, q : Float*, ldq : Int*, dsigma : Float*, u : Float*, ldu : Int*, u2 : Float*, ldu2 : Int*, vt : Float*, ldvt : Int*, vt2 : Float*, ldvt2 : Int*, idxc : Int*, ctot : Int*, z__ : Float*, info : Int*)
    fun slasd4(n : Int*, i__ : Int*, d__ : Float*, z__ : Float*, delta : Float*, rho : Float*, sigma : Float*, work : Float*, info : Int*)
    fun slasd5(i__ : Int*, d__ : Float*, z__ : Float*, delta : Float*, rho : Float*, dsigma : Float*, work : Float*)
    fun slasd6(icompq : Int*, nl : Int*, nr : Int*, sqre : Int*, d__ : Float*, vf : Float*, vl : Float*, alpha : Float*, beta : Float*, idxq : Int*, perm : Int*, givptr : Int*, givcol : Int*, ldgcol : Int*, givnum : Float*, ldgnum : Int*, poles : Float*, difl : Float*, difr : Float*, z__ : Float*, k : Int*, c__ : Float*, s : Float*, work : Float*, iwork : Int*, info : Int*)
    fun slasd7(icompq : Int*, nl : Int*, nr : Int*, sqre : Int*, k : Int*, d__ : Float*, z__ : Float*, zw : Float*, vf : Float*, vfw : Float*, vl : Float*, vlw : Float*, alpha : Float*, beta : Float*, dsigma : Float*, idx : Int*, idxp : Int*, idxq : Int*, perm : Int*, givptr : Int*, givcol : Int*, ldgcol : Int*, givnum : Float*, ldgnum : Int*, c__ : Float*, s : Float*, info : Int*)
    fun slasd8(icompq : Int*, k : Int*, d__ : Float*, z__ : Float*, vf : Float*, vl : Float*, difl : Float*, difr : Float*, lddifr : Int*, dsigma : Float*, work : Float*, info : Int*)
    fun slasda(icompq : Int*, smlsiz : Int*, n : Int*, sqre : Int*, d__ : Float*, e : Float*, u : Float*, ldu : Int*, vt : Float*, k : Int*, difl : Float*, difr : Float*, z__ : Float*, poles : Float*, givptr : Int*, givcol : Int*, ldgcol : Int*, perm : Int*, givnum : Float*, c__ : Float*, s : Float*, work : Float*, iwork : Int*, info : Int*)
    fun slasdq(uplo : Char*, sqre : Int*, n : Int*, ncvt : Int*, nru : Int*, ncc : Int*, d__ : Float*, e : Float*, vt : Float*, ldvt : Int*, u : Float*, ldu : Int*, c__ : Float*, ldc : Int*, work : Float*, info : Int*)
    fun slasdt(n : Int*, lvl : Int*, nd : Int*, inode : Int*, ndiml : Int*, ndimr : Int*, msub : Int*)
    fun slaset(uplo : Char*, m : Int*, n : Int*, alpha : Float*, beta : Float*, a : Float*, lda : Int*)
    fun slasq1(n : Int*, d__ : Float*, e : Float*, work : Float*, info : Int*)
    fun slasq2(n : Int*, z__ : Float*, info : Int*)
    fun slasq3(i0 : Int*, n0 : Int*, z__ : Float*, pp : Int*, dmin__ : Float*, sigma : Float*, desig : Float*, qmax : Float*, nfail : Int*, iter : Int*, ndiv : Int*, ieee : Char*, ttype : Int*, dmin1 : Float*, dmin2 : Float*, dn : Float*, dn1 : Float*, dn2 : Float*, g : Float*, tau : Float*)
    fun slasq4(i0 : Int*, n0 : Int*, z__ : Float*, pp : Int*, n0in : Int*, dmin__ : Float*, dmin1 : Float*, dmin2 : Float*, dn : Float*, dn1 : Float*, dn2 : Float*, tau : Float*, ttype : Int*, g : Float*)
    fun slasq5(i0 : Int*, n0 : Int*, z__ : Float*, pp : Int*, tau : Float*, dmin__ : Float*, dmin1 : Float*, dmin2 : Float*, dn : Float*, dnm1 : Float*, dnm2 : Float*, ieee : Char*)
    fun slasq6(i0 : Int*, n0 : Int*, z__ : Float*, pp : Int*, dmin__ : Float*, dmin1 : Float*, dmin2 : Float*, dn : Float*, dnm1 : Float*, dnm2 : Float*)
    fun slasr(side : Char*, pivot : Char*, direct : Char*, m : Int*, n : Int*, c__ : Float*, s : Float*, a : Float*, lda : Int*)
    fun slasrt(id : Char*, n : Int*, d : Float*, info : Int*)
    fun slassq(n : Int*, x : Float*, incx : Int*, scale : Float*, sumsq : Float*)
    fun slasv2(f : Float*, g : Float*, h__ : Float*, ssmin : Float*, ssmax : Float*, snr : Float*, csr : Float*, snl : Float*, csl : Float*)
    fun slaswp(n : Int*, a : Float*, lda : Int*, k1 : Int*, k2 : Int*, ipiv : Int*, incx : Int*)
    fun slasy2(ltranl : Char*, ltranr : Char*, isgn : Int*, n1 : Int*, n2 : Int*, tl : Float*, ldtl : Int*, tr : Float*, ldtr : Int*, b : Float*, ldb : Int*, scale : Float*, x : Float*, ldx : Int*, xnorm : Float*, info : Int*)
    fun slasyf(uplo : Char*, n : Int*, nb : Int*, kb : Int*, a : Float*, lda : Int*, ipiv : Int*, w : Float*, ldw : Int*, info : Int*)
    fun slatbs(uplo : Char*, trans : Char*, diag : Char*, normin : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, x : Float*, scale : Float*, cnorm : Float*, info : Int*)
    fun slatdf(ijob : Int*, n : Int*, z__ : Float*, ldz : Int*, rhs : Float*, rdsum : Float*, rdscal : Float*, ipiv : Int*, jpiv : Int*)
    fun slatms(m : Int*, n : Int*, dist : Char*, iseed : Int*, sym : Char*, d : Float*, mode : Int*, cond : Float*, dmax : Float*, kl : Int*, ku : Int*, pack : Char*, a : Float*, lda : Int*, work : Float*, info : Int*)
    fun slatps(uplo : Char*, trans : Char*, diag : Char*, normin : Char*, n : Int*, ap : Float*, x : Float*, scale : Float*, cnorm : Float*, info : Int*)
    fun slatrd(uplo : Char*, n : Int*, nb : Int*, a : Float*, lda : Int*, e : Float*, tau : Float*, w : Float*, ldw : Int*)
    fun slatrs(uplo : Char*, trans : Char*, diag : Char*, normin : Char*, n : Int*, a : Float*, lda : Int*, x : Float*, scale : Float*, cnorm : Float*, info : Int*)
    fun slatrz(m : Int*, n : Int*, l : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*)
    fun slatzm(side : Char*, m : Int*, n : Int*, v : Float*, incv : Int*, tau : Float*, c1 : Float*, c2 : Float*, ldc : Int*, work : Float*)
    fun slauu2(uplo : Char*, n : Int*, a : Float*, lda : Int*, info : Int*)
    fun slauum(uplo : Char*, n : Int*, a : Float*, lda : Int*, info : Int*)
    fun smaxloc(a : Float*, dimm : Int*) : Int
    fun sopgtr(uplo : Char*, n : Int*, ap : Float*, tau : Float*, q : Float*, ldq : Int*, work : Float*, info : Int*)
    fun sopmtr(side : Char*, uplo : Char*, trans : Char*, m : Int*, n : Int*, ap : Float*, tau : Float*, c : Float*, ldc : Int*, work : Float*, info : Int*)
    fun sorbdb(trans : Char*, signs : Char*, m : Int*, p : Int*, q : Int*, x11 : Float*, ldx11 : Int*, x12 : Float*, ldx12 : Int*, x21 : Float*, ldx21 : Int*, x22 : Float*, ldx22 : Int*, theta : Float*, phi : Float*, taup1 : Float*, taup2 : Float*, tauq1 : Float*, tauq2 : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sorcsd(jobu1 : Char*, jobu2 : Char*, jobv1t : Char*, jobv2t : Char*, trans : Char*, signs : Char*, m : Int*, p : Int*, q : Int*, x11 : Float*, ldx11 : Int*, x12 : Float*, ldx12 : Int*, x21 : Float*, ldx21 : Int*, x22 : Float*, ldx22 : Int*, theta : Float*, u1 : Float*, ldu1 : Int*, u2 : Float*, ldu2 : Int*, v1_t : Float*, ldv1t : Int*, v2_t : Float*, ldv2t : Int*, work : Float*, lwork : Int*, iwork : Int*, info : Int*)
    fun sorcsd2by1(jobu1 : Char*, jobu2 : Char*, jobv1t : Char*, m : Int*, p : Int*, q : Int*, x11 : Float*, ldx11 : Int*, x21 : Float*, ldx21 : Int*, theta : Float*, u1 : Float*, ldu1 : Int*, u2 : Float*, ldu2 : Int*, v1_t : Float*, ldv1t : Int*, work : Float*, lwork : Int*, iwork : Int*, info : Int*)
    fun sorg2l(m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, info : Int*)
    fun sorg2r(m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, info : Int*)
    fun sorgbr(vect : Char*, m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sorghr(n : Int*, ilo : Int*, ihi : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sorgl2(m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, info : Int*)
    fun sorglq(m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sorgql(m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sorgqr(m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sorgr2(m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, info : Int*)
    fun sorgrq(m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sorgtr(uplo : Char*, n : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun sorgtsqr_row(m : Int*, n : Int*, mb : Int*, nb : Int*, a : Float*, lda : Int*, t : Float*, ldt : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sorm2l(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, c__ : Float*, ldc : Int*, work : Float*, info : Int*)
    fun sorm2r(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, c__ : Float*, ldc : Int*, work : Float*, info : Int*)
    fun sormbr(vect : Char*, side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, c : Float*, ldc : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sormhr(side : Char*, trans : Char*, m : Int*, n : Int*, ilo : Int*, ihi : Int*, a : Float*, lda : Int*, tau : Float*, c : Float*, ldc : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sorml2(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, c__ : Float*, ldc : Int*, work : Float*, info : Int*)
    fun sormlq(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, c : Float*, ldc : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sormql(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, c : Float*, ldc : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sormqr(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, c : Float*, ldc : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sormr2(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, c__ : Float*, ldc : Int*, work : Float*, info : Int*)
    fun sormr3(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, a : Float*, lda : Int*, tau : Float*, c__ : Float*, ldc : Int*, work : Float*, info : Int*)
    fun sormrq(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : Float*, lda : Int*, tau : Float*, c : Float*, ldc : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sormrz(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, a : Float*, lda : Int*, tau : Float*, c : Float*, ldc : Int*, work : Float*, lwork : Int*, info : Int*)
    fun sormtr(side : Char*, uplo : Char*, trans : Char*, m : Int*, n : Int*, a : Float*, lda : Int*, tau : Float*, c : Float*, ldc : Int*, work : Float*, lwork : Int*, info : Int*)
    fun spbcon(uplo : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, anorm : Float*, rcond : Float*, work : Float*, iwork : Int*, info : Int*)
    fun spbequ(uplo : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, s : Float*, scond : Float*, amax : Float*, info : Int*)
    fun spbrfs(uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : Float*, ldab : Int*, afb : Float*, ldafb : Int*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun spbstf(uplo : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, info : Int*)
    fun spbsv(uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : Float*, ldab : Int*, b : Float*, ldb : Int*, info : Int*)
    fun spbsvx(fact : Char*, uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : Float*, ldab : Int*, afb : Float*, ldafb : Int*, equed : Char*, s : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun spbtf2(uplo : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, info : Int*)
    fun spbtrf(uplo : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, info : Int*)
    fun spbtrs(uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : Float*, ldab : Int*, b : Float*, ldb : Int*, info : Int*)
    fun spftrf(transr : Char*, uplo : Char*, n : Int*, a : Float*, info : Int*)
    fun spftri(transr : Char*, uplo : Char*, n : Int*, a : Float*, info : Int*)
    fun spftrs(transr : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : Float*, b : Float*, ldb : Int*, info : Int*)
    fun spocon(uplo : Char*, n : Int*, a : Float*, lda : Int*, anorm : Float*, rcond : Float*, work : Float*, iwork : Int*, info : Int*)
    fun spoequ(n : Int*, a : Float*, lda : Int*, s : Float*, scond : Float*, amax : Float*, info : Int*)
    fun spoequb(n : Int*, a : Float*, lda : Int*, s : Float*, scond : Float*, amax : Float*, info : Int*)
    fun sporfs(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sporfsx(uplo : Char*, equed : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, s : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sposv(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, info : Int*)
    fun sposvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, equed : Char*, s : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sposvxx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, equed : Char*, s : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, rpvgrw : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : Float*, iwork : Int*, info : Int*)
    fun spotf2(uplo : Char*, n : Int*, a : Float*, lda : Int*, info : Int*)
    fun spotrf(uplo : Char*, n : Int*, a : Float*, lda : Int*, info : Int*)
    fun spotrf2(uplo : Char*, n : Int*, a : Float*, lda : Int*, info : Int*)
    fun spotri(uplo : Char*, n : Int*, a : Float*, lda : Int*, info : Int*)
    fun spotrs(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, info : Int*)
    fun sppcon(uplo : Char*, n : Int*, ap : Float*, anorm : Float*, rcond : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sppequ(uplo : Char*, n : Int*, ap : Float*, s : Float*, scond : Float*, amax : Float*, info : Int*)
    fun spprfs(uplo : Char*, n : Int*, nrhs : Int*, ap : Float*, afp : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sppsv(uplo : Char*, n : Int*, nrhs : Int*, ap : Float*, b : Float*, ldb : Int*, info : Int*)
    fun sppsvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, ap : Float*, afp : Float*, equed : Char*, s : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun spptrf(uplo : Char*, n : Int*, ap : Float*, info : Int*)
    fun spptri(uplo : Char*, n : Int*, ap : Float*, info : Int*)
    fun spptrs(uplo : Char*, n : Int*, nrhs : Int*, ap : Float*, b : Float*, ldb : Int*, info : Int*)
    fun spstf2(uplo : Char*, n : Int*, a : Float*, lda : Int*, piv : Int*, rank : Int*, tol : Float*, work : Float*, info : Int*)
    fun spstrf(uplo : Char*, n : Int*, a : Float*, lda : Int*, piv : Int*, rank : Int*, tol : Float*, work : Float*, info : Int*)
    fun sptcon(n : Int*, d : Float*, e : Float*, anorm : Float*, rcond : Float*, work : Float*, info : Int*)
    fun spteqr(compz : Char*, n : Int*, d : Float*, e : Float*, z : Float*, ldz : Int*, work : Float*, info : Int*)
    fun sptrfs(n : Int*, nrhs : Int*, d : Float*, e : Float*, df : Float*, ef : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, ferr : Float*, berr : Float*, work : Float*, info : Int*)
    fun sptsv(n : Int*, nrhs : Int*, d : Float*, e : Float*, b : Float*, ldb : Int*, info : Int*)
    fun sptsvx(fact : Char*, n : Int*, nrhs : Int*, d : Float*, e : Float*, df : Float*, ef : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : Float*, info : Int*)
    fun spttrf(n : Int*, d : Float*, e : Float*, info : Int*)
    fun spttrs(n : Int*, nrhs : Int*, d : Float*, e : Float*, b : Float*, ldb : Int*, info : Int*)
    fun sptts2(n : Int*, nrhs : Int*, d__ : Float*, e : Float*, b : Float*, ldb : Int*)
    fun srscl(n : Int*, sa : Float*, sx : Float*, incx : Int*)
    fun ssbev(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, info : Int*)
    fun ssbev_2stage(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssbevd(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun ssbevd_2stage(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun ssbevx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, q : Float*, ldq : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun ssbevx_2stage(jobz : Char*, range : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, q : Float*, ldq : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, iwork : Int*, ifail : Int*, info : Int*)
    fun ssbgst(vect : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : Float*, ldab : Int*, bb : Float*, ldbb : Int*, x : Float*, ldx : Int*, work : Float*, info : Int*)
    fun ssbgv(jobz : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : Float*, ldab : Int*, bb : Float*, ldbb : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, info : Int*)
    fun ssbgvd(jobz : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : Float*, ldab : Int*, bb : Float*, ldbb : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun ssbgvx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : Float*, ldab : Int*, bb : Float*, ldbb : Int*, q : Float*, ldq : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun ssbtrd(vect : Char*, uplo : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, d : Float*, e : Float*, q : Float*, ldq : Int*, work : Float*, info : Int*)
    fun ssfrk(transr : Char*, uplo : Char*, trans : Char*, n : Int*, k : Int*, alpha : Float*, a : Float*, lda : Int*, beta : Float*, c : Float*)
    fun sspcon(uplo : Char*, n : Int*, ap : Float*, ipiv : Int*, anorm : Float*, rcond : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sspev(jobz : Char*, uplo : Char*, n : Int*, ap : Float*, w : Float*, z : Float*, ldz : Int*, work : Float*, info : Int*)
    fun sspevd(jobz : Char*, uplo : Char*, n : Int*, ap : Float*, w : Float*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun sspevx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, ap : Float*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun sspgst(itype : Int*, uplo : Char*, n : Int*, ap : Float*, bp : Float*, info : Int*)
    fun sspgv(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, ap : Float*, bp : Float*, w : Float*, z : Float*, ldz : Int*, work : Float*, info : Int*)
    fun sspgvd(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, ap : Float*, bp : Float*, w : Float*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun sspgvx(itype : Int*, jobz : Char*, range : Char*, uplo : Char*, n : Int*, ap : Float*, bp : Float*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun ssprfs(uplo : Char*, n : Int*, nrhs : Int*, ap : Float*, afp : Float*, ipiv : Int*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun sspsv(uplo : Char*, n : Int*, nrhs : Int*, ap : Float*, ipiv : Int*, b : Float*, ldb : Int*, info : Int*)
    fun sspsvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, ap : Float*, afp : Float*, ipiv : Int*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun ssptrd(uplo : Char*, n : Int*, ap : Float*, d : Float*, e : Float*, tau : Float*, info : Int*)
    fun ssptrf(uplo : Char*, n : Int*, ap : Float*, ipiv : Int*, info : Int*)
    fun ssptri(uplo : Char*, n : Int*, ap : Float*, ipiv : Int*, work : Float*, info : Int*)
    fun ssptrs(uplo : Char*, n : Int*, nrhs : Int*, ap : Float*, ipiv : Int*, b : Float*, ldb : Int*, info : Int*)
    fun sstebz(range : Char*, order : Char*, n : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, d : Float*, e : Float*, m : Int*, nsplit : Int*, w : Float*, iblock : Int*, isplit : Int*, work : Float*, iwork : Int*, info : Int*)
    fun sstedc(compz : Char*, n : Int*, d : Float*, e : Float*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun sstegr(jobz : Char*, range : Char*, n : Int*, d : Float*, e : Float*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : Float*, ldz : Int*, isuppz : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun sstein(n : Int*, d : Float*, e : Float*, m : Int*, w : Float*, iblock : Int*, isplit : Int*, z : Float*, ldz : Int*, work : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun sstemr(jobz : Char*, range : Char*, n : Int*, d : Float*, e : Float*, vl : Float*, vu : Float*, il : Int*, iu : Int*, m : Int*, w : Float*, z : Float*, ldz : Int*, nzc : Int*, isuppz : Int*, tryrac : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun ssteqr(compz : Char*, n : Int*, d : Float*, e : Float*, z : Float*, ldz : Int*, work : Float*, info : Int*)
    fun ssterf(n : Int*, d : Float*, e : Float*, info : Int*)
    fun sstev(jobz : Char*, n : Int*, d : Float*, e : Float*, z : Float*, ldz : Int*, work : Float*, info : Int*)
    fun sstevd(jobz : Char*, n : Int*, d : Float*, e : Float*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun sstevr(jobz : Char*, range : Char*, n : Int*, d : Float*, e : Float*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : Float*, ldz : Int*, isuppz : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun sstevx(jobz : Char*, range : Char*, n : Int*, d : Float*, e : Float*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, iwork : Int*, ifail : Int*, info : Int*)
    fun ssycon(uplo : Char*, n : Int*, a : Float*, lda : Int*, ipiv : Int*, anorm : Float*, rcond : Float*, work : Float*, iwork : Int*, info : Int*)
    fun ssycon_3(uplo : Char*, n : Int*, a : Float*, lda : Int*, e : Float*, ipiv : Int*, anorm : Float*, rcond : Float*, work : Float*, iwork : Int*, info : Int*)
    fun ssyconv(uplo : Char*, way : Char*, n : Int*, a : Float*, lda : Int*, ipiv : Int*, e : Float*, info : Int*)
    fun ssyequb(uplo : Char*, n : Int*, a : Float*, lda : Int*, s : Float*, scond : Float*, amax : Float*, work : Float*, info : Int*)
    fun ssyev(jobz : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, w : Float*, work : Float*, lwork : Int*, info : Int*)
    fun ssyev_2stage(jobz : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, w : Float*, work : Float*, lwork : Int*, info : Int*)
    fun ssyevd(jobz : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, w : Float*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun ssyevd_2stage(jobz : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, w : Float*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun ssyevr(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : Float*, ldz : Int*, isuppz : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun ssyevr_2stage(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : Float*, ldz : Int*, isuppz : Int*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun ssyevx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, iwork : Int*, ifail : Int*, info : Int*)
    fun ssyevx_2stage(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, iwork : Int*, ifail : Int*, info : Int*)
    fun ssygs2(itype : Int*, uplo : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, info : Int*)
    fun ssygst(itype : Int*, uplo : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, info : Int*)
    fun ssygv(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, w : Float*, work : Float*, lwork : Int*, info : Int*)
    fun ssygv_2stage(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, w : Float*, work : Float*, lwork : Int*, info : Int*)
    fun ssygvd(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, w : Float*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun ssygvx(itype : Int*, jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, vl : Float*, vu : Float*, il : Int*, iu : Int*, abstol : Float*, m : Int*, w : Float*, z : Float*, ldz : Int*, work : Float*, lwork : Int*, iwork : Int*, ifail : Int*, info : Int*)
    fun ssyrfs(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, ipiv : Int*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun ssyrfsx(uplo : Char*, equed : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, ipiv : Int*, s : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : Float*, iwork : Int*, info : Int*)
    fun ssysv(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, ipiv : Int*, b : Float*, ldb : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssysv_aa(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, ipiv : Int*, b : Float*, ldb : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssysv_aa_2stage(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, tb : Float*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, b : Float*, ldb : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssysv_rk(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, e : Float*, ipiv : Int*, b : Float*, ldb : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssysv_rook(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, ipiv : Int*, b : Float*, ldb : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssysvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, ipiv : Int*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, ferr : Float*, berr : Float*, work : Float*, lwork : Int*, iwork : Int*, info : Int*)
    fun ssysvxx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, af : Float*, ldaf : Int*, ipiv : Int*, equed : Char*, s : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, rcond : Float*, rpvgrw : Float*, berr : Float*, n_err_bnds : Int*, err_bnds_norm : Float*, err_bnds_comp : Float*, nparams : Int*, params : Float*, work : Float*, iwork : Int*, info : Int*)
    fun ssyswapr(uplo : Char*, n : Int*, a : Float*, lda : Int*, i1 : Int*, i2 : Int*)
    fun ssytd2(uplo : Char*, n : Int*, a : Float*, lda : Int*, d__ : Float*, e : Float*, tau : Float*, info : Int*)
    fun ssytf2(uplo : Char*, n : Int*, a : Float*, lda : Int*, ipiv : Int*, info : Int*)
    fun ssytrd(uplo : Char*, n : Int*, a : Float*, lda : Int*, d : Float*, e : Float*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun ssytrd_2stage(vect : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, d : Float*, e : Float*, tau : Float*, hous2 : Float*, lhous2 : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssytrf(uplo : Char*, n : Int*, a : Float*, lda : Int*, ipiv : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssytrf_aa(uplo : Char*, n : Int*, a : Float*, lda : Int*, ipiv : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssytrf_aa_2stage(uplo : Char*, n : Int*, a : Float*, lda : Int*, tb : Float*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssytrf_rk(uplo : Char*, n : Int*, a : Float*, lda : Int*, e : Float*, ipiv : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssytrf_rook(uplo : Char*, n : Int*, a : Float*, lda : Int*, ipiv : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssytri(uplo : Char*, n : Int*, a : Float*, lda : Int*, ipiv : Int*, work : Float*, info : Int*)
    fun ssytri2(uplo : Char*, n : Int*, a : Float*, lda : Int*, ipiv : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssytri2x(uplo : Char*, n : Int*, a : Float*, lda : Int*, ipiv : Int*, work : Float*, nb : Int*, info : Int*)
    fun ssytri_3(uplo : Char*, n : Int*, a : Float*, lda : Int*, e : Float*, ipiv : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssytrs(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, ipiv : Int*, b : Float*, ldb : Int*, info : Int*)
    fun ssytrs2(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, ipiv : Int*, b : Float*, ldb : Int*, work : Float*, info : Int*)
    fun ssytrs_3(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, e : Float*, ipiv : Int*, b : Float*, ldb : Int*, info : Int*)
    fun ssytrs_aa(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, ipiv : Int*, b : Float*, ldb : Int*, work : Float*, lwork : Int*, info : Int*)
    fun ssytrs_aa_2stage(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, tb : Float*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, b : Float*, ldb : Int*, info : Int*)
    fun ssytrs_rook(uplo : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, ipiv : Int*, b : Float*, ldb : Int*, info : Int*)
    fun stbcon(norm : Char*, uplo : Char*, diag : Char*, n : Int*, kd : Int*, ab : Float*, ldab : Int*, rcond : Float*, work : Float*, iwork : Int*, info : Int*)
    fun stbrfs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : Float*, ldab : Int*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun stbtrs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : Float*, ldab : Int*, b : Float*, ldb : Int*, info : Int*)
    fun stfsm(transr : Char*, side : Char*, uplo : Char*, trans : Char*, diag : Char*, m : Int*, n : Int*, alpha : Float*, a : Float*, b : Float*, ldb : Int*)
    fun stftri(transr : Char*, uplo : Char*, diag : Char*, n : Int*, a : Float*, info : Int*)
    fun stfttp(transr : Char*, uplo : Char*, n : Int*, arf : Float*, ap : Float*, info : Int*)
    fun stfttr(transr : Char*, uplo : Char*, n : Int*, arf : Float*, a : Float*, lda : Int*, info : Int*)
    fun stgevc(side : Char*, howmny : Char*, select : Int*, n : Int*, s : Float*, lds : Int*, p : Float*, ldp : Int*, vl : Float*, ldvl : Int*, vr : Float*, ldvr : Int*, mm : Int*, m : Int*, work : Float*, info : Int*)
    fun stgex2(wantq : Char*, wantz : Char*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, q : Float*, ldq : Int*, z__ : Float*, ldz : Int*, j1 : Int*, n1 : Int*, n2 : Int*, work : Float*, lwork : Int*, info : Int*)
    fun stgexc(wantq : Int*, wantz : Int*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, q : Float*, ldq : Int*, z : Float*, ldz : Int*, ifst : Int*, ilst : Int*, work : Float*, lwork : Int*, info : Int*)
    fun stgsen(ijob : Int*, wantq : Int*, wantz : Int*, select : Int*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, alphar : Float*, alphai : Float*, beta : Float*, q : Float*, ldq : Int*, z : Float*, ldz : Int*, m : Int*, pl : Float*, pr : Float*, dif : Float*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun stgsja(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, p : Int*, n : Int*, k : Int*, l : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, tola : Float*, tolb : Float*, alpha : Float*, beta : Float*, u : Float*, ldu : Int*, v : Float*, ldv : Int*, q : Float*, ldq : Int*, work : Float*, ncycle : Int*, info : Int*)
    fun stgsna(job : Char*, howmny : Char*, select : Int*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, vl : Float*, ldvl : Int*, vr : Float*, ldvr : Int*, s : Float*, dif : Float*, mm : Int*, m : Int*, work : Float*, lwork : Int*, iwork : Int*, info : Int*)
    fun stgsy2(trans : Char*, ijob : Int*, m : Int*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, c__ : Float*, ldc : Int*, d__ : Float*, ldd : Int*, e : Float*, lde : Int*, f : Float*, ldf : Int*, scale : Float*, rdsum : Float*, rdscal : Float*, iwork : Int*, pq : Int*, info : Int*)
    fun stgsyl(trans : Char*, ijob : Int*, m : Int*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, c : Float*, ldc : Int*, d : Float*, ldd : Int*, e : Float*, lde : Int*, f : Float*, ldf : Int*, dif : Float*, scale : Float*, work : Float*, lwork : Int*, iwork : Int*, info : Int*)
    fun stpcon(norm : Char*, uplo : Char*, diag : Char*, n : Int*, ap : Float*, rcond : Float*, work : Float*, iwork : Int*, info : Int*)
    fun stplqt(m : Int*, n : Int*, l : Int*, mb : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, t : Float*, ldt : Int*, work : Float*, info : Int*)
    fun stplqt2(m : Int*, n : Int*, l : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, t : Float*, ldt : Int*, info : Int*)
    fun stpmlqt(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, mb : Int*, v : Float*, ldv : Int*, t : Float*, ldt : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, work : Float*, info : Int*)
    fun stpmqrt(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, nb : Int*, v : Float*, ldv : Int*, t : Float*, ldt : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, work : Float*, info : Int*)
    fun stpqrt(m : Int*, n : Int*, l : Int*, nb : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, t : Float*, ldt : Int*, work : Float*, info : Int*)
    fun stpqrt2(m : Int*, n : Int*, l : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, t : Float*, ldt : Int*, info : Int*)
    fun stprfb(side : Char*, trans : Char*, direct : Char*, storev : Char*, m : Int*, n : Int*, k : Int*, l : Int*, v : Float*, ldv : Int*, t : Float*, ldt : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, work : Float*, ldwork : Int*)
    fun stprfs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, ap : Float*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun stptri(uplo : Char*, diag : Char*, n : Int*, ap : Float*, info : Int*)
    fun stptrs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, ap : Float*, b : Float*, ldb : Int*, info : Int*)
    fun stpttf(transr : Char*, uplo : Char*, n : Int*, ap : Float*, arf : Float*, info : Int*)
    fun stpttr(uplo : Char*, n : Int*, ap : Float*, a : Float*, lda : Int*, info : Int*)
    fun strcon(norm : Char*, uplo : Char*, diag : Char*, n : Int*, a : Float*, lda : Int*, rcond : Float*, work : Float*, iwork : Int*, info : Int*)
    fun strevc(side : Char*, howmny : Char*, select : Int*, n : Int*, t : Float*, ldt : Int*, vl : Float*, ldvl : Int*, vr : Float*, ldvr : Int*, mm : Int*, m : Int*, work : Float*, info : Int*)
    fun strevc3(side : Char*, howmny : Char*, select : Int*, n : Int*, t : Float*, ldt : Int*, vl : Float*, ldvl : Int*, vr : Float*, ldvr : Int*, mm : Int*, m : Int*, work : Float*, lwork : Int*, info : Int*)
    fun strexc(compq : Char*, n : Int*, t : Float*, ldt : Int*, q : Float*, ldq : Int*, ifst : Int*, ilst : Int*, work : Float*, info : Int*)
    fun strrfs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, x : Float*, ldx : Int*, ferr : Float*, berr : Float*, work : Float*, iwork : Int*, info : Int*)
    fun strsen(job : Char*, compq : Char*, select : Int*, n : Int*, t : Float*, ldt : Int*, q : Float*, ldq : Int*, wr : Float*, wi : Float*, m : Int*, s : Float*, sep : Float*, work : Float*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun strsna(job : Char*, howmny : Char*, select : Int*, n : Int*, t : Float*, ldt : Int*, vl : Float*, ldvl : Int*, vr : Float*, ldvr : Int*, s : Float*, sep : Float*, mm : Int*, m : Int*, work : Float*, ldwork : Int*, iwork : Int*, info : Int*)
    fun strsyl(trana : Char*, tranb : Char*, isgn : Int*, m : Int*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, c : Float*, ldc : Int*, scale : Float*, info : Int*)
    fun strsyl3(trana : Char*, tranb : Char*, isgn : Int*, m : Int*, n : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, c : Float*, ldc : Int*, scale : Float*, iwork : Int*, liwork : Int*, swork : Float*, ldswork : Int*, info : Int*)
    fun strti2(uplo : Char*, diag : Char*, n : Int*, a : Float*, lda : Int*, info : Int*)
    fun strtri(uplo : Char*, diag : Char*, n : Int*, a : Float*, lda : Int*, info : Int*)
    fun strtrs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, a : Float*, lda : Int*, b : Float*, ldb : Int*, info : Int*)
    fun strttf(transr : Char*, uplo : Char*, n : Int*, a : Float*, lda : Int*, arf : Float*, info : Int*)
    fun strttp(uplo : Char*, n : Int*, a : Float*, lda : Int*, ap : Float*, info : Int*)
    fun stzrqf(m : Int*, n : Int*, a : Float*, lda : Int*, tau : Float*, info : Int*)
    fun stzrzf(m : Int*, n : Int*, a : Float*, lda : Int*, tau : Float*, work : Float*, lwork : Int*, info : Int*)
    fun xerbla(srname : Char*, info : Int*)
    fun xerbla_array_(srname_array__ : Char*, srname_len__ : Int*, info : Int*, srname_array_len : Int)
    fun zbbcsd(jobu1 : Char*, jobu2 : Char*, jobv1t : Char*, jobv2t : Char*, trans : Char*, m : Int*, p : Int*, q : Int*, theta : Double*, phi : Double*, u1 : ComplexDouble*, ldu1 : Int*, u2 : ComplexDouble*, ldu2 : Int*, v1_t : ComplexDouble*, ldv1t : Int*, v2_t : ComplexDouble*, ldv2t : Int*, b11_d : Double*, b11_e : Double*, b12_d : Double*, b12_e : Double*, b21_d : Double*, b21_e : Double*, b22_d : Double*, b22_e : Double*, rwork : Double*, lrwork : Int*, info : Int*)
    fun zbdsqr(uplo : Char*, n : Int*, ncvt : Int*, nru : Int*, ncc : Int*, d : Double*, e : Double*, vt : ComplexDouble*, ldvt : Int*, u : ComplexDouble*, ldu : Int*, c : ComplexDouble*, ldc : Int*, rwork : Double*, info : Int*)
    fun zcgesv(n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, work : ComplexDouble*, swork : ComplexFloat*, rwork : Double*, iter : Int*, info : Int*)
    fun zcposv(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, work : ComplexDouble*, swork : ComplexFloat*, rwork : Double*, iter : Int*, info : Int*)
    fun zdrscl(n : Int*, sa : Double*, sx : ComplexDouble*, incx : Int*)
    fun zgbbrd(vect : Char*, m : Int*, n : Int*, ncc : Int*, kl : Int*, ku : Int*, ab : ComplexDouble*, ldab : Int*, d : Double*, e : Double*, q : ComplexDouble*, ldq : Int*, pt : ComplexDouble*, ldpt : Int*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgbcon(norm : Char*, n : Int*, kl : Int*, ku : Int*, ab : ComplexDouble*, ldab : Int*, ipiv : Int*, anorm : Double*, rcond : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgbequ(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : ComplexDouble*, ldab : Int*, r : Double*, c : Double*, rowcnd : Double*, colcnd : Double*, amax : Double*, info : Int*)
    fun zgbequb(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : ComplexDouble*, ldab : Int*, r : Double*, c : Double*, rowcnd : Double*, colcnd : Double*, amax : Double*, info : Int*)
    fun zgbrfs(trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexDouble*, ldab : Int*, afb : ComplexDouble*, ldafb : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgbrfsx(trans : Char*, equed : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexDouble*, ldab : Int*, afb : ComplexDouble*, ldafb : Int*, ipiv : Int*, r : Double*, c : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgbsv(n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexDouble*, ldab : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zgbsvx(fact : Char*, trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexDouble*, ldab : Int*, afb : ComplexDouble*, ldafb : Int*, ipiv : Int*, equed : Char*, r : Double*, c : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgbsvxx(fact : Char*, trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexDouble*, ldab : Int*, afb : ComplexDouble*, ldafb : Int*, ipiv : Int*, equed : Char*, r : Double*, c : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, rpvgrw : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgbtf2(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : ComplexDouble*, ldab : Int*, ipiv : Int*, info : Int*)
    fun zgbtrf(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : ComplexDouble*, ldab : Int*, ipiv : Int*, info : Int*)
    fun zgbtrs(trans : Char*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexDouble*, ldab : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zgebak(job : Char*, side : Char*, n : Int*, ilo : Int*, ihi : Int*, scale : Double*, m : Int*, v : ComplexDouble*, ldv : Int*, info : Int*)
    fun zgebal(job : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ilo : Int*, ihi : Int*, scale : Double*, info : Int*)
    fun zgebd2(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, d__ : Double*, e : Double*, tauq : ComplexDouble*, taup : ComplexDouble*, work : ComplexDouble*, info : Int*)
    fun zgebrd(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, d : Double*, e : Double*, tauq : ComplexDouble*, taup : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgecon(norm : Char*, n : Int*, a : ComplexDouble*, lda : Int*, anorm : Double*, rcond : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgeequ(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, r : Double*, c : Double*, rowcnd : Double*, colcnd : Double*, amax : Double*, info : Int*)
    fun zgeequb(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, r : Double*, c : Double*, rowcnd : Double*, colcnd : Double*, amax : Double*, info : Int*)
    fun zgees(jobvs : Char*, sort : Char*, select : ZSelect1, n : Int*, a : ComplexDouble*, lda : Int*, sdim : Int*, w : ComplexDouble*, vs : ComplexDouble*, ldvs : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, bwork : Int*, info : Int*)
    fun zgeesx(jobvs : Char*, sort : Char*, select : ZSelect1, sense : Char*, n : Int*, a : ComplexDouble*, lda : Int*, sdim : Int*, w : ComplexDouble*, vs : ComplexDouble*, ldvs : Int*, rconde : Double*, rcondv : Double*, work : ComplexDouble*, lwork : Int*, rwork : Double*, bwork : Int*, info : Int*)
    fun zgeev(jobvl : Char*, jobvr : Char*, n : Int*, a : ComplexDouble*, lda : Int*, w : ComplexDouble*, vl : ComplexDouble*, ldvl : Int*, vr : ComplexDouble*, ldvr : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zgeevx(balanc : Char*, jobvl : Char*, jobvr : Char*, sense : Char*, n : Int*, a : ComplexDouble*, lda : Int*, w : ComplexDouble*, vl : ComplexDouble*, ldvl : Int*, vr : ComplexDouble*, ldvr : Int*, ilo : Int*, ihi : Int*, scale : Double*, abnrm : Double*, rconde : Double*, rcondv : Double*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zgegs(jobvsl : Char*, jobvsr : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, alpha : ComplexDouble*, beta : ComplexDouble*, vsl : ComplexDouble*, ldvsl : Int*, vsr : ComplexDouble*, ldvsr : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zgegv(jobvl : Char*, jobvr : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, alpha : ComplexDouble*, beta : ComplexDouble*, vl : ComplexDouble*, ldvl : Int*, vr : ComplexDouble*, ldvr : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zgehd2(n : Int*, ilo : Int*, ihi : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, info : Int*)
    fun zgehrd(n : Int*, ilo : Int*, ihi : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgejsv(joba : Char*, jobu : Char*, jobv : Char*, jobr : Char*, jobt : Char*, jobp : Char*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, sva : Double*, u : ComplexDouble*, ldu : Int*, v : ComplexDouble*, ldv : Int*, cwork : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, info : Int*)
    fun zgelq(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, t : ComplexDouble*, tsize : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgelq2(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, info : Int*)
    fun zgelqf(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgels(trans : Char*, m : Int*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgelsd(m : Int*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, s : Double*, rcond : Double*, rank : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, iwork : Int*, info : Int*)
    fun zgelss(m : Int*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, s : Double*, rcond : Double*, rank : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zgelsx(m : Int*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, jpvt : Int*, rcond : Double*, rank : Int*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgelsy(m : Int*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, jpvt : Int*, rcond : Double*, rank : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zgemlq(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, t : ComplexDouble*, tsize : Int*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgemqr(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, t : ComplexDouble*, tsize : Int*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgemqrt(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, nb : Int*, v : ComplexDouble*, ldv : Int*, t : ComplexDouble*, ldt : Int*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, info : Int*)
    fun zgeql2(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, info : Int*)
    fun zgeqlf(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgeqp3(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, jpvt : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zgeqpf(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, jpvt : Int*, tau : ComplexDouble*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgeqr(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, t : ComplexDouble*, tsize : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgeqr2(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, info : Int*)
    fun zgeqrf(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgeqrfp(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgeqrt(m : Int*, n : Int*, nb : Int*, a : ComplexDouble*, lda : Int*, t : ComplexDouble*, ldt : Int*, work : ComplexDouble*, info : Int*)
    fun zgeqrt2(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, t : ComplexDouble*, ldt : Int*, info : Int*)
    fun zgeqrt3(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, t : ComplexDouble*, ldt : Int*, info : Int*)
    fun zgerfs(trans : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgerfsx(trans : Char*, equed : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, r : Double*, c : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgerq2(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, info : Int*)
    fun zgerqf(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgesc2(n : Int*, a : ComplexDouble*, lda : Int*, rhs : ComplexDouble*, ipiv : Int*, jpiv : Int*, scale : Double*)
    fun zgesdd(jobz : Char*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, s : Double*, u : ComplexDouble*, ldu : Int*, vt : ComplexDouble*, ldvt : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, iwork : Int*, info : Int*)
    fun zgesv(n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zgesvd(jobu : Char*, jobvt : Char*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, s : Double*, u : ComplexDouble*, ldu : Int*, vt : ComplexDouble*, ldvt : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zgesvdq(joba : Char*, jobp : Char*, jobr : Char*, jobu : Char*, jobv : Char*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, s : Double*, u : ComplexDouble*, ldu : Int*, v : ComplexDouble*, ldv : Int*, numrank : Int*, iwork : Int*, liwork : Int*, cwork : ComplexDouble*, lcwork : Int*, rwork : Double*, lrwork : Int*, info : Int*)
    fun zgesvdx(jobu : Char*, jobvt : Char*, range : Char*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, ns : Int*, s : Double*, u : ComplexDouble*, ldu : Int*, vt : ComplexDouble*, ldvt : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, iwork : Int*, info : Int*)
    fun zgesvj(joba : Char*, jobu : Char*, jobv : Char*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, sva : Double*, mv : Int*, v : ComplexDouble*, ldv : Int*, cwork : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, info : Int*)
    fun zgesvx(fact : Char*, trans : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, equed : Char*, r : Double*, c : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgesvxx(fact : Char*, trans : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, equed : Char*, r : Double*, c : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, rpvgrw : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgetc2(n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, jpiv : Int*, info : Int*)
    fun zgetf2(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, info : Int*)
    fun zgetrf(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, info : Int*)
    fun zgetrf2(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, info : Int*)
    fun zgetri(n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgetrs(trans : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zgetsls(trans : Char*, m : Int*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgetsqrhrt(m : Int*, n : Int*, mb1 : Int*, nb1 : Int*, nb2 : Int*, a : ComplexDouble*, lda : Int*, t : ComplexDouble*, ldt : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zggbak(job : Char*, side : Char*, n : Int*, ilo : Int*, ihi : Int*, lscale : Double*, rscale : Double*, m : Int*, v : ComplexDouble*, ldv : Int*, info : Int*)
    fun zggbal(job : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, ilo : Int*, ihi : Int*, lscale : Double*, rscale : Double*, work : Double*, info : Int*)
    fun zgges(jobvsl : Char*, jobvsr : Char*, sort : Char*, selctg : ZSelect2, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, sdim : Int*, alpha : ComplexDouble*, beta : ComplexDouble*, vsl : ComplexDouble*, ldvsl : Int*, vsr : ComplexDouble*, ldvsr : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, bwork : Int*, info : Int*)
    fun zgges3(jobvsl : Char*, jobvsr : Char*, sort : Char*, selctg : ZSelect2, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, sdim : Int*, alpha : ComplexDouble*, beta : ComplexDouble*, vsl : ComplexDouble*, ldvsl : Int*, vsr : ComplexDouble*, ldvsr : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, bwork : Int*, info : Int*)
    fun zggesx(jobvsl : Char*, jobvsr : Char*, sort : Char*, selctg : ZSelect2, sense : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, sdim : Int*, alpha : ComplexDouble*, beta : ComplexDouble*, vsl : ComplexDouble*, ldvsl : Int*, vsr : ComplexDouble*, ldvsr : Int*, rconde : Double*, rcondv : Double*, work : ComplexDouble*, lwork : Int*, rwork : Double*, iwork : Int*, liwork : Int*, bwork : Int*, info : Int*)
    fun zggev(jobvl : Char*, jobvr : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, alpha : ComplexDouble*, beta : ComplexDouble*, vl : ComplexDouble*, ldvl : Int*, vr : ComplexDouble*, ldvr : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zggev3(jobvl : Char*, jobvr : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, alpha : ComplexDouble*, beta : ComplexDouble*, vl : ComplexDouble*, ldvl : Int*, vr : ComplexDouble*, ldvr : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zggevx(balanc : Char*, jobvl : Char*, jobvr : Char*, sense : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, alpha : ComplexDouble*, beta : ComplexDouble*, vl : ComplexDouble*, ldvl : Int*, vr : ComplexDouble*, ldvr : Int*, ilo : Int*, ihi : Int*, lscale : Double*, rscale : Double*, abnrm : Double*, bbnrm : Double*, rconde : Double*, rcondv : Double*, work : ComplexDouble*, lwork : Int*, rwork : Double*, iwork : Int*, bwork : Int*, info : Int*)
    fun zggglm(n : Int*, m : Int*, p : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, d : ComplexDouble*, x : ComplexDouble*, y : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgghd3(compq : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, q : ComplexDouble*, ldq : Int*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgghrd(compq : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, q : ComplexDouble*, ldq : Int*, z : ComplexDouble*, ldz : Int*, info : Int*)
    fun zgglse(m : Int*, n : Int*, p : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, c : ComplexDouble*, d : ComplexDouble*, x : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zggqrf(n : Int*, m : Int*, p : Int*, a : ComplexDouble*, lda : Int*, taua : ComplexDouble*, b : ComplexDouble*, ldb : Int*, taub : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zggrqf(m : Int*, p : Int*, n : Int*, a : ComplexDouble*, lda : Int*, taua : ComplexDouble*, b : ComplexDouble*, ldb : Int*, taub : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zggsvd(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, n : Int*, p : Int*, k : Int*, l : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, alpha : Double*, beta : Double*, u : ComplexDouble*, ldu : Int*, v : ComplexDouble*, ldv : Int*, q : ComplexDouble*, ldq : Int*, work : ComplexDouble*, rwork : Double*, iwork : Int*, info : Int*) : Int
    fun zggsvd3(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, n : Int*, p : Int*, k : Int*, l : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, alpha : Double*, beta : Double*, u : ComplexDouble*, ldu : Int*, v : ComplexDouble*, ldv : Int*, q : ComplexDouble*, ldq : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, iwork : Int*, info : Int*)
    fun zggsvp(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, p : Int*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, tola : Double*, tolb : Double*, k : Int*, l : Int*, u : ComplexDouble*, ldu : Int*, v : ComplexDouble*, ldv : Int*, q : ComplexDouble*, ldq : Int*, iwork : Int*, rwork : Double*, tau : ComplexDouble*, work : ComplexDouble*, info : Int*) : Int
    fun zggsvp3(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, p : Int*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, tola : Double*, tolb : Double*, k : Int*, l : Int*, u : ComplexDouble*, ldu : Int*, v : ComplexDouble*, ldv : Int*, q : ComplexDouble*, ldq : Int*, iwork : Int*, rwork : Double*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zgtcon(norm : Char*, n : Int*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*, du2 : ComplexDouble*, ipiv : Int*, anorm : Double*, rcond : Double*, work : ComplexDouble*, info : Int*)
    fun zgtrfs(trans : Char*, n : Int*, nrhs : Int*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*, dlf : ComplexDouble*, df : ComplexDouble*, duf : ComplexDouble*, du2 : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgtsv(n : Int*, nrhs : Int*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zgtsvx(fact : Char*, trans : Char*, n : Int*, nrhs : Int*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*, dlf : ComplexDouble*, df : ComplexDouble*, duf : ComplexDouble*, du2 : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zgttrf(n : Int*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*, du2 : ComplexDouble*, ipiv : Int*, info : Int*)
    fun zgttrs(trans : Char*, n : Int*, nrhs : Int*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*, du2 : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zgtts2(itrans : Int*, n : Int*, nrhs : Int*, dl : ComplexDouble*, d__ : ComplexDouble*, du : ComplexDouble*, du2 : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*)
    fun zhbev(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zhbev_2stage(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zhbevd(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun zhbevd_2stage(jobz : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun zhbevx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, q : ComplexDouble*, ldq : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, rwork : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun zhbevx_2stage(jobz : Char*, range : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, q : ComplexDouble*, ldq : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun zhbgst(vect : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : ComplexDouble*, ldab : Int*, bb : ComplexDouble*, ldbb : Int*, x : ComplexDouble*, ldx : Int*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zhbgv(jobz : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : ComplexDouble*, ldab : Int*, bb : ComplexDouble*, ldbb : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zhbgvd(jobz : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : ComplexDouble*, ldab : Int*, bb : ComplexDouble*, ldbb : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun zhbgvx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, ka : Int*, kb : Int*, ab : ComplexDouble*, ldab : Int*, bb : ComplexDouble*, ldbb : Int*, q : ComplexDouble*, ldq : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, rwork : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun zhbtrd(vect : Char*, uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, d : Double*, e : Double*, q : ComplexDouble*, ldq : Int*, work : ComplexDouble*, info : Int*)
    fun zhecon(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, anorm : Double*, rcond : Double*, work : ComplexDouble*, info : Int*)
    fun zhecon_3(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, e : ComplexDouble*, ipiv : Int*, anorm : Double*, rcond : Double*, work : ComplexDouble*, info : Int*)
    fun zheequb(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, s : Double*, scond : Double*, amax : Double*, work : ComplexDouble*, info : Int*)
    fun zheev(jobz : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, w : Double*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zheev_2stage(jobz : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, w : Double*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zheevd(jobz : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, w : Double*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun zheevd_2stage(jobz : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, w : Double*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun zheevr(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, isuppz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun zheevr_2stage(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, isuppz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun zheevx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun zheevx_2stage(jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun zhegs2(itype : Int*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zhegst(itype : Int*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zhegv(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, w : Double*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zhegv_2stage(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, w : Double*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zhegvd(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, w : Double*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun zhegvx(itype : Int*, jobz : Char*, range : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun zherfs(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zherfsx(uplo : Char*, equed : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, s : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zhesv(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhesv_aa(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhesv_aa_2stage(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, tb : ComplexDouble*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhesv_rk(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, e : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhesv_rook(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhesvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zhesvxx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, equed : Char*, s : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, rpvgrw : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zheswapr(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, i1 : Int*, i2 : Int*)
    fun zhetd2(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, d__ : Double*, e : Double*, tau : ComplexDouble*, info : Int*)
    fun zhetf2(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, info : Int*)
    fun zhetrd(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, d : Double*, e : Double*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhetrd_2stage(vect : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, d : Double*, e : Double*, tau : ComplexDouble*, hous2 : ComplexDouble*, lhous2 : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhetrf(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhetrf_aa(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhetrf_aa_2stage(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, tb : ComplexDouble*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhetrf_rk(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, e : ComplexDouble*, ipiv : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhetrf_rook(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhetri(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, work : ComplexDouble*, info : Int*)
    fun zhetri2(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhetri2x(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, work : ComplexDouble*, nb : Int*, info : Int*)
    fun zhetri_3(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, e : ComplexDouble*, ipiv : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhetrs(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zhetrs2(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, info : Int*)
    fun zhetrs_3(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, e : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zhetrs_aa(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zhetrs_aa_2stage(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, tb : ComplexDouble*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zhetrs_rook(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zhfrk(transr : Char*, uplo : Char*, trans : Char*, n : Int*, k : Int*, alpha : Double*, a : ComplexDouble*, lda : Int*, beta : Double*, c : ComplexDouble*)
    fun zhgeqz(job : Char*, compq : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, h : ComplexDouble*, ldh : Int*, t : ComplexDouble*, ldt : Int*, alpha : ComplexDouble*, beta : ComplexDouble*, q : ComplexDouble*, ldq : Int*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zhpcon(uplo : Char*, n : Int*, ap : ComplexDouble*, ipiv : Int*, anorm : Double*, rcond : Double*, work : ComplexDouble*, info : Int*)
    fun zhpev(jobz : Char*, uplo : Char*, n : Int*, ap : ComplexDouble*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zhpevd(jobz : Char*, uplo : Char*, n : Int*, ap : ComplexDouble*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun zhpevx(jobz : Char*, range : Char*, uplo : Char*, n : Int*, ap : ComplexDouble*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, rwork : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun zhpgst(itype : Int*, uplo : Char*, n : Int*, ap : ComplexDouble*, bp : ComplexDouble*, info : Int*)
    fun zhpgv(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, ap : ComplexDouble*, bp : ComplexDouble*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zhpgvd(itype : Int*, jobz : Char*, uplo : Char*, n : Int*, ap : ComplexDouble*, bp : ComplexDouble*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun zhpgvx(itype : Int*, jobz : Char*, range : Char*, uplo : Char*, n : Int*, ap : ComplexDouble*, bp : ComplexDouble*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, rwork : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun zhprfs(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, afp : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zhpsv(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zhpsvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, afp : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zhptrd(uplo : Char*, n : Int*, ap : ComplexDouble*, d : Double*, e : Double*, tau : ComplexDouble*, info : Int*)
    fun zhptrf(uplo : Char*, n : Int*, ap : ComplexDouble*, ipiv : Int*, info : Int*)
    fun zhptri(uplo : Char*, n : Int*, ap : ComplexDouble*, ipiv : Int*, work : ComplexDouble*, info : Int*)
    fun zhptrs(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zhsein(side : Char*, eigsrc : Char*, initv : Char*, select : Int*, n : Int*, h : ComplexDouble*, ldh : Int*, w : ComplexDouble*, vl : ComplexDouble*, ldvl : Int*, vr : ComplexDouble*, ldvr : Int*, mm : Int*, m : Int*, work : ComplexDouble*, rwork : Double*, ifaill : Int*, ifailr : Int*, info : Int*)
    fun zhseqr(job : Char*, compz : Char*, n : Int*, ilo : Int*, ihi : Int*, h : ComplexDouble*, ldh : Int*, w : ComplexDouble*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zla_gbamv_(trans : Int*, m : Int*, n : Int*, kl : Int*, ku : Int*, alpha : Double*, ab : ComplexDouble*, ldab : Int*, x : ComplexDouble*, incx : Int*, beta : Double*, y : Double*, incy : Int*)
    fun zla_gbrcond_c_(trans : Char*, n : Int*, kl : Int*, ku : Int*, ab : ComplexDouble*, ldab : Int*, afb : ComplexDouble*, ldafb : Int*, ipiv : Int*, c__ : Double*, capply : Char*, info : Int*, work : ComplexDouble*, rwork : Double*, trans_len : Int) : Double
    fun zla_gbrcond_x_(trans : Char*, n : Int*, kl : Int*, ku : Int*, ab : ComplexDouble*, ldab : Int*, afb : ComplexDouble*, ldafb : Int*, ipiv : Int*, x : ComplexDouble*, info : Int*, work : ComplexDouble*, rwork : Double*, trans_len : Int) : Double
    fun zla_gbrfsx_extended_(prec_type__ : Int*, trans_type__ : Int*, n : Int*, kl : Int*, ku : Int*, nrhs : Int*, ab : ComplexDouble*, ldab : Int*, afb : ComplexDouble*, ldafb : Int*, ipiv : Int*, colequ : Char*, c__ : Double*, b : ComplexDouble*, ldb : Int*, y : ComplexDouble*, ldy : Int*, berr_out__ : Double*, n_norms__ : Int*, errs_n__ : Double*, errs_c__ : Double*, res : ComplexDouble*, ayb : Double*, dy : ComplexDouble*, y_tail__ : ComplexDouble*, rcond : Double*, ithresh : Int*, rthresh : Double*, dz_ub__ : Double*, ignore_cwise__ : Char*, info : Int*)
    fun zla_gbrpvgrw_(n : Int*, kl : Int*, ku : Int*, ncols : Int*, ab : ComplexDouble*, ldab : Int*, afb : ComplexDouble*, ldafb : Int*) : Double
    fun zla_geamv_(trans : Int*, m : Int*, n : Int*, alpha : Double*, a : ComplexDouble*, lda : Int*, x : ComplexDouble*, incx : Int*, beta : Double*, y : Double*, incy : Int*)
    fun zla_gercond_c_(trans : Char*, n : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, c__ : Double*, capply : Char*, info : Int*, work : ComplexDouble*, rwork : Double*, trans_len : Int) : Double
    fun zla_gercond_x_(trans : Char*, n : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, x : ComplexDouble*, info : Int*, work : ComplexDouble*, rwork : Double*, trans_len : Int) : Double
    fun zla_gerfsx_extended_(prec_type__ : Int*, trans_type__ : Int*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, colequ : Char*, c__ : Double*, b : ComplexDouble*, ldb : Int*, y : ComplexDouble*, ldy : Int*, berr_out__ : Double*, n_norms__ : Int*, errs_n__ : Double*, errs_c__ : Double*, res : ComplexDouble*, ayb : Double*, dy : ComplexDouble*, y_tail__ : ComplexDouble*, rcond : Double*, ithresh : Int*, rthresh : Double*, dz_ub__ : Double*, ignore_cwise__ : Char*, info : Int*)
    fun zla_heamv_(uplo : Int*, n : Int*, alpha : Double*, a : ComplexDouble*, lda : Int*, x : ComplexDouble*, incx : Int*, beta : Double*, y : Double*, incy : Int*)
    fun zla_hercond_c_(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, c__ : Double*, capply : Char*, info : Int*, work : ComplexDouble*, rwork : Double*, uplo_len : Int) : Double
    fun zla_hercond_x_(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, x : ComplexDouble*, info : Int*, work : ComplexDouble*, rwork : Double*, uplo_len : Int) : Double
    fun zla_herfsx_extended_(prec_type__ : Int*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, colequ : Char*, c__ : Double*, b : ComplexDouble*, ldb : Int*, y : ComplexDouble*, ldy : Int*, berr_out__ : Double*, n_norms__ : Int*, errs_n__ : Double*, errs_c__ : Double*, res : ComplexDouble*, ayb : Double*, dy : ComplexDouble*, y_tail__ : ComplexDouble*, rcond : Double*, ithresh : Int*, rthresh : Double*, dz_ub__ : Double*, ignore_cwise__ : Char*, info : Int*, uplo_len : Int)
    fun zla_herpvgrw_(uplo : Char*, n : Int*, info : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, work : Double*, uplo_len : Int) : Double
    fun zla_lin_berr_(n : Int*, nz : Int*, nrhs : Int*, res : ComplexDouble*, ayb : Double*, berr : Double*)
    fun zla_porcond_c_(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, c__ : Double*, capply : Char*, info : Int*, work : ComplexDouble*, rwork : Double*, uplo_len : Int) : Double
    fun zla_porcond_x_(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, x : ComplexDouble*, info : Int*, work : ComplexDouble*, rwork : Double*, uplo_len : Int) : Double
    fun zla_porfsx_extended_(prec_type__ : Int*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, colequ : Char*, c__ : Double*, b : ComplexDouble*, ldb : Int*, y : ComplexDouble*, ldy : Int*, berr_out__ : Double*, n_norms__ : Int*, errs_n__ : Double*, errs_c__ : Double*, res : ComplexDouble*, ayb : Double*, dy : ComplexDouble*, y_tail__ : ComplexDouble*, rcond : Double*, ithresh : Int*, rthresh : Double*, dz_ub__ : Double*, ignore_cwise__ : Char*, info : Int*, uplo_len : Int)
    fun zla_porpvgrw_(uplo : Char*, ncols : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, work : Double*, uplo_len : Int) : Double
    fun zla_rpvgrw_(n : Int*, ncols : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*) : Double
    fun zla_syamv_(uplo : Int*, n : Int*, alpha : Double*, a : ComplexDouble*, lda : Int*, x : ComplexDouble*, incx : Int*, beta : Double*, y : Double*, incy : Int*)
    fun zla_syrcond_c_(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, c__ : Double*, capply : Char*, info : Int*, work : ComplexDouble*, rwork : Double*, uplo_len : Int) : Double
    fun zla_syrcond_x_(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, x : ComplexDouble*, info : Int*, work : ComplexDouble*, rwork : Double*, uplo_len : Int) : Double
    fun zla_syrfsx_extended_(prec_type__ : Int*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, colequ : Char*, c__ : Double*, b : ComplexDouble*, ldb : Int*, y : ComplexDouble*, ldy : Int*, berr_out__ : Double*, n_norms__ : Int*, errs_n__ : Double*, errs_c__ : Double*, res : ComplexDouble*, ayb : Double*, dy : ComplexDouble*, y_tail__ : ComplexDouble*, rcond : Double*, ithresh : Int*, rthresh : Double*, dz_ub__ : Double*, ignore_cwise__ : Char*, info : Int*, uplo_len : Int)
    fun zla_syrpvgrw_(uplo : Char*, n : Int*, info : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, work : Double*, uplo_len : Int) : Double
    fun zla_wwaddw_(n : Int*, x : ComplexDouble*, y : ComplexDouble*, w : ComplexDouble*)
    fun zlabrd(m : Int*, n : Int*, nb : Int*, a : ComplexDouble*, lda : Int*, d__ : Double*, e : Double*, tauq : ComplexDouble*, taup : ComplexDouble*, x : ComplexDouble*, ldx : Int*, y : ComplexDouble*, ldy : Int*)
    fun zlacgv(n : Int*, x : ComplexDouble*, incx : Int*)
    fun zlacn2(n : Int*, v : ComplexDouble*, x : ComplexDouble*, est : Double*, kase : Int*, isave : Int*)
    fun zlacon(n : Int*, v : ComplexDouble*, x : ComplexDouble*, est : Double*, kase : Int*)
    fun zlacp2(uplo : Char*, m : Int*, n : Int*, a : Double*, lda : Int*, b : ComplexDouble*, ldb : Int*)
    fun zlacpy(uplo : Char*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*)
    fun zlacrm(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, b : Double*, ldb : Int*, c : ComplexDouble*, ldc : Int*, rwork : Double*)
    fun zlacrt(n : Int*, cx : ComplexDouble*, incx : Int*, cy : ComplexDouble*, incy : Int*, c__ : ComplexDouble*, s : ComplexDouble*)
    fun zladiv(ret_val : ComplexDouble*, x : ComplexDouble*, y : ComplexDouble*)
    fun zlaed0(qsiz : Int*, n : Int*, d__ : Double*, e : Double*, q : ComplexDouble*, ldq : Int*, qstore : ComplexDouble*, ldqs : Int*, rwork : Double*, iwork : Int*, info : Int*)
    fun zlaed7(n : Int*, cutpnt : Int*, qsiz : Int*, tlvls : Int*, curlvl : Int*, curpbm : Int*, d__ : Double*, q : ComplexDouble*, ldq : Int*, rho : Double*, indxq : Int*, qstore : Double*, qptr : Int*, prmptr : Int*, perm : Int*, givptr : Int*, givcol : Int*, givnum : Double*, work : ComplexDouble*, rwork : Double*, iwork : Int*, info : Int*)
    fun zlaed8(k : Int*, n : Int*, qsiz : Int*, q : ComplexDouble*, ldq : Int*, d__ : Double*, rho : Double*, cutpnt : Int*, z__ : Double*, dlamda : Double*, q2 : ComplexDouble*, ldq2 : Int*, w : Double*, indxp : Int*, indx : Int*, indxq : Int*, perm : Int*, givptr : Int*, givcol : Int*, givnum : Double*, info : Int*)
    fun zlaein(rightv : Char*, noinit : Char*, n : Int*, h__ : ComplexDouble*, ldh : Int*, w : ComplexDouble*, v : ComplexDouble*, b : ComplexDouble*, ldb : Int*, rwork : Double*, eps3 : Double*, smlnum : Double*, info : Int*)
    fun zlaesy(a : ComplexDouble*, b : ComplexDouble*, c__ : ComplexDouble*, rt1 : ComplexDouble*, rt2 : ComplexDouble*, evscal : ComplexDouble*, cs1 : ComplexDouble*, sn1 : ComplexDouble*)
    fun zlaev2(a : ComplexDouble*, b : ComplexDouble*, c__ : ComplexDouble*, rt1 : Double*, rt2 : Double*, cs1 : Double*, sn1 : ComplexDouble*)
    fun zlag2c(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, sa : ComplexFloat*, ldsa : Int*, info : Int*)
    fun zlagge(m : Int*, n : Int*, kl : Int*, ku : Int*, d : Double*, a : ComplexDouble*, lda : Int*, iseed : Int*, work : ComplexDouble*, info : Int*)
    fun zlaghe(n : Int*, k : Int*, d : Double*, a : ComplexDouble*, lda : Int*, iseed : Int*, work : ComplexDouble*, info : Int*)
    fun zlags2(upper : Char*, a1 : Double*, a2 : ComplexDouble*, a3 : Double*, b1 : Double*, b2 : ComplexDouble*, b3 : Double*, csu : Double*, snu : ComplexDouble*, csv : Double*, snv : ComplexDouble*, csq : Double*, snq : ComplexDouble*)
    fun zlagsy(n : Int*, k : Int*, d : Double*, a : ComplexDouble*, lda : Int*, iseed : Int*, work : ComplexDouble*, info : Int*)
    fun zlagtm(trans : Char*, n : Int*, nrhs : Int*, alpha : Double*, dl : ComplexDouble*, d__ : ComplexDouble*, du : ComplexDouble*, x : ComplexDouble*, ldx : Int*, beta : Double*, b : ComplexDouble*, ldb : Int*)
    fun zlahef(uplo : Char*, n : Int*, nb : Int*, kb : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, w : ComplexDouble*, ldw : Int*, info : Int*)
    fun zlahqr(wantt : Char*, wantz : Char*, n : Int*, ilo : Int*, ihi : Int*, h__ : ComplexDouble*, ldh : Int*, w : ComplexDouble*, iloz : Int*, ihiz : Int*, z__ : ComplexDouble*, ldz : Int*, info : Int*)
    fun zlahr2(n : Int*, k : Int*, nb : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, t : ComplexDouble*, ldt : Int*, y : ComplexDouble*, ldy : Int*)
    fun zlahrd(n : Int*, k : Int*, nb : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, t : ComplexDouble*, ldt : Int*, y : ComplexDouble*, ldy : Int*)
    fun zlaic1(job : Int*, j : Int*, x : ComplexDouble*, sest : Double*, w : ComplexDouble*, gamma : ComplexDouble*, sestpr : Double*, s : ComplexDouble*, c__ : ComplexDouble*)
    fun zlals0(icompq : Int*, nl : Int*, nr : Int*, sqre : Int*, nrhs : Int*, b : ComplexDouble*, ldb : Int*, bx : ComplexDouble*, ldbx : Int*, perm : Int*, givptr : Int*, givcol : Int*, ldgcol : Int*, givnum : Double*, ldgnum : Int*, poles : Double*, difl : Double*, difr : Double*, z__ : Double*, k : Int*, c__ : Double*, s : Double*, rwork : Double*, info : Int*)
    fun zlalsa(icompq : Int*, smlsiz : Int*, n : Int*, nrhs : Int*, b : ComplexDouble*, ldb : Int*, bx : ComplexDouble*, ldbx : Int*, u : Double*, ldu : Int*, vt : Double*, k : Int*, difl : Double*, difr : Double*, z__ : Double*, poles : Double*, givptr : Int*, givcol : Int*, ldgcol : Int*, perm : Int*, givnum : Double*, c__ : Double*, s : Double*, rwork : Double*, iwork : Int*, info : Int*)
    fun zlalsd(uplo : Char*, smlsiz : Int*, n : Int*, nrhs : Int*, d__ : Double*, e : Double*, b : ComplexDouble*, ldb : Int*, rcond : Double*, rank : Int*, work : ComplexDouble*, rwork : Double*, iwork : Int*, info : Int*)
    fun zlangb(norm : Char*, n : Int*, kl : Int*, ku : Int*, ab : ComplexDouble*, ldab : Int*, work : Double*) : Double
    fun zlange(norm : Char*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, work : Double*) : Double
    fun zlangt(norm : Char*, n : Int*, dl : ComplexDouble*, d : ComplexDouble*, du : ComplexDouble*) : Double
    fun zlanhb(norm : Char*, uplo : Char*, n : Int*, k : Int*, ab : ComplexDouble*, ldab : Int*, work : Double*) : Double
    fun zlanhe(norm : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, work : Double*) : Double
    fun zlanhf(norm : Char*, transr : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, work : Double*) : Double
    fun zlanhp(norm : Char*, uplo : Char*, n : Int*, ap : ComplexDouble*, work : Double*) : Double
    fun zlanhs(norm : Char*, n : Int*, a : ComplexDouble*, lda : Int*, work : Double*) : Double
    fun zlanht(norm : Char*, n : Int*, d : Double*, e : ComplexDouble*) : Double
    fun zlansb(norm : Char*, uplo : Char*, n : Int*, k : Int*, ab : ComplexDouble*, ldab : Int*, work : Double*) : Double
    fun zlansp(norm : Char*, uplo : Char*, n : Int*, ap : ComplexDouble*, work : Double*) : Double
    fun zlansy(norm : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, work : Double*) : Double
    fun zlantb(norm : Char*, uplo : Char*, diag : Char*, n : Int*, k : Int*, ab : ComplexDouble*, ldab : Int*, work : Double*) : Double
    fun zlantp(norm : Char*, uplo : Char*, diag : Char*, n : Int*, ap : ComplexDouble*, work : Double*) : Double
    fun zlantr(norm : Char*, uplo : Char*, diag : Char*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, work : Double*) : Double
    fun zlapll(n : Int*, x : ComplexDouble*, incx : Int*, y : ComplexDouble*, incy : Int*, ssmin : Double*)
    fun zlapmr(forwrd : Int*, m : Int*, n : Int*, x : ComplexDouble*, ldx : Int*, k : Int*)
    fun zlapmt(forwrd : Int*, m : Int*, n : Int*, x : ComplexDouble*, ldx : Int*, k : Int*)
    fun zlaqgb(m : Int*, n : Int*, kl : Int*, ku : Int*, ab : ComplexDouble*, ldab : Int*, r__ : Double*, c__ : Double*, rowcnd : Double*, colcnd : Double*, amax : Double*, equed : Char*)
    fun zlaqge(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, r__ : Double*, c__ : Double*, rowcnd : Double*, colcnd : Double*, amax : Double*, equed : Char*)
    fun zlaqhb(uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, s : Double*, scond : Double*, amax : Double*, equed : Char*)
    fun zlaqhe(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, s : Double*, scond : Double*, amax : Double*, equed : Char*)
    fun zlaqhp(uplo : Char*, n : Int*, ap : ComplexDouble*, s : Double*, scond : Double*, amax : Double*, equed : Char*)
    fun zlaqp2(m : Int*, n : Int*, offset : Int*, a : ComplexDouble*, lda : Int*, jpvt : Int*, tau : ComplexDouble*, vn1 : Double*, vn2 : Double*, work : ComplexDouble*)
    fun zlaqps(m : Int*, n : Int*, offset : Int*, nb : Int*, kb : Int*, a : ComplexDouble*, lda : Int*, jpvt : Int*, tau : ComplexDouble*, vn1 : Double*, vn2 : Double*, auxv : ComplexDouble*, f : ComplexDouble*, ldf : Int*)
    fun zlaqr0(wantt : Char*, wantz : Char*, n : Int*, ilo : Int*, ihi : Int*, h__ : ComplexDouble*, ldh : Int*, w : ComplexDouble*, iloz : Int*, ihiz : Int*, z__ : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zlaqr1(n : Int*, h__ : ComplexDouble*, ldh : Int*, s1 : ComplexDouble*, s2 : ComplexDouble*, v : ComplexDouble*)
    fun zlaqr2(wantt : Char*, wantz : Char*, n : Int*, ktop : Int*, kbot : Int*, nw : Int*, h__ : ComplexDouble*, ldh : Int*, iloz : Int*, ihiz : Int*, z__ : ComplexDouble*, ldz : Int*, ns : Int*, nd : Int*, sh : ComplexDouble*, v : ComplexDouble*, ldv : Int*, nh : Int*, t : ComplexDouble*, ldt : Int*, nv : Int*, wv : ComplexDouble*, ldwv : Int*, work : ComplexDouble*, lwork : Int*)
    fun zlaqr3(wantt : Char*, wantz : Char*, n : Int*, ktop : Int*, kbot : Int*, nw : Int*, h__ : ComplexDouble*, ldh : Int*, iloz : Int*, ihiz : Int*, z__ : ComplexDouble*, ldz : Int*, ns : Int*, nd : Int*, sh : ComplexDouble*, v : ComplexDouble*, ldv : Int*, nh : Int*, t : ComplexDouble*, ldt : Int*, nv : Int*, wv : ComplexDouble*, ldwv : Int*, work : ComplexDouble*, lwork : Int*)
    fun zlaqr4(wantt : Char*, wantz : Char*, n : Int*, ilo : Int*, ihi : Int*, h__ : ComplexDouble*, ldh : Int*, w : ComplexDouble*, iloz : Int*, ihiz : Int*, z__ : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zlaqr5(wantt : Char*, wantz : Char*, kacc22 : Int*, n : Int*, ktop : Int*, kbot : Int*, nshfts : Int*, s : ComplexDouble*, h__ : ComplexDouble*, ldh : Int*, iloz : Int*, ihiz : Int*, z__ : ComplexDouble*, ldz : Int*, v : ComplexDouble*, ldv : Int*, u : ComplexDouble*, ldu : Int*, nv : Int*, wv : ComplexDouble*, ldwv : Int*, nh : Int*, wh : ComplexDouble*, ldwh : Int*)
    fun zlaqsb(uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, s : Double*, scond : Double*, amax : Double*, equed : Char*)
    fun zlaqsp(uplo : Char*, n : Int*, ap : ComplexDouble*, s : Double*, scond : Double*, amax : Double*, equed : Char*)
    fun zlaqsy(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, s : Double*, scond : Double*, amax : Double*, equed : Char*)
    fun zlar1v(n : Int*, b1 : Int*, bn : Int*, lambda : Double*, d__ : Double*, l : Double*, ld : Double*, lld : Double*, pivmin : Double*, gaptol : Double*, z__ : ComplexDouble*, wantnc : Char*, negcnt : Int*, ztz : Double*, mingma : Double*, r__ : Int*, isuppz : Int*, nrminv : Double*, resid : Double*, rqcorr : Double*, work : Double*)
    fun zlar2v(n : Int*, x : ComplexDouble*, y : ComplexDouble*, z__ : ComplexDouble*, incx : Int*, c__ : Double*, s : ComplexDouble*, incc : Int*)
    fun zlarcm(m : Int*, n : Int*, a : Double*, lda : Int*, b : ComplexDouble*, ldb : Int*, c : ComplexDouble*, ldc : Int*, rwork : Double*)
    fun zlarf(side : Char*, m : Int*, n : Int*, v : ComplexDouble*, incv : Int*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*)
    fun zlarfb(side : Char*, trans : Char*, direct : Char*, storev : Char*, m : Int*, n : Int*, k : Int*, v : ComplexDouble*, ldv : Int*, t : ComplexDouble*, ldt : Int*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, ldwork : Int*)
    fun zlarfg(n : Int*, alpha : ComplexDouble*, x : ComplexDouble*, incx : Int*, tau : ComplexDouble*)
    fun zlarfp(n : Int*, alpha : ComplexDouble*, x : ComplexDouble*, incx : Int*, tau : ComplexDouble*)
    fun zlarft(direct : Char*, storev : Char*, n : Int*, k : Int*, v : ComplexDouble*, ldv : Int*, tau : ComplexDouble*, t : ComplexDouble*, ldt : Int*)
    fun zlarfx(side : Char*, m : Int*, n : Int*, v : ComplexDouble*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*)
    fun zlargv(n : Int*, x : ComplexDouble*, incx : Int*, y : ComplexDouble*, incy : Int*, c__ : Double*, incc : Int*)
    fun zlarnv(idist : Int*, iseed : Int*, n : Int*, x : ComplexDouble*)
    fun zlarrv(n : Int*, vl : Double*, vu : Double*, d__ : Double*, l : Double*, pivmin : Double*, isplit : Int*, m : Int*, dol : Int*, dou : Int*, minrgp : Double*, rtol1 : Double*, rtol2 : Double*, w : Double*, werr : Double*, wgap : Double*, iblock : Int*, indexw : Int*, gers : Double*, z__ : ComplexDouble*, ldz : Int*, isuppz : Int*, work : Double*, iwork : Int*, info : Int*)
    fun zlarscl2(m : Int*, n : Int*, d__ : Double*, x : ComplexDouble*, ldx : Int*)
    fun zlartg(f : ComplexDouble*, g : ComplexDouble*, cs : Double*, sn : ComplexDouble*, r__ : ComplexDouble*)
    fun zlartv(n : Int*, x : ComplexDouble*, incx : Int*, y : ComplexDouble*, incy : Int*, c__ : Double*, s : ComplexDouble*, incc : Int*)
    fun zlarz(side : Char*, m : Int*, n : Int*, l : Int*, v : ComplexDouble*, incv : Int*, tau : ComplexDouble*, c__ : ComplexDouble*, ldc : Int*, work : ComplexDouble*)
    fun zlarzb(side : Char*, trans : Char*, direct : Char*, storev : Char*, m : Int*, n : Int*, k : Int*, l : Int*, v : ComplexDouble*, ldv : Int*, t : ComplexDouble*, ldt : Int*, c__ : ComplexDouble*, ldc : Int*, work : ComplexDouble*, ldwork : Int*)
    fun zlarzt(direct : Char*, storev : Char*, n : Int*, k : Int*, v : ComplexDouble*, ldv : Int*, tau : ComplexDouble*, t : ComplexDouble*, ldt : Int*)
    fun zlascl(type : Char*, kl : Int*, ku : Int*, cfrom : Double*, cto : Double*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, info : Int*)
    fun zlascl2(m : Int*, n : Int*, d__ : Double*, x : ComplexDouble*, ldx : Int*)
    fun zlaset(uplo : Char*, m : Int*, n : Int*, alpha : ComplexDouble*, beta : ComplexDouble*, a : ComplexDouble*, lda : Int*)
    fun zlasr(side : Char*, pivot : Char*, direct : Char*, m : Int*, n : Int*, c__ : Double*, s : Double*, a : ComplexDouble*, lda : Int*)
    fun zlassq(n : Int*, x : ComplexDouble*, incx : Int*, scale : Double*, sumsq : Double*)
    fun zlaswp(n : Int*, a : ComplexDouble*, lda : Int*, k1 : Int*, k2 : Int*, ipiv : Int*, incx : Int*)
    fun zlasyf(uplo : Char*, n : Int*, nb : Int*, kb : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, w : ComplexDouble*, ldw : Int*, info : Int*)
    fun zlat2c(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, sa : ComplexFloat*, ldsa : Int*, info : Int*)
    fun zlatbs(uplo : Char*, trans : Char*, diag : Char*, normin : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, x : ComplexDouble*, scale : Double*, cnorm : Double*, info : Int*)
    fun zlatdf(ijob : Int*, n : Int*, z__ : ComplexDouble*, ldz : Int*, rhs : ComplexDouble*, rdsum : Double*, rdscal : Double*, ipiv : Int*, jpiv : Int*)
    fun zlatms(m : Int*, n : Int*, dist : Char*, iseed : Int*, sym : Char*, d : Double*, mode : Int*, cond : Double*, dmax : Double*, kl : Int*, ku : Int*, pack : Char*, a : ComplexDouble*, lda : Int*, work : ComplexDouble*, info : Int*)
    fun zlatps(uplo : Char*, trans : Char*, diag : Char*, normin : Char*, n : Int*, ap : ComplexDouble*, x : ComplexDouble*, scale : Double*, cnorm : Double*, info : Int*)
    fun zlatrd(uplo : Char*, n : Int*, nb : Int*, a : ComplexDouble*, lda : Int*, e : Double*, tau : ComplexDouble*, w : ComplexDouble*, ldw : Int*)
    fun zlatrs(uplo : Char*, trans : Char*, diag : Char*, normin : Char*, n : Int*, a : ComplexDouble*, lda : Int*, x : ComplexDouble*, scale : Double*, cnorm : Double*, info : Int*)
    fun zlatrz(m : Int*, n : Int*, l : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*)
    fun zlatzm(side : Char*, m : Int*, n : Int*, v : ComplexDouble*, incv : Int*, tau : ComplexDouble*, c1 : ComplexDouble*, c2 : ComplexDouble*, ldc : Int*, work : ComplexDouble*)
    fun zlauu2(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, info : Int*)
    fun zlauum(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, info : Int*)
    fun zpbcon(uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, anorm : Double*, rcond : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zpbequ(uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, s : Double*, scond : Double*, amax : Double*, info : Int*)
    fun zpbrfs(uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : ComplexDouble*, ldab : Int*, afb : ComplexDouble*, ldafb : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zpbstf(uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, info : Int*)
    fun zpbsv(uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : ComplexDouble*, ldab : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zpbsvx(fact : Char*, uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : ComplexDouble*, ldab : Int*, afb : ComplexDouble*, ldafb : Int*, equed : Char*, s : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zpbtf2(uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, info : Int*)
    fun zpbtrf(uplo : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, info : Int*)
    fun zpbtrs(uplo : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : ComplexDouble*, ldab : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zpftrf(transr : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, info : Int*)
    fun zpftri(transr : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, info : Int*)
    fun zpftrs(transr : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zpocon(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, anorm : Double*, rcond : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zpoequ(n : Int*, a : ComplexDouble*, lda : Int*, s : Double*, scond : Double*, amax : Double*, info : Int*)
    fun zpoequb(n : Int*, a : ComplexDouble*, lda : Int*, s : Double*, scond : Double*, amax : Double*, info : Int*)
    fun zporfs(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zporfsx(uplo : Char*, equed : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, s : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zposv(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zposvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, equed : Char*, s : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zposvxx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, equed : Char*, s : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, rpvgrw : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zpotf2(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, info : Int*)
    fun zpotrf(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, info : Int*)
    fun zpotrf2(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, info : Int*)
    fun zpotri(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, info : Int*)
    fun zpotrs(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zppcon(uplo : Char*, n : Int*, ap : ComplexDouble*, anorm : Double*, rcond : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zppequ(uplo : Char*, n : Int*, ap : ComplexDouble*, s : Double*, scond : Double*, amax : Double*, info : Int*)
    fun zpprfs(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, afp : ComplexDouble*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zppsv(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zppsvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, afp : ComplexDouble*, equed : Char*, s : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zpptrf(uplo : Char*, n : Int*, ap : ComplexDouble*, info : Int*)
    fun zpptri(uplo : Char*, n : Int*, ap : ComplexDouble*, info : Int*)
    fun zpptrs(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zpstf2(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, piv : Int*, rank : Int*, tol : Double*, work : Double*, info : Int*)
    fun zpstrf(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, piv : Int*, rank : Int*, tol : Double*, work : Double*, info : Int*)
    fun zptcon(n : Int*, d : Double*, e : ComplexDouble*, anorm : Double*, rcond : Double*, rwork : Double*, info : Int*)
    fun zpteqr(compz : Char*, n : Int*, d : Double*, e : Double*, z : ComplexDouble*, ldz : Int*, work : Double*, info : Int*)
    fun zptrfs(uplo : Char*, n : Int*, nrhs : Int*, d : Double*, e : ComplexDouble*, df : Double*, ef : ComplexDouble*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zptsv(n : Int*, nrhs : Int*, d : Double*, e : ComplexDouble*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zptsvx(fact : Char*, n : Int*, nrhs : Int*, d : Double*, e : ComplexDouble*, df : Double*, ef : ComplexDouble*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zpttrf(n : Int*, d : Double*, e : ComplexDouble*, info : Int*)
    fun zpttrs(uplo : Char*, n : Int*, nrhs : Int*, d : Double*, e : ComplexDouble*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zptts2(iuplo : Int*, n : Int*, nrhs : Int*, d__ : Double*, e : ComplexDouble*, b : ComplexDouble*, ldb : Int*)
    fun zrot(n : Int*, cx : ComplexDouble*, incx : Int*, cy : ComplexDouble*, incy : Int*, c__ : Double*, s : ComplexDouble*)
    fun zspcon(uplo : Char*, n : Int*, ap : ComplexDouble*, ipiv : Int*, anorm : Double*, rcond : Double*, work : ComplexDouble*, info : Int*)
    fun zspmv(uplo : Char*, n : Int*, alpha : ComplexDouble*, ap : ComplexDouble*, x : ComplexDouble*, incx : Int*, beta : ComplexDouble*, y : ComplexDouble*, incy : Int*)
    fun zspr(uplo : Char*, n : Int*, alpha : ComplexDouble*, x : ComplexDouble*, incx : Int*, ap : ComplexDouble*)
    fun zsprfs(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, afp : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zspsv(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zspsvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, afp : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zsptrf(uplo : Char*, n : Int*, ap : ComplexDouble*, ipiv : Int*, info : Int*)
    fun zsptri(uplo : Char*, n : Int*, ap : ComplexDouble*, ipiv : Int*, work : ComplexDouble*, info : Int*)
    fun zsptrs(uplo : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zstedc(compz : Char*, n : Int*, d : Double*, e : Double*, z : ComplexDouble*, ldz : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun zstegr(jobz : Char*, range : Char*, n : Int*, d : Double*, e : Double*, vl : Double*, vu : Double*, il : Int*, iu : Int*, abstol : Double*, m : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, isuppz : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun zstein(n : Int*, d : Double*, e : Double*, m : Int*, w : Double*, iblock : Int*, isplit : Int*, z : ComplexDouble*, ldz : Int*, work : Double*, iwork : Int*, ifail : Int*, info : Int*)
    fun zstemr(jobz : Char*, range : Char*, n : Int*, d : Double*, e : Double*, vl : Double*, vu : Double*, il : Int*, iu : Int*, m : Int*, w : Double*, z : ComplexDouble*, ldz : Int*, nzc : Int*, isuppz : Int*, tryrac : Int*, work : Double*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun zsteqr(compz : Char*, n : Int*, d : Double*, e : Double*, z : ComplexDouble*, ldz : Int*, work : Double*, info : Int*)
    fun zsycon(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, anorm : Double*, rcond : Double*, work : ComplexDouble*, info : Int*)
    fun zsycon_3(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, e : ComplexDouble*, ipiv : Int*, anorm : Double*, rcond : Double*, work : ComplexDouble*, info : Int*)
    fun zsyconv(uplo : Char*, way : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, e : ComplexDouble*, info : Int*)
    fun zsyequb(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, s : Double*, scond : Double*, amax : Double*, work : ComplexDouble*, info : Int*)
    fun zsymv(uplo : Char*, n : Int*, alpha : ComplexDouble*, a : ComplexDouble*, lda : Int*, x : ComplexDouble*, incx : Int*, beta : ComplexDouble*, y : ComplexDouble*, incy : Int*)
    fun zsyr(uplo : Char*, n : Int*, alpha : ComplexDouble*, x : ComplexDouble*, incx : Int*, a : ComplexDouble*, lda : Int*)
    fun zsyrfs(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zsyrfsx(uplo : Char*, equed : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, s : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zsysv(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zsysv_aa(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zsysv_aa_2stage(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, tb : ComplexDouble*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zsysv_rk(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, e : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zsysv_rook(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zsysvx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, ferr : Double*, berr : Double*, work : ComplexDouble*, lwork : Int*, rwork : Double*, info : Int*)
    fun zsysvxx(fact : Char*, uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, af : ComplexDouble*, ldaf : Int*, ipiv : Int*, equed : Char*, s : Double*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, rcond : Double*, rpvgrw : Double*, berr : Double*, n_err_bnds : Int*, err_bnds_norm : Double*, err_bnds_comp : Double*, nparams : Int*, params : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun zsyswapr(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, i1 : Int*, i2 : Int*)
    fun zsytf2(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, info : Int*)
    fun zsytrf(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zsytrf_aa(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zsytrf_aa_2stage(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, tb : ComplexDouble*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zsytrf_rk(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, e : ComplexDouble*, ipiv : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zsytrf_rook(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zsytri(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, work : ComplexDouble*, info : Int*)
    fun zsytri2(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zsytri2x(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, work : ComplexDouble*, nb : Int*, info : Int*)
    fun zsytri_3(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, e : ComplexDouble*, ipiv : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zsytrs(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zsytrs2(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, info : Int*)
    fun zsytrs_3(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, e : ComplexDouble*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zsytrs_aa(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zsytrs_aa_2stage(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, tb : ComplexDouble*, ltb : Int*, ipiv : Int*, ipiv2 : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun zsytrs_rook(uplo : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, ipiv : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun ztbcon(norm : Char*, uplo : Char*, diag : Char*, n : Int*, kd : Int*, ab : ComplexDouble*, ldab : Int*, rcond : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun ztbrfs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : ComplexDouble*, ldab : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun ztbtrs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, kd : Int*, nrhs : Int*, ab : ComplexDouble*, ldab : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun ztfsm(transr : Char*, side : Char*, uplo : Char*, trans : Char*, diag : Char*, m : Int*, n : Int*, alpha : ComplexDouble*, a : ComplexDouble*, b : ComplexDouble*, ldb : Int*)
    fun ztftri(transr : Char*, uplo : Char*, diag : Char*, n : Int*, a : ComplexDouble*, info : Int*)
    fun ztfttp(transr : Char*, uplo : Char*, n : Int*, arf : ComplexDouble*, ap : ComplexDouble*, info : Int*)
    fun ztfttr(transr : Char*, uplo : Char*, n : Int*, arf : ComplexDouble*, a : ComplexDouble*, lda : Int*, info : Int*)
    fun ztgevc(side : Char*, howmny : Char*, select : Int*, n : Int*, s : ComplexDouble*, lds : Int*, p : ComplexDouble*, ldp : Int*, vl : ComplexDouble*, ldvl : Int*, vr : ComplexDouble*, ldvr : Int*, mm : Int*, m : Int*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun ztgex2(wantq : Char*, wantz : Char*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, q : ComplexDouble*, ldq : Int*, z__ : ComplexDouble*, ldz : Int*, j1 : Int*, info : Int*)
    fun ztgexc(wantq : Int*, wantz : Int*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, q : ComplexDouble*, ldq : Int*, z : ComplexDouble*, ldz : Int*, ifst : Int*, ilst : Int*, info : Int*)
    fun ztgsen(ijob : Int*, wantq : Int*, wantz : Int*, select : Int*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, alpha : ComplexDouble*, beta : ComplexDouble*, q : ComplexDouble*, ldq : Int*, z : ComplexDouble*, ldz : Int*, m : Int*, pl : Double*, pr : Double*, dif : Double*, work : ComplexDouble*, lwork : Int*, iwork : Int*, liwork : Int*, info : Int*)
    fun ztgsja(jobu : Char*, jobv : Char*, jobq : Char*, m : Int*, p : Int*, n : Int*, k : Int*, l : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, tola : Double*, tolb : Double*, alpha : Double*, beta : Double*, u : ComplexDouble*, ldu : Int*, v : ComplexDouble*, ldv : Int*, q : ComplexDouble*, ldq : Int*, work : ComplexDouble*, ncycle : Int*, info : Int*)
    fun ztgsna(job : Char*, howmny : Char*, select : Int*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, vl : ComplexDouble*, ldvl : Int*, vr : ComplexDouble*, ldvr : Int*, s : Double*, dif : Double*, mm : Int*, m : Int*, work : ComplexDouble*, lwork : Int*, iwork : Int*, info : Int*)
    fun ztgsy2(trans : Char*, ijob : Int*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, c__ : ComplexDouble*, ldc : Int*, d__ : ComplexDouble*, ldd : Int*, e : ComplexDouble*, lde : Int*, f : ComplexDouble*, ldf : Int*, scale : Double*, rdsum : Double*, rdscal : Double*, info : Int*)
    fun ztgsyl(trans : Char*, ijob : Int*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, c : ComplexDouble*, ldc : Int*, d : ComplexDouble*, ldd : Int*, e : ComplexDouble*, lde : Int*, f : ComplexDouble*, ldf : Int*, dif : Double*, scale : Double*, work : ComplexDouble*, lwork : Int*, iwork : Int*, info : Int*)
    fun ztpcon(norm : Char*, uplo : Char*, diag : Char*, n : Int*, ap : ComplexDouble*, rcond : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun ztplqt(m : Int*, n : Int*, l : Int*, mb : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, t : ComplexDouble*, ldt : Int*, work : ComplexDouble*, info : Int*)
    fun ztplqt2(m : Int*, n : Int*, l : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, t : ComplexDouble*, ldt : Int*, info : Int*)
    fun ztpmlqt(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, mb : Int*, v : ComplexDouble*, ldv : Int*, t : ComplexDouble*, ldt : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, info : Int*)
    fun ztpmqrt(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, nb : Int*, v : ComplexDouble*, ldv : Int*, t : ComplexDouble*, ldt : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, info : Int*)
    fun ztpqrt(m : Int*, n : Int*, l : Int*, nb : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, t : ComplexDouble*, ldt : Int*, work : ComplexDouble*, info : Int*)
    fun ztpqrt2(m : Int*, n : Int*, l : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, t : ComplexDouble*, ldt : Int*, info : Int*)
    fun ztprfb(side : Char*, trans : Char*, direct : Char*, storev : Char*, m : Int*, n : Int*, k : Int*, l : Int*, v : ComplexDouble*, ldv : Int*, t : ComplexDouble*, ldt : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, work : ComplexDouble*, ldwork : Int*)
    fun ztprfs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun ztptri(uplo : Char*, diag : Char*, n : Int*, ap : ComplexDouble*, info : Int*)
    fun ztptrs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, ap : ComplexDouble*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun ztpttf(transr : Char*, uplo : Char*, n : Int*, ap : ComplexDouble*, arf : ComplexDouble*, info : Int*)
    fun ztpttr(uplo : Char*, n : Int*, ap : ComplexDouble*, a : ComplexDouble*, lda : Int*, info : Int*)
    fun ztrcon(norm : Char*, uplo : Char*, diag : Char*, n : Int*, a : ComplexDouble*, lda : Int*, rcond : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun ztrevc(side : Char*, howmny : Char*, select : Int*, n : Int*, t : ComplexDouble*, ldt : Int*, vl : ComplexDouble*, ldvl : Int*, vr : ComplexDouble*, ldvr : Int*, mm : Int*, m : Int*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun ztrevc3(side : Char*, howmny : Char*, select : Int*, n : Int*, t : ComplexDouble*, ldt : Int*, vl : ComplexDouble*, ldvl : Int*, vr : ComplexDouble*, ldvr : Int*, mm : Int*, m : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, info : Int*)
    fun ztrexc(compq : Char*, n : Int*, t : ComplexDouble*, ldt : Int*, q : ComplexDouble*, ldq : Int*, ifst : Int*, ilst : Int*, info : Int*)
    fun ztrrfs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, x : ComplexDouble*, ldx : Int*, ferr : Double*, berr : Double*, work : ComplexDouble*, rwork : Double*, info : Int*)
    fun ztrsen(job : Char*, compq : Char*, select : Int*, n : Int*, t : ComplexDouble*, ldt : Int*, q : ComplexDouble*, ldq : Int*, w : ComplexDouble*, m : Int*, s : Double*, sep : Double*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun ztrsna(job : Char*, howmny : Char*, select : Int*, n : Int*, t : ComplexDouble*, ldt : Int*, vl : ComplexDouble*, ldvl : Int*, vr : ComplexDouble*, ldvr : Int*, s : Double*, sep : Double*, mm : Int*, m : Int*, work : ComplexDouble*, ldwork : Int*, rwork : Double*, info : Int*)
    fun ztrsyl(trana : Char*, tranb : Char*, isgn : Int*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, c : ComplexDouble*, ldc : Int*, scale : Double*, info : Int*)
    fun ztrsyl3(trana : Char*, tranb : Char*, isgn : Int*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, c : ComplexDouble*, ldc : Int*, scale : Double*, swork : Double*, ldswork : Int*, info : Int*)
    fun ztrti2(uplo : Char*, diag : Char*, n : Int*, a : ComplexDouble*, lda : Int*, info : Int*)
    fun ztrtri(uplo : Char*, diag : Char*, n : Int*, a : ComplexDouble*, lda : Int*, info : Int*)
    fun ztrtrs(uplo : Char*, trans : Char*, diag : Char*, n : Int*, nrhs : Int*, a : ComplexDouble*, lda : Int*, b : ComplexDouble*, ldb : Int*, info : Int*)
    fun ztrttf(transr : Char*, uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, arf : ComplexDouble*, info : Int*)
    fun ztrttp(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, ap : ComplexDouble*, info : Int*)
    fun ztzrqf(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, info : Int*)
    fun ztzrzf(m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zunbdb(trans : Char*, signs : Char*, m : Int*, p : Int*, q : Int*, x11 : ComplexDouble*, ldx11 : Int*, x12 : ComplexDouble*, ldx12 : Int*, x21 : ComplexDouble*, ldx21 : Int*, x22 : ComplexDouble*, ldx22 : Int*, theta : Double*, phi : Double*, taup1 : ComplexDouble*, taup2 : ComplexDouble*, tauq1 : ComplexDouble*, tauq2 : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zuncsd(jobu1 : Char*, jobu2 : Char*, jobv1t : Char*, jobv2t : Char*, trans : Char*, signs : Char*, m : Int*, p : Int*, q : Int*, x11 : ComplexDouble*, ldx11 : Int*, x12 : ComplexDouble*, ldx12 : Int*, x21 : ComplexDouble*, ldx21 : Int*, x22 : ComplexDouble*, ldx22 : Int*, theta : Double*, u1 : ComplexDouble*, ldu1 : Int*, u2 : ComplexDouble*, ldu2 : Int*, v1_t : ComplexDouble*, ldv1t : Int*, v2_t : ComplexDouble*, ldv2t : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, info : Int*)
    fun zuncsd2by1(jobu1 : Char*, jobu2 : Char*, jobv1t : Char*, m : Int*, p : Int*, q : Int*, x11 : ComplexDouble*, ldx11 : Int*, x21 : ComplexDouble*, ldx21 : Int*, theta : Double*, u1 : ComplexDouble*, ldu1 : Int*, u2 : ComplexDouble*, ldu2 : Int*, v1_t : ComplexDouble*, ldv1t : Int*, work : ComplexDouble*, lwork : Int*, rwork : Double*, lrwork : Int*, iwork : Int*, info : Int*)
    fun zung2l(m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, info : Int*)
    fun zung2r(m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, info : Int*)
    fun zungbr(vect : Char*, m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zunghr(n : Int*, ilo : Int*, ihi : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zungl2(m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, info : Int*)
    fun zunglq(m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zungql(m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zungqr(m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zungr2(m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, info : Int*)
    fun zungrq(m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zungtr(uplo : Char*, n : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zungtsqr_row(m : Int*, n : Int*, mb : Int*, nb : Int*, a : ComplexDouble*, lda : Int*, t : ComplexDouble*, ldt : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zunm2l(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, c__ : ComplexDouble*, ldc : Int*, work : ComplexDouble*, info : Int*)
    fun zunm2r(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, c__ : ComplexDouble*, ldc : Int*, work : ComplexDouble*, info : Int*)
    fun zunmbr(vect : Char*, side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zunmhr(side : Char*, trans : Char*, m : Int*, n : Int*, ilo : Int*, ihi : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zunml2(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, c__ : ComplexDouble*, ldc : Int*, work : ComplexDouble*, info : Int*)
    fun zunmlq(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zunmql(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zunmqr(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zunmr2(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, c__ : ComplexDouble*, ldc : Int*, work : ComplexDouble*, info : Int*)
    fun zunmr3(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, c__ : ComplexDouble*, ldc : Int*, work : ComplexDouble*, info : Int*)
    fun zunmrq(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zunmrz(side : Char*, trans : Char*, m : Int*, n : Int*, k : Int*, l : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zunmtr(side : Char*, uplo : Char*, trans : Char*, m : Int*, n : Int*, a : ComplexDouble*, lda : Int*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, lwork : Int*, info : Int*)
    fun zupgtr(uplo : Char*, n : Int*, ap : ComplexDouble*, tau : ComplexDouble*, q : ComplexDouble*, ldq : Int*, work : ComplexDouble*, info : Int*)
    fun zupmtr(side : Char*, uplo : Char*, trans : Char*, m : Int*, n : Int*, ap : ComplexDouble*, tau : ComplexDouble*, c : ComplexDouble*, ldc : Int*, work : ComplexDouble*, info : Int*)
  end
{% end %}
